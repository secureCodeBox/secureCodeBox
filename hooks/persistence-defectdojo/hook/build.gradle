// SPDX-FileCopyrightText: the secureCodeBox authors
//
// SPDX-License-Identifier: Apache-2.0

plugins {
	id 'java'
  id "io.freefair.lombok" version "6.5.0-rc1"
}

group = 'io.securecodebox'
version = '0.1.0-SNAPSHOT'
sourceCompatibility = '17'

repositories {
	mavenCentral()
  maven {
    url = "https://oss.sonatype.org/content/repositories/snapshots/"
  }
}

dependencies {
  implementation 'io.kubernetes:client-java:12.0.0'

  implementation 'io.securecodebox:defectdojo-client:0.0.38-SNAPSHOT'

  implementation group: 'org.springframework', name: 'spring-web', version: '5.3.9'
  implementation 'com.fasterxml.jackson.core:jackson-core:2.12.4'
  implementation 'com.fasterxml.jackson.core:jackson-annotations:2.12.4'
  implementation 'com.fasterxml.jackson.core:jackson-databind:2.12.4'
  implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.12.4'

  implementation group: 'org.slf4j', name: 'slf4j-api', version: '1.7.30'
  implementation 'org.slf4j:slf4j-log4j12:1.7.30'

  testImplementation(platform('org.junit:junit-bom:5.7.0'))
  testImplementation('org.junit.jupiter:junit-jupiter')

  testImplementation "org.mockito:mockito-core:2.+"
  testImplementation "org.mockito:mockito-junit-jupiter:2.+"
}

test {
	useJUnitPlatform()
}

def mainClassName = "io.securecodebox.persistence.DefectDojoPersistenceProvider"

jar {
  duplicatesStrategy = DuplicatesStrategy.EXCLUDE
  
  manifest {
    attributes "Main-Class": "$mainClassName"
  }

  from {
    configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
  }

  // Exclude signatures from dependency jars, as these would not match the fat jars content.
  exclude 'META-INF/*.RSA', 'META-INF/*.SF','META-INF/*.DSA'
}
