// SPDX-FileCopyrightText: 2020 iteratec GmbH
//
// SPDX-License-Identifier: Apache-2.0

/*
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.18.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.securecodebox.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.securecodebox.models.V1ScanSpecCascades;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * ScanSpec defines the desired state of Scan
 */
@ApiModel(description = "ScanSpec defines the desired state of Scan")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-03-26T19:41:39.505Z[Etc/UTC]")
public class V1ScanSpec {
  public static final String SERIALIZED_NAME_CASCADES = "cascades";
  @SerializedName(SERIALIZED_NAME_CASCADES)
  private V1ScanSpecCascades cascades;

  public static final String SERIALIZED_NAME_PARAMETERS = "parameters";
  @SerializedName(SERIALIZED_NAME_PARAMETERS)
  private List<String> parameters = null;

  public static final String SERIALIZED_NAME_SCAN_TYPE = "scanType";
  @SerializedName(SERIALIZED_NAME_SCAN_TYPE)
  private String scanType;


  public V1ScanSpec cascades(V1ScanSpecCascades cascades) {
    
    this.cascades = cascades;
    return this;
  }

   /**
   * Get cascades
   * @return cascades
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public V1ScanSpecCascades getCascades() {
    return cascades;
  }


  public void setCascades(V1ScanSpecCascades cascades) {
    this.cascades = cascades;
  }


  public V1ScanSpec parameters(List<String> parameters) {
    
    this.parameters = parameters;
    return this;
  }

  public V1ScanSpec addParametersItem(String parametersItem) {
    if (this.parameters == null) {
      this.parameters = new ArrayList<String>();
    }
    this.parameters.add(parametersItem);
    return this;
  }

   /**
   * All CLI parameters to configure the scan container.
   * @return parameters
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "All CLI parameters to configure the scan container.")

  public List<String> getParameters() {
    return parameters;
  }


  public void setParameters(List<String> parameters) {
    this.parameters = parameters;
  }


  public V1ScanSpec scanType(String scanType) {
    
    this.scanType = scanType;
    return this;
  }

   /**
   * The name of the scanType which should be started.
   * @return scanType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The name of the scanType which should be started.")

  public String getScanType() {
    return scanType;
  }


  public void setScanType(String scanType) {
    this.scanType = scanType;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    V1ScanSpec v1ScanSpec = (V1ScanSpec) o;
    return Objects.equals(this.cascades, v1ScanSpec.cascades) &&
        Objects.equals(this.parameters, v1ScanSpec.parameters) &&
        Objects.equals(this.scanType, v1ScanSpec.scanType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(cascades, parameters, scanType);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class V1ScanSpec {\n");
    sb.append("    cascades: ").append(toIndentedString(cascades)).append("\n");
    sb.append("    parameters: ").append(toIndentedString(parameters)).append("\n");
    sb.append("    scanType: ").append(toIndentedString(scanType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

