# SPDX-FileCopyrightText: 2020 iteratec GmbH
#
# SPDX-License-Identifier: Apache-2.0

# Default values for dispatcher.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

image:
  # image.repository -- Hook image repository
  repository: docker.io/securecodebox/persistence-elastic
  # image.tag -- The image Tag defaults to the charts version if not defined.
  # @default -- defaults to the charts version
  tag: null

# indexPrefix -- Define a specific index prefix used for all elasticsearch indices.
indexPrefix: "scbv2"
# indexSuffix -- Define a specific index suffix based on date pattern (YEAR (yyyy), MONTH (yyyy-MM), WEEK (yyyy-'W'W), DATE (yyyy-MM-dd)). We use Luxon for date formatting (https://moment.github.io/luxon/docs/manual/formatting.html#table-of-tokens)
indexSuffix: “yyyy-MM-dd”
# indexAppendNamespace -- Define if the name of the namespace where this hook is deployed to must be added to the index name. The namespace can be used to separate index by tenants (namespaces).
indexAppendNamespace: true

externalElasticStack:
  # externalElasticStack.enabled -- Enable this when you already have an Elastic Stack running to which you want to send your results
  enabled: false
  # externalElasticStack.elasticsearchAddress -- The URL of the elasticsearch service to persists all findings to.
  elasticsearchAddress: "https://elasticsearch.example.com"
  # externalElasticStack.kibanaAddress -- The URL of the kibana service used to visualize all findings.
  kibanaAddress: "https://kibana.example.com"

# authentication -- Configure authentication schema and credentials the persistence provider should use to connect to elasticsearch
# user and apikey are mutually exclusive, only set one!
authentication:
  # authentication.userSecret -- Link a pre-existing generic secret with `username` and `password` key / value pairs
  userSecret: null
  # authentication.apiKeySecret -- Link a pre-existing generic secret with `id` and `key` key / value pairs
  apiKeySecret: null

# elasticsearch -- Configures the included elasticsearch subchart (see: https://github.com/elastic/helm-charts/tree/elasticsearch)
elasticsearch:
  # elasticsearch.enabled -- Enable if you want to deploy an elasticsearch service.
  enabled: true
  # elasticsearch.replicas -- Kubernetes replica count for the StatefulSet (i.e. how many pods)
  replicas: 1
  # elasticsearch.minimumMasterNodes -- The value for discovery.zen.minimum_master_nodes. Should be set to (master_eligible_nodes / 2) + 1. Ignored in Elasticsearch versions >= 7
  minimumMasterNodes: 1
  # image: docker.elastic.co/elasticsearch/elasticsearch-oss

# kibana -- Configures included Elasticsearch subchart
kibana:
  # kibana.enabled -- Enable if you want to deploy an kibana service (see: https://github.com/elastic/helm-charts/tree/master/kibana)
  enabled: true
  # image: docker.elastic.co/kibana/kibana-oss

dashboardImporter:
  image:
    # image.repository -- Image repository for the dashboard importer job
    repository: securecodebox/persistence-elastic-dashboard-importer
    # image.tag -- Image tag for the dashboard importer job
    # @default -- defaults to the charts version
    tag: null

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

podSecurityContext:
  {}
  # fsGroup: 2000

securityContext:
  {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

resources: {}

nodeSelector: {}

tolerations: []

affinity: {}

hookJob:
  # hookJob.ttlSecondsAfterFinished -- Seconds after which the kubernetes job for the hook will be deleted. Requires the Kubernetes TTLAfterFinished controller: https://kubernetes.io/docs/concepts/workloads/controllers/ttlafterfinished/
  ttlSecondsAfterFinished: null
