on:
  release:
    types: [published]
name: "Publish Helm Charts"
jobs:
  helm:
    name: Package and Publish
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: "Install yq"
        run: |
          sudo snap install yq
      - name: Parse Tag 
        run: echo ::set-env name=RELEASE_VERSION::${GITHUB_REF#refs/*/}
      - name: "Publish Helm3 Charts"
        env:
          HELM_REGISTRY: https://charts.securecodebox.io
          USERNAME: ${{ secrets.HELM_REGISTRY_USERNAME }}
          PASSWORD: ${{ secrets.HELM_REGISTRY_PASSWORD }}
        run: |
          # Publish all helm3 charts in all folders containing a `Chart.yaml` file
          # https://github.com/koalaman/shellcheck/wiki/SC2044
          find . -type f -name Chart.yaml -print0 | while IFS= read -r -d '' chart; do
          (
            dir="$(dirname "${chart}")"
            cd "${dir}" || exit
            echo "Processing Helm3 Chart in $dir"
            helm package --version $RELEASE_VERSION .
            NAME=$(yq read - name < Chart.yaml)
            curl --silent --show-error --user "${USERNAME}:${PASSWORD}" --data-binary "@${NAME}-${RELEASE_VERSION}.tgz" "${HELM_REGISTRY}/api/charts"
          )
          done
      - name: "Publish Helm2 Charts"
        env:
          HELM_REGISTRY: https://charts-helm2.securecodebox.io
          USERNAME: ${{ secrets.HELM_REGISTRY_USERNAME }}
          PASSWORD: ${{ secrets.HELM_REGISTRY_PASSWORD }}
        run: |
          # Publish all helm2 charts in all folders containing a `helm2.Chart.yaml` file
          # https://github.com/koalaman/shellcheck/wiki/SC2044
          find . -type f -name helm2.Chart.yaml -print0 | while IFS= read -r -d '' chart; do
          (
            dir="$(dirname "${chart}")"
            cd "${dir}" || exit
            mv Chart.yaml helm3.Chart.yaml
            mv helm2.Chart.yaml Chart.yaml
            if [ ${dir} = "operator" ]
            then
                cp -R crds templates/crds
            fi
            echo "Restoring Helm2 Chart and replace Helm3 Chart temporary"
            [ ! -f helm2.requirements.lock ] || mv helm2.requirements.lock requirements.lock
            [ ! -f helm2.requirements.yaml ] || mv helm2.requirements.yaml requirements.yaml
            echo "Processing Helm2 Chart in $dir"
            helm package --version $RELEASE_VERSION .
            NAME=$(yq read - name < Chart.yaml)
            curl --silent --show-error --user "${USERNAME}:${PASSWORD}" --data-binary "@${NAME}-${RELEASE_VERSION}.tgz" "${HELM_REGISTRY}/api/charts"
          )
          done