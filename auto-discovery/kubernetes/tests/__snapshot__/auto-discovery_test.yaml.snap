matches the snapshot:
  1: |
    apiVersion: v1
    data:
      auto-discovery.yaml: |
        {
          "apiVersion": "config.securecodebox.io/v1",
          "cluster": {
            "name": "docker-desktop"
          },
          "containerAutoDiscovery": {
            "enabled": false,
            "passiveReconcileInterval": "1m",
            "scanConfigs": [
              {
                "annotations": {
                  "defectdojo.securecodebox.io/engagement-name": "{{ .Target.Name }}",
                  "defectdojo.securecodebox.io/engagement-version": "{{if (index .Target.Labels `app.kubernetes.io/version`) }}{{ index .Target.Labels `app.kubernetes.io/version` }}{{end}}",
                  "defectdojo.securecodebox.io/product-name": "{{ .Cluster.Name }} | {{ .Namespace.Name }} | {{ .Target.Name }}",
                  "defectdojo.securecodebox.io/product-tags": "cluster/{{ .Cluster.Name }},namespace/{{ .Namespace.Name }}"
                },
                "hookSelector": {},
                "labels": {},
                "name": "trivy",
                "parameters": [
                  "{{ .ImageID }}"
                ],
                "repeatInterval": "168h",
                "scanType": "trivy-image-autodiscovery",
                "volumeMounts": [],
                "volumes": []
              }
            ]
          },
          "health": {
            "healthProbeBindAddress": ":8081"
          },
          "imagePullSecretConfig": {
            "mapImagePullSecretsToEnvironmentVariables": true,
            "passwordEnvironmentVariableName": "TRIVY_PASSWORD",
            "usernameEnvironmentVariableName": "TRIVY_USERNAME"
          },
          "kind": "AutoDiscoveryConfig",
          "leaderElection": {
            "leaderElect": true,
            "resourceName": "0e41a1f4.securecodebox.io"
          },
          "metrics": {
            "bindAddress": "127.0.0.1:8080"
          },
          "resourceInclusion": {
            "mode": "enabled-per-namespace"
          },
          "serviceAutoDiscovery": {
            "enabled": true,
            "passiveReconcileInterval": "1m",
            "scanConfigs": [
              {
                "annotations": {
                  "defectdojo.securecodebox.io/engagement-name": "{{ .Target.Name }}",
                  "defectdojo.securecodebox.io/engagement-version": "{{if (index .Target.Labels `app.kubernetes.io/version`) }}{{ index .Target.Labels `app.kubernetes.io/version` }}{{end}}",
                  "defectdojo.securecodebox.io/product-name": "{{ .Cluster.Name }} | {{ .Namespace.Name }} | {{ .Target.Name }}",
                  "defectdojo.securecodebox.io/product-tags": "cluster/{{ .Cluster.Name }},namespace/{{ .Namespace.Name }}"
                },
                "hookSelector": {},
                "labels": {},
                "name": "zap",
                "parameters": [
                  "-t",
                  "{{ .Host.Type }}://{{ .Service.Name }}.{{ .Service.Namespace }}.svc:{{ .Host.Port }}"
                ],
                "repeatInterval": "168h",
                "scanType": "zap-advanced-scan",
                "volumeMounts": [],
                "volumes": []
              }
            ]
          }
        }
    kind: ConfigMap
    metadata:
      name: auto-discovery
  2: |
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      labels:
        control-plane: auto-discovery
      name: auto-discovery
    spec:
      replicas: 1
      selector:
        matchLabels:
          control-plane: auto-discovery
      template:
        metadata:
          labels:
            control-plane: auto-discovery
        spec:
          containers:
            - args:
                - --config
                - /etc/securecodebox/auto-discovery.yaml
              command:
                - /manager
              image: securecodebox/auto-discovery-kubernetes:0.0.0
              imagePullPolicy: IfNotPresent
              livenessProbe:
                httpGet:
                  path: /healthz
                  port: 8081
                initialDelaySeconds: 15
                periodSeconds: 20
              name: auto-discovery
              readinessProbe:
                httpGet:
                  path: /readyz
                  port: 8081
                initialDelaySeconds: 5
                periodSeconds: 10
              resources:
                limits:
                  cpu: 100m
                  memory: 100Mi
                requests:
                  cpu: 100m
                  memory: 20Mi
              securityContext:
                allowPrivilegeEscalation: false
                capabilities:
                  drop:
                    - all
                privileged: false
                readOnlyRootFilesystem: true
                runAsNonRoot: true
              volumeMounts:
                - mountPath: /etc/securecodebox/auto-discovery.yaml
                  name: config
                  readOnly: true
                  subPath: auto-discovery.yaml
          imagePullSecrets:
            - name: foo
          securityContext:
            fsGroup: 1234
          serviceAccountName: auto-discovery
          terminationGracePeriodSeconds: 10
          volumes:
            - configMap:
                name: auto-discovery
              name: config
  3: |
    apiVersion: rbac.authorization.k8s.io/v1
    kind: Role
    metadata:
      name: auto-discovery-leader-election-role
    rules:
      - apiGroups:
          - ""
        resources:
          - configmaps
        verbs:
          - get
          - list
          - watch
          - create
          - update
          - patch
          - delete
      - apiGroups:
          - coordination.k8s.io
        resources:
          - leases
        verbs:
          - get
          - list
          - watch
          - create
          - update
          - patch
          - delete
      - apiGroups:
          - ""
        resources:
          - events
        verbs:
          - create
          - patch
  4: |
    apiVersion: rbac.authorization.k8s.io/v1
    kind: RoleBinding
    metadata:
      name: auto-discovery-leader-election-rolebinding
    roleRef:
      apiGroup: rbac.authorization.k8s.io
      kind: Role
      name: auto-discovery-leader-election-role
    subjects:
      - kind: ServiceAccount
        name: auto-discovery
        namespace: NAMESPACE
  5: |
    apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRole
    metadata:
      name: auto-discovery
    rules:
      - apiGroups:
          - ""
        resources:
          - namespaces
        verbs:
          - get
          - list
          - watch
      - apiGroups:
          - ""
        resources:
          - pods
        verbs:
          - get
          - list
          - watch
      - apiGroups:
          - ""
        resources:
          - pods/status
        verbs:
          - get
      - apiGroups:
          - ""
        resources:
          - services
        verbs:
          - get
          - list
          - watch
      - apiGroups:
          - ""
        resources:
          - services/status
        verbs:
          - get
      - apiGroups:
          - execution.securecodebox.io
        resources:
          - scantypes
        verbs:
          - get
          - list
          - watch
      - apiGroups:
          - execution.securecodebox.io
        resources:
          - scheduledscans
        verbs:
          - create
          - get
          - list
          - patch
          - update
          - watch
      - apiGroups:
          - execution.securecodebox.io/status
        resources:
          - scheduledscans
        verbs:
          - get
          - patch
          - update
  6: |
    apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRoleBinding
    metadata:
      name: auto-discovery
    roleRef:
      apiGroup: rbac.authorization.k8s.io
      kind: ClusterRole
      name: auto-discovery
    subjects:
      - kind: ServiceAccount
        name: auto-discovery
        namespace: NAMESPACE
  7: |
    apiVersion: v1
    kind: ServiceAccount
    metadata:
      name: auto-discovery
