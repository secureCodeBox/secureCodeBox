version: '2.1'
services:
  engine:
    image: securecodebox/engine:${DEFAULT_TAG}
    depends_on:
      - camundadb
    ports:
      - "8080:8080"
    networks:
      - frontend
    labels:
      container_group: core
    volumes:
      - ./plugins/:/scb-engine/plugins/
    environment:
      - CAMUNDA_BPM_DATABASE_TYPE=mysql
      - SPRING_DATASOURCE_URL=jdbc:mysql://camundadb:3306/${CAMUNDADB_DATABASE}
      - SPRING_DATASOURCE_USERNAME=${CAMUNDADB_USER}
      - SPRING_DATASOURCE_PASSWORD=${CAMUNDADB_PW}
      #ElasticSearch Configuration
      - SECURECODEBOX_PERSISTENCE_ELASTICSEARCH_ENABLED=${ENABLE_ELASTICSEARCH}
      - SECURECODEBOX_PERSISTENCE_ELASTICSEARCH_HOST=persistence-elasticsearch
      - SECURECODEBOX_PERSISTENCE_ELASTICSEARCH_PORT=9200
      - SECURECODEBOX_PERSISTENCE_ELASTICSEARCH_INDEX_PREFIX=securecodebox
      - SECURECODEBOX_PERSISTENCE_ELASTICSEARCH_INDEX_DELETE_ON_INIT=false
      #DefectDojo Configuration
      - SECURECODEBOX_PERSISTENCE_DEFECTDOJO_ENABLED=${ENABLE_DEFECT_DOJO}
      - SECURECODEBOX_PERSISTENCE_DEFECTDOJO_URL=http://persistence-defect-dojo:8000
      - SECURECODEBOX_PERSISTENCE_DEFECTDOJO_AUTH_KEY=${DEFECT_DOJO_API_KEY}
      - SECURECODEBOX_PERSISTENCE_DEFECTDOJO_AUTH_NAME=admin
      - SECURECODEBOX_DEFAULT_TARGET_NAME=JuiceShop Test Host
      - SECURECODEBOX_DEFAULT_TARGET_LOCATION=juice-shop
      - SECURECODEBOX_DEFAULT_TARGET_URI=http://juice-shop:3000
      - SECURECODEBOX_DEFAULT_CONTEXT=JuiceShop Test Scan
      - SECURECODEBOX_USER_SCANNER=${ENGINE_SCANNERSERVICES_USER}
      - SECURECODEBOX_USER_SCANNER_PW=${ENGINE_SCANNERSERVICES_PASSWORD}
      # Admin User setup
      - CAMUNDA_BPM_ADMIN-USER_ID=${CAMUNDA_BPM_ADMIN_USER_ID}
      - CAMUNDA_BPM_ADMIN-USER_PASSWORD=${CAMUNDA_BPM_ADMIN_USER_PASSWORD}
    restart: on-failure:3

  camundadb:
      image: mysql:5.7
      networks:
        - frontend
      volumes:
        - camundadb-datastore:/var/lib/mysql
      labels:
        container_group: infrastructure
      command: --max_allowed_packet=65011712      # 512M
      environment:
        - MYSQL_ROOT_PASSWORD=${CAMUNDADB_ROOT_PW}
        - MYSQL_DATABASE=${CAMUNDADB_DATABASE}
        - MYSQL_USER=${CAMUNDADB_USER}
        - MYSQL_PASSWORD=${CAMUNDADB_PW}

  scanner-infrastructure-nmap:
    image: securecodebox/nmap:${DEFAULT_TAG}
    depends_on:
      engine:
        condition: service_healthy 
    networks:
      - frontend
    labels:
      container_group: scanner
    environment:
      - ENGINE_ADDRESS=http://engine:8080
      - ENGINE_BASIC_AUTH_USER=${ENGINE_SCANNERSERVICES_USER}
      - ENGINE_BASIC_AUTH_PASSWORD=${ENGINE_SCANNERSERVICES_PASSWORD}

  scanner-webserver-nikto:
    image: securecodebox/nikto:${DEFAULT_TAG}
    depends_on:
      engine:
        condition: service_healthy 
    networks:
      - frontend
    labels:
      container_group: scanner
    environment:
      - ENGINE_ADDRESS=http://engine:8080
      - ENGINE_BASIC_AUTH_USER=${ENGINE_SCANNERSERVICES_USER}
      - ENGINE_BASIC_AUTH_PASSWORD=${ENGINE_SCANNERSERVICES_PASSWORD}

  scanner-webapplication-zap:
      image: securecodebox/zap:${DEFAULT_TAG}
      depends_on:
        engine:
          condition: service_healthy 
      networks:
        - frontend
      labels:
        container_group: scanner
      environment:
      - ENGINE_ADDRESS=http://engine:8080
      - ENGINE_BASIC_AUTH_USER=${ENGINE_SCANNERSERVICES_USER}
      - ENGINE_BASIC_AUTH_PASSWORD=${ENGINE_SCANNERSERVICES_PASSWORD}
      - SECURECODEBOX_ZAP_JOBSSCHEDULERCRON=* * * * * *

  scanner-infrastructure-sslyze:
      image: securecodebox/sslyze:${DEFAULT_TAG}
      depends_on:
        engine:
          condition: service_healthy 
      networks:
        - frontend
      labels:
        container_group: scanner
      environment:
      - ENGINE_ADDRESS=http://engine:8080
      - ENGINE_BASIC_AUTH_USER=${ENGINE_SCANNERSERVICES_USER}
      - ENGINE_BASIC_AUTH_PASSWORD=${ENGINE_SCANNERSERVICES_PASSWORD}

  scanner-webapplication-arachni:
      image: securecodebox/arachni:${DEFAULT_TAG}
      depends_on:
        engine:
          condition: service_healthy
      networks:
        - frontend
      labels:
        container_group: scanner
      environment:
      - ENGINE_ADDRESS=http://engine:8080
      - ENGINE_BASIC_AUTH_USER=${ENGINE_SCANNERSERVICES_USER}
      - ENGINE_BASIC_AUTH_PASSWORD=${ENGINE_SCANNERSERVICES_PASSWORD}
      volumes:
      - "./plugins/arachni-login-scripts:/securecodebox/static/"

  scanner-infrastructure-amass:
      image: securecodebox/amass:${DEFAULT_TAG}
      depends_on:
        engine:
          condition: service_healthy
      networks:
        - frontend
      labels:
        container_group: scanner
      environment:
      - ENGINE_ADDRESS=http://engine:8080
      - ENGINE_BASIC_AUTH_USER=${ENGINE_SCANNERSERVICES_USER}
      - ENGINE_BASIC_AUTH_PASSWORD=${ENGINE_SCANNERSERVICES_PASSWORD}
  
  scanner-infrastructure-ssh:
      image: securecodebox/ssh:${DEFAULT_TAG}
      depends_on:
        engine:
          condition: service_healthy
      networks:
        - frontend
      labels:
        container_group: scanner
      environment:
      - ENGINE_ADDRESS=http://engine:8080
      - ENGINE_BASIC_AUTH_USER=${ENGINE_SCANNERSERVICES_USER}
      - ENGINE_BASIC_AUTH_PASSWORD=${ENGINE_SCANNERSERVICES_PASSWORD}

  scanner-infrastructure-ncrack:
    image: securecodebox/ncrack:${DEFAULT_TAG}
    depends_on:
      engine:
        condition: service_healthy 
    networks:
      - scanner
    labels:
      container_group: scanner
    environment:
      - ENGINE_ADDRESS=http://engine:8080
      - ENGINE_BASIC_AUTH_USER=${ENGINE_SCANNERSERVICES_USER}
      - ENGINE_BASIC_AUTH_PASSWORD=${ENGINE_SCANNERSERVICES_PASSWORD}

  persistence-elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch-oss:6.8.1
    ports:
      - "9200:9200"
      - "9300:9300"
    networks:
      - frontend
    volumes:
      - persistence-elasticsearch-datastore:/usr/share/elasticsearch/data
    labels:
      container_group: logging
    environment:
      - cluster.name=secureCodeBox
      - discovery.type=single-node

  persistence-kibana:
    image: docker.elastic.co/kibana/kibana-oss:6.8.1
    depends_on:
      - persistence-elasticsearch
    ports:
      - "5601:5601"
    networks:
      - frontend
    labels:
      container_group: logging
    environment:
      - ELASTICSEARCH_URL=http://persistence-elasticsearch:9200

networks:
  frontend:

volumes:
  camundadb-datastore:
  persistence-elasticsearch-datastore:
