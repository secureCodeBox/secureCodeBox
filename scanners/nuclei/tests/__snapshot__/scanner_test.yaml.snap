# SPDX-FileCopyrightText: the secureCodeBox authors
#
# SPDX-License-Identifier: Apache-2.0

matches the snapshot:
  1: |
    apiVersion: cascading.securecodebox.io/v1
    kind: CascadingRule
    metadata:
      labels:
        securecodebox.io/intensive: light
        securecodebox.io/invasive: non-invasive
      name: nuclei-subdomain-scan-light-http
    spec:
      matches:
        anyOf:
          - attributes:
              port: 80
              state: open
            category: Open Port
          - attributes:
              service: http
              state: open
            category: Open Port
          - attributes:
              service: http-*
              state: open
            category: Open Port
      scanSpec:
        parameters:
          - -u
          - http://{{$.hostOrIP}}:{{attributes.port}}
        scanType: nuclei
  2: |
    apiVersion: cascading.securecodebox.io/v1
    kind: CascadingRule
    metadata:
      labels:
        securecodebox.io/intensive: light
        securecodebox.io/invasive: non-invasive
      name: nuclei-subdomain-scan-light-https
    spec:
      matches:
        anyOf:
          - attributes:
              port: 443
              state: open
            category: Open Port
          - attributes:
              service: https
              state: open
            category: Open Port
          - attributes:
              service: https*
              state: open
            category: Open Port
      scanSpec:
        parameters:
          - -u
          - https://{{$.hostOrIP}}:{{attributes.port}}
        scanType: nuclei
  3: |
    apiVersion: execution.securecodebox.io/v1
    kind: ParseDefinition
    metadata:
      name: nuclei-json
    spec:
      affinity:
        foo: bar
      env:
        - name: foo
          value: bar
      image: docker.io/securecodebox/parser-nuclei:0.0.0
      imagePullPolicy: IfNotPresent
      imagePullSecrets:
        - name: foo
      resources:
        foo: bar
      scopeLimiterAliases:
        foo: bar
      tolerations:
        - foo: bar
      ttlSecondsAfterFinished: null
  4: |
    apiVersion: execution.securecodebox.io/v1
    kind: ScanType
    metadata:
      name: nucleifoo
    spec:
      extractResults:
        location: /home/securecodebox/nuclei-results.jsonl
        type: nuclei-json
      jobTemplate:
        spec:
          backoffLimit: 3
          suspend: false
          template:
            spec:
              affinity:
                foo: bar
              containers:
                - command:
                    - nuclei
                    - -disable-update-check
                    - -jsonl
                    - -output
                    - /home/securecodebox/nuclei-results.jsonl
                  env:
                    - name: foo
                      value: bar
                  image: docker.io/projectdiscovery/nuclei:0.0.0
                  imagePullPolicy: IfNotPresent
                  name: nuclei
                  resources:
                    foo: bar
                  securityContext:
                    allowPrivilegeEscalation: false
                    capabilities:
                      drop:
                        - all
                    privileged: false
                    readOnlyRootFilesystem: false
                    runAsNonRoot: false
                  volumeMounts:
                    - mountPath: /root
                      name: nuclei-content
                      readOnly: true
                - image: bar
                  name: foo
              imagePullSecrets:
                - name: foo
              restartPolicy: OnFailure
              securityContext:
                fsGroup: 1234
              tolerations:
                - foo: bar
              volumes:
                - name: nuclei-content
                  persistentVolumeClaim:
                    claimName: nuclei-content-claim
                    readOnly: true
  5: |
    apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      name: nuclei-content-claim
    spec:
      accessModes:
        - ReadWriteOnce
        - ReadOnlyMany
      resources:
        requests:
          storage: 1Gi
  6: |
    apiVersion: batch/v1beta1
    kind: CronJob
    metadata:
      name: nuclei-update-template-cache
    spec:
      concurrencyPolicy: Replace
      failedJobsHistoryLimit: 10
      jobTemplate:
        spec:
          template:
            spec:
              containers:
                - command:
                    - nuclei
                    - -update-templates
                  env:
                    - name: foo
                      value: bar
                  image: docker.io/projectdiscovery/nuclei:0.0.0
                  imagePullPolicy: IfNotPresent
                  name: nuclei
                  resources:
                    foo: bar
                  securityContext:
                    allowPrivilegeEscalation: false
                    capabilities:
                      drop:
                        - all
                    privileged: false
                    readOnlyRootFilesystem: false
                    runAsNonRoot: false
                  volumeMounts:
                    - mountPath: /root
                      name: nuclei-content
                      readOnly: false
                - image: bar
                  name: foo
              restartPolicy: OnFailure
              volumes:
                - name: nuclei-content
                  persistentVolumeClaim:
                    claimName: nuclei-content-claim
                    readOnly: false
      schedule: 0 */1 * * *
      successfulJobsHistoryLimit: 3
  7: |
    apiVersion: batch/v1
    kind: Job
    metadata:
      name: nuclei-update-initial-template-cache
    spec:
      template:
        spec:
          containers:
            - command:
                - nuclei
                - -update-templates
              env:
                - name: foo
                  value: bar
              image: docker.io/projectdiscovery/nuclei:0.0.0
              imagePullPolicy: IfNotPresent
              name: nuclei
              resources:
                foo: bar
              securityContext:
                allowPrivilegeEscalation: false
                capabilities:
                  drop:
                    - all
                privileged: false
                readOnlyRootFilesystem: false
                runAsNonRoot: false
              volumeMounts:
                - mountPath: /root
                  name: nuclei-content
                  readOnly: false
            - image: bar
              name: foo
          restartPolicy: OnFailure
          volumes:
            - name: nuclei-content
              persistentVolumeClaim:
                claimName: nuclei-content-claim
                readOnly: false
