# SPDX-FileCopyrightText: 2020 iteratec GmbH
#
# SPDX-License-Identifier: Apache-2.0
apiVersion: "execution.securecodebox.io/v1"
kind: ScanType
metadata:
  name: "amass"
spec:
  extractResults:
    # amass saves it's result now in json but in "json lines" format
    # http://jsonlines.org/
    type: amass-jsonl
    location: "/home/securecodebox/amass-results.jsonl"
  jobTemplate:
    spec:
      {{- if .Values.scannerJob.ttlSecondsAfterFinished }}
      ttlSecondsAfterFinished: {{ .Values.scannerJob.ttlSecondsAfterFinished }}
      {{- end }}
      backoffLimit: {{ .Values.scannerJob.backoffLimit }}
      template:
        spec:
          restartPolicy: OnFailure
          containers:
            - name: amass
              image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
              command:
                - "amass"
                - "enum"
                - "-json"
                - "/home/securecodebox/amass-results.jsonl"
              resources:
                {{- toYaml .Values.scannerJob.resources | nindent 16 }}
              securityContext:
                {{- toYaml .Values.scannerJob.securityContext | nindent 16 }}
              env:
                {{- toYaml .Values.scannerJob.env | nindent 16 }}
              volumeMounts:
                {{- toYaml .Values.scannerJob.extraVolumeMounts | nindent 16 }}
            {{- if .Values.scannerJob.extraContainers }}
            {{- toYaml .Values.scannerJob.extraContainers | nindent 12 }}
            {{- end }}
          volumes:
            {{- toYaml .Values.scannerJob.extraVolumes | nindent 12 }}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: amass-config
data:
  config.ini: |-
    # Copyright 2017 Jeff Foley. All rights reserved.
    # Use of this source code is governed by Apache 2 LICENSE that can be found in the LICENSE file.

    # Should only passive data sources be used without DNS resolution?
    #mode = passive
    # Would you like to use more active techniques, such as pulling
    # certificates from discovered IP addresses?
    #mode = active

    # The directory that stores the Cayley graph database and other output files
    # The default for Linux systems is: $HOME/.config/amass
    #output_directory = amass

    # The maximum number of concurrent DNS queries that can be performed during the enumeration.
    #maximum_dns_queries = 20000

    [network_settings]
    # Single IP address or range (e.g. a.b.c.10-245)
    #address = 192.168.1.1
    #cidr = 192.168.1.0/24
    #asn = 26808
    #port = 80
    port = 443
    #port = 8080

    # Root domain names used in the enumeration
    #[domains]
    #domain = owasp.org
    #domain = appsecusa.org
    #domain = appsec.eu
    #domain = appsec-labs.com

    # DNS resolvers used globally by the amass package
    #[resolvers]
    #score_resolvers = true
    #monitor_resolver_rate = true
    #resolver = 1.1.1.1 ; Cloudflare
    #resolver = 8.8.8.8 ; Google
    #resolver = 64.6.64.6 ; Verisign
    #resolver = 74.82.42.42 ; Hurricane Electric
    #resolver = 1.0.0.1 ; Cloudflare Secondary
    #resolver = 8.8.4.4 ; Google Secondary
    #resolver = 64.6.65.6 ; Verisign Secondary
    #resolver = 77.88.8.1 ; Yandex.DNS Secondary

    # Are there any subdomains that are out of scope?
    #[blacklisted]
    #subdomain = education.appsec-labs.com
    #subdomain = 2012.appsecusa.org

    # Are there any data sources that should not be utilized?
    #[disabled_data_sources]
    #data_source = Ask
    #data_source = Exalead
    #data_source = IPv4Info

    # Configure Amass to use a TinkerPop Server as the graph database
    # For an example of Gremlin settings see: https://docs.microsoft.com/en-us/azure/cosmos-db/create-graph-gremlin-console
    #[gremlin]
    #url = wss://localhost:8182
    #username =
    #password =

    # Settings related to brute forcing
    #[bruteforce]
    #enabled = true
    #recursive = true
    # Number of discoveries made in a subdomain before performing recursive brute forcing
    # Default is 1
    #minimum_for_recursive = 1
    #wordlist_file = /usr/share/wordlists/all.txt
    #wordlist_file = /usr/share/wordlists/all.txt # multiple lists can be used

    # Would you like to permute resolved names?
    #[alterations]
    #enabled = true
    # edit_distance specifies the number of times a primitive edit operation will be
    # performed on a name sample during fuzzy label searching
    #edit_distance = 1
    #flip_words = true   # test-dev.owasp.org -> test-prod.owasp.org
    #flip_numbers = true # test1.owasp.org -> test2.owasp.org
    #add_words = true    # test.owasp.org -> test-dev.owasp.org
    #add_numbers = true  # test.owasp.org -> test1.owasp.org
    #wordlist_file = /usr/share/wordlists/all.txt
    #wordlist_file = /usr/share/wordlists/all.txt # multiple lists can be used

    # Provide API key information for a data source
    #[AlienVault]
    #apikey =

    #[BinaryEdge]
    #apikey =

    #[C99]
    #apikey=

    #[Censys]
    #apikey =
    #secret =

    #[Chaos]
    #apikey=

    #[CIRCL]
    #username =
    #password =

    #[DNSDB]
    #apikey =

    #[FacebookCT]
    #apikey=
    #secret=

    #[GitHub]
    #apikey =

    #[NetworksDB]
    #apikey =

    #[PassiveTotal]
    #username =
    #apikey =

    #[SecurityTrails]
    #apikey =

    #[Shodan]
    #apikey =

    #[Spyse]
    #apikey =

    # Provide your Twitter App Consumer API key and Consumer API secrety key
    #[Twitter]
    #apikey =
    #secret =

    # The apikey must be an API access token created through the Investigate management UI
    #[Umbrella]
    #apikey =

    # URLScan can be used without an API key, but the key allows new submissions to be made
    #[URLScan]
    #apikey =

    #[VirusTotal]
    #apikey =

    #[WhoisXML]
    #apikey= 

    #[ZETAlytics]
    #apikey=
