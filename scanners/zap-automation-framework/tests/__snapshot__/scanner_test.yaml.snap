matches the snapshot:
  1: |
    apiVersion: v1
    data:
      automation.yaml: |-
        env:                                   # The environment, mandatory
          contexts :                           # List of 1 or more contexts, mandatory
            - name: baseline-config            # Name to be used to refer to this context in other jobs, mandatory
              urls: ["${TARGET_URL}"]          # A mandatory list of top level urls, everything under each url will be included
        jobs:
          - type: spider                       # The traditional spider - fast but doesnt handle modern apps so well
            parameters:
              context: baseline-config         # String: Name of the context to spider, default: first context
              maxDuration: 1                   # Int: The max time in minutes the spider will be allowed to run for, default: 0 unlimited
          - type: passiveScan-wait             # Passive scan wait for the passive scanner to finish
            parameters:
              maxDuration: 5                   # Int: The max time to wait for the passive scanner, default: 0 unlimited
          - type: activeScan                   # The active scanner - this actively attacks the target so should only be used with permission
            parameters:
              context: baseline-config         # String: Name of the context to attack, default: first context
              maxRuleDurationInMins: 3         # Int: The max time in minutes any individual rule will be allowed to run for, default: 0 unlimited
              maxScanDurationInMins: 10        # Int: The max time in minutes the active scanner will be allowed to run for, default: 0 unlimited
          - type: report                       # Report generation
            parameters:
              template: traditional-xml        # String: The template id, default : modern
              reportDir: /home/securecodebox/  # String: The directory into which the report will be written
              reportFile: zap-results          # String: The report file name pattern
    kind: ConfigMap
    metadata:
      name: zap-automation-framework-baseline-config
  2: |
    apiVersion: cascading.securecodebox.io/v1
    kind: CascadingRule
    metadata:
      labels:
        securecodebox.io/intensive: medium
        securecodebox.io/invasive: non-invasive
      name: zap-http
    spec:
      matches:
        anyOf:
          - attributes:
              service: http
              state: open
            category: Open Port
          - attributes:
              service: http-*
              state: open
            category: Open Port
      scanSpec:
        parameters:
          - -t
          - http://{{$.hostOrIP}}:{{attributes.port}}
        scanType: zap-automation-framework
  3: |
    apiVersion: cascading.securecodebox.io/v1
    kind: CascadingRule
    metadata:
      labels:
        securecodebox.io/intensive: medium
        securecodebox.io/invasive: non-invasive
      name: zap-https
    spec:
      matches:
        anyOf:
          - attributes:
              service: https*
              state: open
            category: Open Port
      scanSpec:
        parameters:
          - -t
          - https://{{$.hostOrIP}}:{{attributes.port}}
        scanType: zap-automation-framework
  4: |
    apiVersion: v1
    data:
      zap-entrypoint.bash: |2
        # ensures that zap still exits with a exit code of zero when the scan logged warnings: see https://www.zaproxy.org/docs/automate/automation-framework/
        ./zap.sh -cmd $@ || [ $? -ne 1 ]
    kind: ConfigMap
    metadata:
      name: zap-automation-framework-entrypoint
  5: |
    apiVersion: execution.securecodebox.io/v1
    kind: ParseDefinition
    metadata:
      name: zap-xml
    spec:
      affinity:
        foo: bar
      env: []
      image: docker.io/securecodebox/parser-zap-automation-framework:0.0.0
      imagePullPolicy: IfNotPresent
      imagePullSecrets:
        - name: foo
      resources:
        foo: bar
      scopeLimiterAliases:
        foo: bar
      tolerations:
        - foo: bar
      ttlSecondsAfterFinished: null
  6: |
    apiVersion: execution.securecodebox.io/v1
    kind: ScanType
    metadata:
      name: zap-automation-frameworkfoo
    spec:
      extractResults:
        location: /home/securecodebox/zap-results.xml
        type: zap-xml
      jobTemplate:
        spec:
          suspend: false
          template:
            spec:
              affinity:
                foo: bar
              containers:
                - command:
                    - bash
                    - /zap/zap-entrypoint.bash
                  env: []
                  envFrom: []
                  image: docker.io/zaproxy/zap-stable:0.0.0
                  imagePullPolicy: IfNotPresent
                  name: zap-automation-framework
                  resources:
                    foo: bar
                  securityContext:
                    allowPrivilegeEscalation: false
                    capabilities:
                      drop:
                        - all
                    privileged: false
                    readOnlyRootFilesystem: false
                    runAsNonRoot: false
                  volumeMounts:
                    - mountPath: /zap/wrk
                      name: zap-workdir
                    - mountPath: /zap/zap-entrypoint.bash
                      name: zap-automation-framework-entrypoint
                      readOnly: true
                      subPath: zap-entrypoint.bash
                - image: bar
                  name: foo
              restartPolicy: Never
              securityContext: {}
              tolerations:
                - foo: bar
              volumes:
                - emptyDir: {}
                  name: zap-workdir
                - configMap:
                    name: zap-automation-framework-entrypoint
                  name: zap-automation-framework-entrypoint
