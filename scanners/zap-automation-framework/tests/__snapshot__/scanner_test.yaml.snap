matches the snapshot:
  1: |
    apiVersion: cascading.securecodebox.io/v1
    kind: CascadingRule
    metadata:
      labels:
        securecodebox.io/intensive: medium
        securecodebox.io/invasive: non-invasive
      name: zap-http
    spec:
      matches:
        anyOf:
          - attributes:
              service: http
              state: open
            category: Open Port
          - attributes:
              service: http-*
              state: open
            category: Open Port
      scanSpec:
        parameters:
          - -t
          - http://{{$.hostOrIP}}:{{attributes.port}}
        scanType: zap-automation-framework
  2: |
    apiVersion: cascading.securecodebox.io/v1
    kind: CascadingRule
    metadata:
      labels:
        securecodebox.io/intensive: medium
        securecodebox.io/invasive: non-invasive
      name: zap-https
    spec:
      matches:
        anyOf:
          - attributes:
              service: https*
              state: open
            category: Open Port
      scanSpec:
        parameters:
          - -t
          - https://{{$.hostOrIP}}:{{attributes.port}}
        scanType: zap-automation-framework
  3: |
    apiVersion: execution.securecodebox.io/v1
    kind: ParseDefinition
    metadata:
      name: zap-xml
    spec:
      affinity:
        foo: bar
      env: []
      image: docker.io/securecodebox/parser-zap-automation-framework:0.0.0
      imagePullPolicy: IfNotPresent
      imagePullSecrets:
        - name: foo
      resources:
        foo: bar
      scopeLimiterAliases:
        foo: bar
      tolerations:
        - foo: bar
      ttlSecondsAfterFinished: null
  4: |
    apiVersion: execution.securecodebox.io/v1
    kind: ScanType
    metadata:
      name: zap-automation-frameworkfoo
    spec:
      extractResults:
        location: /home/securecodebox/zap-results.xml
        type: zap-xml
      jobTemplate:
        spec:
          suspend: false
          template:
            spec:
              affinity:
                foo: bar
              containers:
                - command:
                    - zap.sh
                    - -cmd
                  env: []
                  envFrom: []
                  image: softwaresecurityproject/zap-stable:0.0.0
                  imagePullPolicy: IfNotPresent
                  name: zap-automation-framework
                  resources:
                    foo: bar
                  securityContext:
                    allowPrivilegeEscalation: false
                    capabilities:
                      drop:
                        - all
                    privileged: false
                    readOnlyRootFilesystem: false
                    runAsNonRoot: false
                  volumeMounts:
                    - mountPath: /zap/wrk
                      name: zap-workdir
                - image: bar
                  name: foo
              restartPolicy: Never
              tolerations:
                - foo: bar
              volumes:
                - emptyDir: {}
                  name: zap-workdir
