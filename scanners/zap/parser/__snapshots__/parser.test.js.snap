// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Parsing a bodgeit result. 1`] = `
[
  {
    "attributes": {
      "hostname": "cwiki.apache.org",
      "port": "443",
      "zap_confidence": "3",
      "zap_count": "2",
      "zap_cweid": "-1",
      "zap_finding_urls": [
        {
          "attack": "",
          "evidence": "text/html",
          "method": "GET",
          "param": "",
          "uri": "https://cwiki.apache.org/confluence/display/tomcat/FrontPage",
        },
        {
          "attack": "",
          "evidence": "text/html",
          "method": "GET",
          "param": "",
          "uri": "https://cwiki.apache.org/tomcat/FrontPage",
        },
      ],
      "zap_otherinfo": null,
      "zap_pluginid": "100001",
      "zap_reference": null,
      "zap_riskcode": "1",
      "zap_solution": null,
      "zap_wascid": "-1",
    },
    "category": "Unexpected Content-Type was returned",
    "description": "A Content-Type of text/html was returned by the server.This is not one of the types expected to be returned by an API.Raised by the 'Alert on Unexpected Content Types' script",
    "hint": undefined,
    "location": "https://cwiki.apache.org",
    "name": "Unexpected Content-Type was returned",
    "osi_layer": "APPLICATION",
    "severity": "LOW",
  },
  {
    "attributes": {
      "hostname": "wiki.apache.org",
      "port": "80",
      "zap_confidence": "3",
      "zap_count": "1",
      "zap_cweid": "-1",
      "zap_finding_urls": [
        {
          "attack": "",
          "evidence": "text/html",
          "method": "GET",
          "param": "",
          "uri": "http://wiki.apache.org/tomcat/FrontPage",
        },
      ],
      "zap_otherinfo": null,
      "zap_pluginid": "100001",
      "zap_reference": null,
      "zap_riskcode": "1",
      "zap_solution": null,
      "zap_wascid": "-1",
    },
    "category": "Unexpected Content-Type was returned",
    "description": "A Content-Type of text/html was returned by the server.This is not one of the types expected to be returned by an API.Raised by the 'Alert on Unexpected Content Types' script",
    "hint": undefined,
    "location": "http://wiki.apache.org",
    "name": "Unexpected Content-Type was returned",
    "osi_layer": "APPLICATION",
    "severity": "LOW",
  },
  {
    "attributes": {
      "hostname": "content-signature-2.cdn.mozilla.net",
      "port": "443",
      "zap_confidence": "3",
      "zap_count": "1",
      "zap_cweid": "-1",
      "zap_finding_urls": [
        {
          "attack": "",
          "evidence": "binary/octet-stream",
          "method": "GET",
          "param": "",
          "uri": "https://content-signature-2.cdn.mozilla.net/chains/remote-settings.content-signature.mozilla.org-2022-03-01-08-35-12.chain",
        },
      ],
      "zap_otherinfo": null,
      "zap_pluginid": "100001",
      "zap_reference": null,
      "zap_riskcode": "1",
      "zap_solution": null,
      "zap_wascid": "-1",
    },
    "category": "Unexpected Content-Type was returned",
    "description": "A Content-Type of binary/octet-stream was returned by the server.This is not one of the types expected to be returned by an API.Raised by the 'Alert on Unexpected Content Types' script",
    "hint": undefined,
    "location": "https://content-signature-2.cdn.mozilla.net",
    "name": "Unexpected Content-Type was returned",
    "osi_layer": "APPLICATION",
    "severity": "LOW",
  },
  {
    "attributes": {
      "hostname": "bodgeit.securecodebox-demo.svc",
      "port": "8080",
      "zap_confidence": "3",
      "zap_count": "4",
      "zap_cweid": "693",
      "zap_finding_urls": [
        {
          "attack": "",
          "evidence": "",
          "method": "GET",
          "param": "",
          "uri": "http://bodgeit.securecodebox-demo.svc:8080",
        },
        {
          "attack": "",
          "evidence": "",
          "method": "GET",
          "param": "",
          "uri": "http://bodgeit.securecodebox-demo.svc:8080/api/swagger.yaml",
        },
        {
          "attack": "",
          "evidence": "",
          "method": "GET",
          "param": "",
          "uri": "http://bodgeit.securecodebox-demo.svc:8080/robots.txt",
        },
        {
          "attack": "",
          "evidence": "",
          "method": "GET",
          "param": "",
          "uri": "http://bodgeit.securecodebox-demo.svc:8080/sitemap.xml",
        },
      ],
      "zap_otherinfo": null,
      "zap_pluginid": "10038",
      "zap_reference": "https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policyhttps://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.htmlhttp://www.w3.org/TR/CSP/http://w3c.github.io/webappsec/specs/content-security-policy/csp-specification.dev.htmlhttp://www.html5rocks.com/en/tutorials/security/content-security-policy/http://caniuse.com/#feat=contentsecuritypolicyhttp://content-security-policy.com/",
      "zap_riskcode": "2",
      "zap_solution": "Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header, to achieve optimal browser support: "Content-Security-Policy" for Chrome 25+, Firefox 23+ and Safari 7+, "X-Content-Security-Policy" for Firefox 4.0+ and Internet Explorer 10+, and "X-WebKit-CSP" for Chrome 14+ and Safari 6+.",
      "zap_wascid": "15",
    },
    "category": "Content Security Policy (CSP) Header Not Set",
    "description": "Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page â€” covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.",
    "hint": undefined,
    "location": "http://bodgeit.securecodebox-demo.svc:8080",
    "name": "Content Security Policy (CSP) Header Not Set",
    "osi_layer": "APPLICATION",
    "severity": "MEDIUM",
  },
  {
    "attributes": {
      "hostname": "bodgeit.securecodebox-demo.svc",
      "port": "8080",
      "zap_confidence": "2",
      "zap_count": "4",
      "zap_cweid": "200",
      "zap_finding_urls": [
        {
          "attack": "",
          "evidence": "response code 403 for potentially insecure HTTP METHOD",
          "method": "PUT",
          "param": "",
          "uri": "http://bodgeit.securecodebox-demo.svc:8080/api/m3icel4qks",
        },
        {
          "attack": "",
          "evidence": "response code 403 for potentially insecure HTTP METHOD",
          "method": "PUT",
          "param": "",
          "uri": "http://bodgeit.securecodebox-demo.svc:8080/api/swagger.yaml/v95p352358",
        },
        {
          "attack": "",
          "evidence": "response code 403 for potentially insecure HTTP METHOD",
          "method": "PUT",
          "param": "",
          "uri": "http://bodgeit.securecodebox-demo.svc:8080/robots.txt/1cpka1vqho",
        },
        {
          "attack": "",
          "evidence": "response code 403 for potentially insecure HTTP METHOD",
          "method": "PUT",
          "param": "",
          "uri": "http://bodgeit.securecodebox-demo.svc:8080/sitemap.xml/othk2m9rl0",
        },
      ],
      "zap_otherinfo": "See the discussion on stackexchange: https://security.stackexchange.com/questions/21413/how-to-exploit-http-methods, for understanding REST operations see http://www.restapitutorial.com/lessons/httpmethods.html",
      "zap_pluginid": "90028",
      "zap_reference": "http://projects.webappsec.org/Fingerprinting",
      "zap_riskcode": "2",
      "zap_solution": "TBA",
      "zap_wascid": "45",
    },
    "category": "Insecure HTTP Method - PUT",
    "description": "This method was originally intended for file managemant operations. It is now most commonly used in REST services, PUT is most-often utilized for **update** capabilities, PUT-ing to a known resource URI with the request body containing the newly-updated representation of the original resource..",
    "hint": undefined,
    "location": "http://bodgeit.securecodebox-demo.svc:8080",
    "name": "Insecure HTTP Method - PUT",
    "osi_layer": "APPLICATION",
    "severity": "MEDIUM",
  },
  {
    "attributes": {
      "hostname": "bodgeit.securecodebox-demo.svc",
      "port": "8080",
      "zap_confidence": "2",
      "zap_count": "1",
      "zap_cweid": "1021",
      "zap_finding_urls": [
        {
          "attack": "",
          "evidence": "",
          "method": "GET",
          "param": "X-Frame-Options",
          "uri": "http://bodgeit.securecodebox-demo.svc:8080",
        },
      ],
      "zap_otherinfo": null,
      "zap_pluginid": "10020",
      "zap_reference": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options",
      "zap_riskcode": "2",
      "zap_solution": "Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site/app.If you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's "frame-ancestors" directive.",
      "zap_wascid": "15",
    },
    "category": "Missing Anti-clickjacking Header",
    "description": "The response does not include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options to protect against 'ClickJacking' attacks.",
    "hint": undefined,
    "location": "http://bodgeit.securecodebox-demo.svc:8080",
    "name": "Missing Anti-clickjacking Header",
    "osi_layer": "APPLICATION",
    "severity": "MEDIUM",
  },
  {
    "attributes": {
      "hostname": "bodgeit.securecodebox-demo.svc",
      "port": "8080",
      "zap_confidence": "3",
      "zap_count": "5",
      "zap_cweid": "388",
      "zap_finding_urls": [
        {
          "attack": "",
          "evidence": "HTTP/1.1 501",
          "method": "TRACK",
          "param": "",
          "uri": "http://bodgeit.securecodebox-demo.svc:8080/9WZL9",
        },
        {
          "attack": "",
          "evidence": "HTTP/1.1 501",
          "method": "TRACK",
          "param": "",
          "uri": "http://bodgeit.securecodebox-demo.svc:8080/api/swagger.yaml5DV53",
        },
        {
          "attack": "",
          "evidence": "HTTP/1.1 501",
          "method": "TRACK",
          "param": "",
          "uri": "http://bodgeit.securecodebox-demo.svc:8080/apiR65NV",
        },
        {
          "attack": "",
          "evidence": "HTTP/1.1 501",
          "method": "TRACK",
          "param": "",
          "uri": "http://bodgeit.securecodebox-demo.svc:8080/robots.txt13S8Q",
        },
        {
          "attack": "",
          "evidence": "HTTP/1.1 501",
          "method": "TRACK",
          "param": "",
          "uri": "http://bodgeit.securecodebox-demo.svc:8080/sitemap.xmlVXC3F",
        },
      ],
      "zap_otherinfo": null,
      "zap_pluginid": "100000",
      "zap_reference": null,
      "zap_riskcode": "1",
      "zap_solution": null,
      "zap_wascid": "20",
    },
    "category": "A Server Error response code was returned by the server",
    "description": "A response code of 501 was returned by the server.This may indicate that the application is failing to handle unexpected input correctly.Raised by the 'Alert on HTTP Response Code Error' script",
    "hint": undefined,
    "location": "http://bodgeit.securecodebox-demo.svc:8080",
    "name": "A Server Error response code was returned by the server",
    "osi_layer": "APPLICATION",
    "severity": "LOW",
  },
  {
    "attributes": {
      "hostname": "bodgeit.securecodebox-demo.svc",
      "port": "8080",
      "zap_confidence": "3",
      "zap_count": "4",
      "zap_cweid": "200",
      "zap_finding_urls": [
        {
          "attack": "",
          "evidence": "Apache-Coyote/1.1",
          "method": "GET",
          "param": "",
          "uri": "http://bodgeit.securecodebox-demo.svc:8080",
        },
        {
          "attack": "",
          "evidence": "Apache-Coyote/1.1",
          "method": "GET",
          "param": "",
          "uri": "http://bodgeit.securecodebox-demo.svc:8080/api/swagger.yaml",
        },
        {
          "attack": "",
          "evidence": "Apache-Coyote/1.1",
          "method": "GET",
          "param": "",
          "uri": "http://bodgeit.securecodebox-demo.svc:8080/robots.txt",
        },
        {
          "attack": "",
          "evidence": "Apache-Coyote/1.1",
          "method": "GET",
          "param": "",
          "uri": "http://bodgeit.securecodebox-demo.svc:8080/sitemap.xml",
        },
      ],
      "zap_otherinfo": null,
      "zap_pluginid": "10036",
      "zap_reference": "http://httpd.apache.org/docs/current/mod/core.html#servertokenshttp://msdn.microsoft.com/en-us/library/ff648552.aspx#ht_urlscan_007http://blogs.msdn.com/b/varunm/archive/2013/04/23/remove-unwanted-http-response-headers.aspxhttp://www.troyhunt.com/2012/02/shhh-dont-let-your-response-headers.html",
      "zap_riskcode": "1",
      "zap_solution": "Ensure that your web server, application server, load balancer, etc. is configured to suppress the "Server" header or provide generic details.",
      "zap_wascid": "13",
    },
    "category": "Server Leaks Version Information via "Server" HTTP Response Header Field",
    "description": "The web/application server is leaking version information via the "Server" HTTP response header. Access to such information may facilitate attackers identifying other vulnerabilities your web/application server is subject to.",
    "hint": undefined,
    "location": "http://bodgeit.securecodebox-demo.svc:8080",
    "name": "Server Leaks Version Information via "Server" HTTP Response Header Field",
    "osi_layer": "APPLICATION",
    "severity": "LOW",
  },
  {
    "attributes": {
      "hostname": "bodgeit.securecodebox-demo.svc",
      "port": "8080",
      "zap_confidence": "3",
      "zap_count": "105",
      "zap_cweid": "-1",
      "zap_finding_urls": [
        {
          "attack": "",
          "evidence": "text/html",
          "method": "GET",
          "param": "",
          "uri": "http://bodgeit.securecodebox-demo.svc:8080",
        },
        {
          "attack": "",
          "evidence": "text/html",
          "method": "GET",
          "param": "",
          "uri": "http://bodgeit.securecodebox-demo.svc:8080/",
        },
        {
          "attack": "",
          "evidence": "text/html",
          "method": "GET",
          "param": "",
          "uri": "http://bodgeit.securecodebox-demo.svc:8080/.DS_Store",
        },
        {
          "attack": "",
          "evidence": "text/html",
          "method": "GET",
          "param": "",
          "uri": "http://bodgeit.securecodebox-demo.svc:8080/.env",
        },
        {
          "attack": "",
          "evidence": "text/html",
          "method": "GET",
          "param": "",
          "uri": "http://bodgeit.securecodebox-demo.svc:8080/.git/config",
        },
        {
          "attack": "",
          "evidence": "text/html",
          "method": "GET",
          "param": "",
          "uri": "http://bodgeit.securecodebox-demo.svc:8080/.htaccess",
        },
        {
          "attack": "",
          "evidence": "text/html",
          "method": "GET",
          "param": "",
          "uri": "http://bodgeit.securecodebox-demo.svc:8080/.idea/WebServers.xml",
        },
        {
          "attack": "",
          "evidence": "text/html",
          "method": "GET",
          "param": "",
          "uri": "http://bodgeit.securecodebox-demo.svc:8080/.php_cs.cache",
        },
        {
          "attack": "",
          "evidence": "text/html",
          "method": "GET",
          "param": "",
          "uri": "http://bodgeit.securecodebox-demo.svc:8080/.ssh/id_dsa",
        },
        {
          "attack": "",
          "evidence": "text/html",
          "method": "GET",
          "param": "",
          "uri": "http://bodgeit.securecodebox-demo.svc:8080/.ssh/id_rsa",
        },
        {
          "attack": "",
          "evidence": "text/html",
          "method": "GET",
          "param": "",
          "uri": "http://bodgeit.securecodebox-demo.svc:8080/.svn/entries",
        },
        {
          "attack": "",
          "evidence": "text/html",
          "method": "GET",
          "param": "",
          "uri": "http://bodgeit.securecodebox-demo.svc:8080/8732990967634790318",
        },
        {
          "attack": "",
          "evidence": "text/html",
          "method": "GET",
          "param": "",
          "uri": "http://bodgeit.securecodebox-demo.svc:8080/?-s",
        },
        {
          "attack": "",
          "evidence": "text/html",
          "method": "GET",
          "param": "",
          "uri": "http://bodgeit.securecodebox-demo.svc:8080/?name=abc",
        },
        {
          "attack": "",
          "evidence": "text/html",
          "method": "GET",
          "param": "",
          "uri": "http://bodgeit.securecodebox-demo.svc:8080/adminer.php",
        },
        {
          "attack": "",
          "evidence": "text/html",
          "method": "GET",
          "param": "",
          "uri": "http://bodgeit.securecodebox-demo.svc:8080/api",
        },
        {
          "attack": "",
          "evidence": "text/html",
          "method": "GET",
          "param": "",
          "uri": "http://bodgeit.securecodebox-demo.svc:8080/api/",
        },
        {
          "attack": "",
          "evidence": "text/html",
          "method": "GET",
          "param": "",
          "uri": "http://bodgeit.securecodebox-demo.svc:8080/api/.env",
        },
        {
          "attack": "",
          "evidence": "text/html",
          "method": "GET",
          "param": "",
          "uri": "http://bodgeit.securecodebox-demo.svc:8080/api/.htaccess",
        },
        {
          "attack": "",
          "evidence": "text/html",
          "method": "GET",
          "param": "",
          "uri": "http://bodgeit.securecodebox-demo.svc:8080/api/8756109290027926951",
        },
        {
          "attack": "",
          "evidence": "text/html",
          "method": "GET",
          "param": "",
          "uri": "http://bodgeit.securecodebox-demo.svc:8080/api/swagger.yaml",
        },
        {
          "attack": "",
          "evidence": "text/html",
          "method": "GET",
          "param": "",
          "uri": "http://bodgeit.securecodebox-demo.svc:8080/api/swagger.yaml/",
        },
        {
          "attack": "",
          "evidence": "text/html",
          "method": "GET",
          "param": "",
          "uri": "http://bodgeit.securecodebox-demo.svc:8080/api/swagger.yaml/8co5j/bl2sm",
        },
        {
          "attack": "",
          "evidence": "text/html",
          "method": "GET",
          "param": "",
          "uri": "http://bodgeit.securecodebox-demo.svc:8080/api/swagger.yaml?name=abc",
        },
        {
          "attack": "",
          "evidence": "text/html",
          "method": "GET",
          "param": "",
          "uri": "http://bodgeit.securecodebox-demo.svc:8080/api/trace.axd",
        },
        {
          "attack": "",
          "evidence": "text/html",
          "method": "GET",
          "param": "",
          "uri": "http://bodgeit.securecodebox-demo.svc:8080/api?name=abc",
        },
        {
          "attack": "",
          "evidence": "text/html",
          "method": "GET",
          "param": "",
          "uri": "http://bodgeit.securecodebox-demo.svc:8080/app/etc/local.xml",
        },
        {
          "attack": "",
          "evidence": "image/png",
          "method": "GET",
          "param": "",
          "uri": "http://bodgeit.securecodebox-demo.svc:8080/asf-logo.png",
        },
        {
          "attack": "",
          "evidence": "image/png",
          "method": "GET",
          "param": "",
          "uri": "http://bodgeit.securecodebox-demo.svc:8080/bg-button.png",
        },
        {
          "attack": "",
          "evidence": "image/png",
          "method": "GET",
          "param": "",
          "uri": "http://bodgeit.securecodebox-demo.svc:8080/bg-middle.png",
        },
        {
          "attack": "",
          "evidence": "image/png",
          "method": "GET",
          "param": "",
          "uri": "http://bodgeit.securecodebox-demo.svc:8080/bg-nav.png",
        },
        {
          "attack": "",
          "evidence": "image/png",
          "method": "GET",
          "param": "",
          "uri": "http://bodgeit.securecodebox-demo.svc:8080/bg-upper.png",
        },
        {
          "attack": "",
          "evidence": "text/html",
          "method": "GET",
          "param": "",
          "uri": "http://bodgeit.securecodebox-demo.svc:8080/CHANGELOG.txt",
        },
        {
          "attack": "",
          "evidence": "text/html",
          "method": "GET",
          "param": "",
          "uri": "http://bodgeit.securecodebox-demo.svc:8080/clientaccesspolicy.xml",
        },
        {
          "attack": "",
          "evidence": "text/html",
          "method": "GET",
          "param": "",
          "uri": "http://bodgeit.securecodebox-demo.svc:8080/composer.json",
        },
        {
          "attack": "",
          "evidence": "text/html",
          "method": "GET",
          "param": "",
          "uri": "http://bodgeit.securecodebox-demo.svc:8080/composer.lock",
        },
        {
          "attack": "",
          "evidence": "text/html",
          "method": "GET",
          "param": "",
          "uri": "http://bodgeit.securecodebox-demo.svc:8080/config/database.yml",
        },
        {
          "attack": "",
          "evidence": "text/html",
          "method": "GET",
          "param": "",
          "uri": "http://bodgeit.securecodebox-demo.svc:8080/config/databases.yml",
        },
        {
          "attack": "",
          "evidence": "text/html",
          "method": "GET",
          "param": "",
          "uri": "http://bodgeit.securecodebox-demo.svc:8080/core",
        },
        {
          "attack": "",
          "evidence": "text/html",
          "method": "GET",
          "param": "",
          "uri": "http://bodgeit.securecodebox-demo.svc:8080/crossdomain.xml",
        },
        {
          "attack": "",
          "evidence": "text/html",
          "method": "GET",
          "param": "",
          "uri": "http://bodgeit.securecodebox-demo.svc:8080/CVS/root",
        },
        {
          "attack": "",
          "evidence": "text/html",
          "method": "GET",
          "param": "",
          "uri": "http://bodgeit.securecodebox-demo.svc:8080/DEADJOE",
        },
        {
          "attack": "",
          "evidence": "text/html",
          "method": "GET",
          "param": "",
          "uri": "http://bodgeit.securecodebox-demo.svc:8080/docs/appdev/",
        },
        {
          "attack": "",
          "evidence": "image/png",
          "method": "GET",
          "param": "",
          "uri": "http://bodgeit.securecodebox-demo.svc:8080/docs/images/asf-feather.png",
        },
        {
          "attack": "",
          "evidence": "text/css",
          "method": "GET",
          "param": "",
          "uri": "http://bodgeit.securecodebox-demo.svc:8080/docs/images/docs-stylesheet.css",
        },
        {
          "attack": "",
          "evidence": "text/css",
          "method": "GET",
          "param": "",
          "uri": "http://bodgeit.securecodebox-demo.svc:8080/docs/images/fonts/fonts.css",
        },
        {
          "attack": "",
          "evidence": "application/x-font-woff",
          "method": "GET",
          "param": "",
          "uri": "http://bodgeit.securecodebox-demo.svc:8080/docs/images/fonts/OpenSans400.woff",
        },
        {
          "attack": "",
          "evidence": "application/x-font-woff",
          "method": "GET",
          "param": "",
          "uri": "http://bodgeit.securecodebox-demo.svc:8080/docs/images/fonts/OpenSans400italic.woff",
        },
        {
          "attack": "",
          "evidence": "application/x-font-woff",
          "method": "GET",
          "param": "",
          "uri": "http://bodgeit.securecodebox-demo.svc:8080/docs/images/fonts/OpenSans600.woff",
        },
        {
          "attack": "",
          "evidence": "application/x-font-woff",
          "method": "GET",
          "param": "",
          "uri": "http://bodgeit.securecodebox-demo.svc:8080/docs/images/fonts/OpenSans700.woff",
        },
        {
          "attack": "",
          "evidence": "image/png",
          "method": "GET",
          "param": "",
          "uri": "http://bodgeit.securecodebox-demo.svc:8080/docs/images/tomcat.png",
        },
        {
          "attack": "",
          "evidence": "text/html",
          "method": "GET",
          "param": "",
          "uri": "http://bodgeit.securecodebox-demo.svc:8080/docs/jndi-datasource-examples-howto.html",
        },
        {
          "attack": "",
          "evidence": "text/html",
          "method": "GET",
          "param": "",
          "uri": "http://bodgeit.securecodebox-demo.svc:8080/elmah.axd",
        },
        {
          "attack": "",
          "evidence": "text/html",
          "method": "GET",
          "param": "",
          "uri": "http://bodgeit.securecodebox-demo.svc:8080/examples/",
        },
        {
          "attack": "",
          "evidence": "image/x-icon",
          "method": "GET",
          "param": "",
          "uri": "http://bodgeit.securecodebox-demo.svc:8080/favicon.ico",
        },
        {
          "attack": "",
          "evidence": "text/html",
          "method": "GET",
          "param": "",
          "uri": "http://bodgeit.securecodebox-demo.svc:8080/filezilla.xml",
        },
        {
          "attack": "",
          "evidence": "text/html",
          "method": "GET",
          "param": "",
          "uri": "http://bodgeit.securecodebox-demo.svc:8080/host-manager/html",
        },
        {
          "attack": "",
          "evidence": "text/html",
          "method": "GET",
          "param": "",
          "uri": "http://bodgeit.securecodebox-demo.svc:8080/id_dsa",
        },
        {
          "attack": "",
          "evidence": "text/html",
          "method": "GET",
          "param": "",
          "uri": "http://bodgeit.securecodebox-demo.svc:8080/id_rsa",
        },
        {
          "attack": "",
          "evidence": "text/html",
          "method": "GET",
          "param": "",
          "uri": "http://bodgeit.securecodebox-demo.svc:8080/key.pem",
        },
        {
          "attack": "",
          "evidence": "text/html",
          "method": "GET",
          "param": "",
          "uri": "http://bodgeit.securecodebox-demo.svc:8080/lfm.php",
        },
        {
          "attack": "",
          "evidence": "text/html",
          "method": "GET",
          "param": "",
          "uri": "http://bodgeit.securecodebox-demo.svc:8080/manager/html",
        },
        {
          "attack": "",
          "evidence": "text/html",
          "method": "GET",
          "param": "",
          "uri": "http://bodgeit.securecodebox-demo.svc:8080/manager/status",
        },
        {
          "attack": "",
          "evidence": "text/html",
          "method": "GET",
          "param": "",
          "uri": "http://bodgeit.securecodebox-demo.svc:8080/myserver.key",
        },
        {
          "attack": "",
          "evidence": "text/html",
          "method": "GET",
          "param": "",
          "uri": "http://bodgeit.securecodebox-demo.svc:8080/privatekey.key",
        },
        {
          "attack": "",
          "evidence": "text/html",
          "method": "GET",
          "param": "",
          "uri": "http://bodgeit.securecodebox-demo.svc:8080/robots.txt",
        },
        {
          "attack": "",
          "evidence": "text/html",
          "method": "GET",
          "param": "",
          "uri": "http://bodgeit.securecodebox-demo.svc:8080/robots.txt/",
        },
        {
          "attack": "",
          "evidence": "text/html",
          "method": "GET",
          "param": "",
          "uri": "http://bodgeit.securecodebox-demo.svc:8080/robots.txt/8co5j/bl2sm",
        },
        {
          "attack": "",
          "evidence": "text/html",
          "method": "GET",
          "param": "",
          "uri": "http://bodgeit.securecodebox-demo.svc:8080/robots.txt?name=abc",
        },
        {
          "attack": "",
          "evidence": "text/html",
          "method": "GET",
          "param": "",
          "uri": "http://bodgeit.securecodebox-demo.svc:8080/server-info",
        },
        {
          "attack": "",
          "evidence": "text/html",
          "method": "GET",
          "param": "",
          "uri": "http://bodgeit.securecodebox-demo.svc:8080/server-status",
        },
        {
          "attack": "",
          "evidence": "text/html",
          "method": "GET",
          "param": "",
          "uri": "http://bodgeit.securecodebox-demo.svc:8080/server.key",
        },
        {
          "attack": "",
          "evidence": "text/html",
          "method": "GET",
          "param": "",
          "uri": "http://bodgeit.securecodebox-demo.svc:8080/sftp-config.json",
        },
        {
          "attack": "",
          "evidence": "text/html",
          "method": "GET",
          "param": "",
          "uri": "http://bodgeit.securecodebox-demo.svc:8080/sitemanager.xml",
        },
        {
          "attack": "",
          "evidence": "text/html",
          "method": "GET",
          "param": "",
          "uri": "http://bodgeit.securecodebox-demo.svc:8080/sitemap.xml",
        },
        {
          "attack": "",
          "evidence": "text/html",
          "method": "GET",
          "param": "",
          "uri": "http://bodgeit.securecodebox-demo.svc:8080/sitemap.xml/",
        },
        {
          "attack": "",
          "evidence": "text/html",
          "method": "GET",
          "param": "",
          "uri": "http://bodgeit.securecodebox-demo.svc:8080/sitemap.xml/8co5j/bl2sm",
        },
        {
          "attack": "",
          "evidence": "text/html",
          "method": "GET",
          "param": "",
          "uri": "http://bodgeit.securecodebox-demo.svc:8080/sitemap.xml?name=abc",
        },
        {
          "attack": "",
          "evidence": "text/html",
          "method": "GET",
          "param": "",
          "uri": "http://bodgeit.securecodebox-demo.svc:8080/sites/default/files/.ht.sqlite",
        },
        {
          "attack": "",
          "evidence": "text/html",
          "method": "GET",
          "param": "",
          "uri": "http://bodgeit.securecodebox-demo.svc:8080/sites/default/private/files/backup_migrate/scheduled/test.txt",
        },
        {
          "attack": "",
          "evidence": "text/css",
          "method": "GET",
          "param": "",
          "uri": "http://bodgeit.securecodebox-demo.svc:8080/tomcat.css",
        },
        {
          "attack": "",
          "evidence": "image/png",
          "method": "GET",
          "param": "",
          "uri": "http://bodgeit.securecodebox-demo.svc:8080/tomcat.png",
        },
        {
          "attack": "",
          "evidence": "text/html",
          "method": "GET",
          "param": "",
          "uri": "http://bodgeit.securecodebox-demo.svc:8080/trace.axd",
        },
        {
          "attack": "",
          "evidence": "text/html",
          "method": "GET",
          "param": "",
          "uri": "http://bodgeit.securecodebox-demo.svc:8080/vim_settings.xml",
        },
        {
          "attack": "",
          "evidence": "text/html",
          "method": "GET",
          "param": "",
          "uri": "http://bodgeit.securecodebox-demo.svc:8080/WEB-INF/applicationContext.xml",
        },
        {
          "attack": "",
          "evidence": "text/html",
          "method": "GET",
          "param": "",
          "uri": "http://bodgeit.securecodebox-demo.svc:8080/WEB-INF/classes/8/0/37.class",
        },
        {
          "attack": "",
          "evidence": "text/html",
          "method": "GET",
          "param": "",
          "uri": "http://bodgeit.securecodebox-demo.svc:8080/WEB-INF/classes/A/name.class",
        },
        {
          "attack": "",
          "evidence": "text/html",
          "method": "GET",
          "param": "",
          "uri": "http://bodgeit.securecodebox-demo.svc:8080/WEB-INF/web.xml",
        },
        {
          "attack": "",
          "evidence": "text/html",
          "method": "GET",
          "param": "",
          "uri": "http://bodgeit.securecodebox-demo.svc:8080/winscp.ini",
        },
        {
          "attack": "",
          "evidence": "text/html",
          "method": "GET",
          "param": "",
          "uri": "http://bodgeit.securecodebox-demo.svc:8080/WS_FTP.ini",
        },
        {
          "attack": "",
          "evidence": "text/html",
          "method": "OPTIONS",
          "param": "",
          "uri": "http://bodgeit.securecodebox-demo.svc:8080",
        },
        {
          "attack": "",
          "evidence": "text/html",
          "method": "POST",
          "param": "",
          "uri": "http://bodgeit.securecodebox-demo.svc:8080/?-d+allow_url_include%3d1+-d+auto_prepend_file%3dphp://input",
        },
        {
          "attack": "",
          "evidence": "text/html",
          "method": "POST",
          "param": "",
          "uri": "http://bodgeit.securecodebox-demo.svc:8080/api/swagger.yaml?-d+allow_url_include%3d1+-d+auto_prepend_file%3dphp://input",
        },
        {
          "attack": "",
          "evidence": "text/html",
          "method": "POST",
          "param": "",
          "uri": "http://bodgeit.securecodebox-demo.svc:8080/api?-d+allow_url_include%3d1+-d+auto_prepend_file%3dphp://input",
        },
        {
          "attack": "",
          "evidence": "text/html",
          "method": "POST",
          "param": "",
          "uri": "http://bodgeit.securecodebox-demo.svc:8080/robots.txt?-d+allow_url_include%3d1+-d+auto_prepend_file%3dphp://input",
        },
        {
          "attack": "",
          "evidence": "text/html",
          "method": "POST",
          "param": "",
          "uri": "http://bodgeit.securecodebox-demo.svc:8080/sitemap.xml?-d+allow_url_include%3d1+-d+auto_prepend_file%3dphp://input",
        },
        {
          "attack": "",
          "evidence": "text/html",
          "method": "PUT",
          "param": "",
          "uri": "http://bodgeit.securecodebox-demo.svc:8080/api/m3icel4qks",
        },
        {
          "attack": "",
          "evidence": "text/html",
          "method": "PUT",
          "param": "",
          "uri": "http://bodgeit.securecodebox-demo.svc:8080/api/swagger.yaml/v95p352358",
        },
        {
          "attack": "",
          "evidence": "text/html",
          "method": "PUT",
          "param": "",
          "uri": "http://bodgeit.securecodebox-demo.svc:8080/robots.txt/1cpka1vqho",
        },
        {
          "attack": "",
          "evidence": "text/html",
          "method": "PUT",
          "param": "",
          "uri": "http://bodgeit.securecodebox-demo.svc:8080/sitemap.xml/othk2m9rl0",
        },
        {
          "attack": "",
          "evidence": "text/html",
          "method": "TRACK",
          "param": "",
          "uri": "http://bodgeit.securecodebox-demo.svc:8080/9WZL9",
        },
        {
          "attack": "",
          "evidence": "text/html",
          "method": "TRACK",
          "param": "",
          "uri": "http://bodgeit.securecodebox-demo.svc:8080/api/swagger.yaml5DV53",
        },
        {
          "attack": "",
          "evidence": "text/html",
          "method": "TRACK",
          "param": "",
          "uri": "http://bodgeit.securecodebox-demo.svc:8080/apiR65NV",
        },
        {
          "attack": "",
          "evidence": "text/html",
          "method": "TRACK",
          "param": "",
          "uri": "http://bodgeit.securecodebox-demo.svc:8080/robots.txt13S8Q",
        },
        {
          "attack": "",
          "evidence": "text/html",
          "method": "TRACK",
          "param": "",
          "uri": "http://bodgeit.securecodebox-demo.svc:8080/sitemap.xmlVXC3F",
        },
      ],
      "zap_otherinfo": null,
      "zap_pluginid": "100001",
      "zap_reference": null,
      "zap_riskcode": "1",
      "zap_solution": null,
      "zap_wascid": "-1",
    },
    "category": "Unexpected Content-Type was returned",
    "description": "A Content-Type of text/html was returned by the server.This is not one of the types expected to be returned by an API.Raised by the 'Alert on Unexpected Content Types' script",
    "hint": undefined,
    "location": "http://bodgeit.securecodebox-demo.svc:8080",
    "name": "Unexpected Content-Type was returned",
    "osi_layer": "APPLICATION",
    "severity": "LOW",
  },
  {
    "attributes": {
      "hostname": "bodgeit.securecodebox-demo.svc",
      "port": "8080",
      "zap_confidence": "2",
      "zap_count": "1",
      "zap_cweid": "693",
      "zap_finding_urls": [
        {
          "attack": "",
          "evidence": "",
          "method": "GET",
          "param": "X-Content-Type-Options",
          "uri": "http://bodgeit.securecodebox-demo.svc:8080",
        },
      ],
      "zap_otherinfo": "This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.At "High" threshold this scan rule will not alert on client or server error responses.",
      "zap_pluginid": "10021",
      "zap_reference": "http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspxhttps://owasp.org/www-community/Security_Headers",
      "zap_riskcode": "1",
      "zap_solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.If possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",
      "zap_wascid": "15",
    },
    "category": "X-Content-Type-Options Header Missing",
    "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",
    "hint": undefined,
    "location": "http://bodgeit.securecodebox-demo.svc:8080",
    "name": "X-Content-Type-Options Header Missing",
    "osi_layer": "APPLICATION",
    "severity": "LOW",
  },
  {
    "attributes": {
      "hostname": "bodgeit.securecodebox-demo.svc",
      "port": "8080",
      "zap_confidence": "3",
      "zap_count": "81",
      "zap_cweid": "388",
      "zap_finding_urls": [
        {
          "attack": "",
          "evidence": "HTTP/1.1 404",
          "method": "GET",
          "param": "",
          "uri": "http://bodgeit.securecodebox-demo.svc:8080/.DS_Store",
        },
        {
          "attack": "",
          "evidence": "HTTP/1.1 404",
          "method": "GET",
          "param": "",
          "uri": "http://bodgeit.securecodebox-demo.svc:8080/.env",
        },
        {
          "attack": "",
          "evidence": "HTTP/1.1 404",
          "method": "GET",
          "param": "",
          "uri": "http://bodgeit.securecodebox-demo.svc:8080/.git/config",
        },
        {
          "attack": "",
          "evidence": "HTTP/1.1 404",
          "method": "GET",
          "param": "",
          "uri": "http://bodgeit.securecodebox-demo.svc:8080/.htaccess",
        },
        {
          "attack": "",
          "evidence": "HTTP/1.1 404",
          "method": "GET",
          "param": "",
          "uri": "http://bodgeit.securecodebox-demo.svc:8080/.idea/WebServers.xml",
        },
        {
          "attack": "",
          "evidence": "HTTP/1.1 404",
          "method": "GET",
          "param": "",
          "uri": "http://bodgeit.securecodebox-demo.svc:8080/.php_cs.cache",
        },
        {
          "attack": "",
          "evidence": "HTTP/1.1 404",
          "method": "GET",
          "param": "",
          "uri": "http://bodgeit.securecodebox-demo.svc:8080/.ssh/id_dsa",
        },
        {
          "attack": "",
          "evidence": "HTTP/1.1 404",
          "method": "GET",
          "param": "",
          "uri": "http://bodgeit.securecodebox-demo.svc:8080/.ssh/id_rsa",
        },
        {
          "attack": "",
          "evidence": "HTTP/1.1 404",
          "method": "GET",
          "param": "",
          "uri": "http://bodgeit.securecodebox-demo.svc:8080/.svn/entries",
        },
        {
          "attack": "",
          "evidence": "HTTP/1.1 404",
          "method": "GET",
          "param": "",
          "uri": "http://bodgeit.securecodebox-demo.svc:8080/8732990967634790318",
        },
        {
          "attack": "",
          "evidence": "HTTP/1.1 404",
          "method": "GET",
          "param": "",
          "uri": "http://bodgeit.securecodebox-demo.svc:8080/adminer.php",
        },
        {
          "attack": "",
          "evidence": "HTTP/1.1 404",
          "method": "GET",
          "param": "",
          "uri": "http://bodgeit.securecodebox-demo.svc:8080/api",
        },
        {
          "attack": "",
          "evidence": "HTTP/1.1 404",
          "method": "GET",
          "param": "",
          "uri": "http://bodgeit.securecodebox-demo.svc:8080/api/",
        },
        {
          "attack": "",
          "evidence": "HTTP/1.1 404",
          "method": "GET",
          "param": "",
          "uri": "http://bodgeit.securecodebox-demo.svc:8080/api/.env",
        },
        {
          "attack": "",
          "evidence": "HTTP/1.1 404",
          "method": "GET",
          "param": "",
          "uri": "http://bodgeit.securecodebox-demo.svc:8080/api/.htaccess",
        },
        {
          "attack": "",
          "evidence": "HTTP/1.1 404",
          "method": "GET",
          "param": "",
          "uri": "http://bodgeit.securecodebox-demo.svc:8080/api/8756109290027926951",
        },
        {
          "attack": "",
          "evidence": "HTTP/1.1 404",
          "method": "GET",
          "param": "",
          "uri": "http://bodgeit.securecodebox-demo.svc:8080/api/swagger.yaml",
        },
        {
          "attack": "",
          "evidence": "HTTP/1.1 404",
          "method": "GET",
          "param": "",
          "uri": "http://bodgeit.securecodebox-demo.svc:8080/api/swagger.yaml/",
        },
        {
          "attack": "",
          "evidence": "HTTP/1.1 404",
          "method": "GET",
          "param": "",
          "uri": "http://bodgeit.securecodebox-demo.svc:8080/api/swagger.yaml/8co5j/bl2sm",
        },
        {
          "attack": "",
          "evidence": "HTTP/1.1 404",
          "method": "GET",
          "param": "",
          "uri": "http://bodgeit.securecodebox-demo.svc:8080/api/swagger.yaml?name=abc",
        },
        {
          "attack": "",
          "evidence": "HTTP/1.1 404",
          "method": "GET",
          "param": "",
          "uri": "http://bodgeit.securecodebox-demo.svc:8080/api/trace.axd",
        },
        {
          "attack": "",
          "evidence": "HTTP/1.1 404",
          "method": "GET",
          "param": "",
          "uri": "http://bodgeit.securecodebox-demo.svc:8080/api?name=abc",
        },
        {
          "attack": "",
          "evidence": "HTTP/1.1 404",
          "method": "GET",
          "param": "",
          "uri": "http://bodgeit.securecodebox-demo.svc:8080/app/etc/local.xml",
        },
        {
          "attack": "",
          "evidence": "HTTP/1.1 404",
          "method": "GET",
          "param": "",
          "uri": "http://bodgeit.securecodebox-demo.svc:8080/CHANGELOG.txt",
        },
        {
          "attack": "",
          "evidence": "HTTP/1.1 404",
          "method": "GET",
          "param": "",
          "uri": "http://bodgeit.securecodebox-demo.svc:8080/clientaccesspolicy.xml",
        },
        {
          "attack": "",
          "evidence": "HTTP/1.1 404",
          "method": "GET",
          "param": "",
          "uri": "http://bodgeit.securecodebox-demo.svc:8080/composer.json",
        },
        {
          "attack": "",
          "evidence": "HTTP/1.1 404",
          "method": "GET",
          "param": "",
          "uri": "http://bodgeit.securecodebox-demo.svc:8080/composer.lock",
        },
        {
          "attack": "",
          "evidence": "HTTP/1.1 404",
          "method": "GET",
          "param": "",
          "uri": "http://bodgeit.securecodebox-demo.svc:8080/config/database.yml",
        },
        {
          "attack": "",
          "evidence": "HTTP/1.1 404",
          "method": "GET",
          "param": "",
          "uri": "http://bodgeit.securecodebox-demo.svc:8080/config/databases.yml",
        },
        {
          "attack": "",
          "evidence": "HTTP/1.1 404",
          "method": "GET",
          "param": "",
          "uri": "http://bodgeit.securecodebox-demo.svc:8080/core",
        },
        {
          "attack": "",
          "evidence": "HTTP/1.1 404",
          "method": "GET",
          "param": "",
          "uri": "http://bodgeit.securecodebox-demo.svc:8080/crossdomain.xml",
        },
        {
          "attack": "",
          "evidence": "HTTP/1.1 404",
          "method": "GET",
          "param": "",
          "uri": "http://bodgeit.securecodebox-demo.svc:8080/CVS/root",
        },
        {
          "attack": "",
          "evidence": "HTTP/1.1 404",
          "method": "GET",
          "param": "",
          "uri": "http://bodgeit.securecodebox-demo.svc:8080/DEADJOE",
        },
        {
          "attack": "",
          "evidence": "HTTP/1.1 404",
          "method": "GET",
          "param": "",
          "uri": "http://bodgeit.securecodebox-demo.svc:8080/elmah.axd",
        },
        {
          "attack": "",
          "evidence": "HTTP/1.1 404",
          "method": "GET",
          "param": "",
          "uri": "http://bodgeit.securecodebox-demo.svc:8080/filezilla.xml",
        },
        {
          "attack": "",
          "evidence": "HTTP/1.1 401",
          "method": "GET",
          "param": "",
          "uri": "http://bodgeit.securecodebox-demo.svc:8080/host-manager/html",
        },
        {
          "attack": "",
          "evidence": "HTTP/1.1 404",
          "method": "GET",
          "param": "",
          "uri": "http://bodgeit.securecodebox-demo.svc:8080/id_dsa",
        },
        {
          "attack": "",
          "evidence": "HTTP/1.1 404",
          "method": "GET",
          "param": "",
          "uri": "http://bodgeit.securecodebox-demo.svc:8080/id_rsa",
        },
        {
          "attack": "",
          "evidence": "HTTP/1.1 404",
          "method": "GET",
          "param": "",
          "uri": "http://bodgeit.securecodebox-demo.svc:8080/key.pem",
        },
        {
          "attack": "",
          "evidence": "HTTP/1.1 404",
          "method": "GET",
          "param": "",
          "uri": "http://bodgeit.securecodebox-demo.svc:8080/lfm.php",
        },
        {
          "attack": "",
          "evidence": "HTTP/1.1 401",
          "method": "GET",
          "param": "",
          "uri": "http://bodgeit.securecodebox-demo.svc:8080/manager/html",
        },
        {
          "attack": "",
          "evidence": "HTTP/1.1 401",
          "method": "GET",
          "param": "",
          "uri": "http://bodgeit.securecodebox-demo.svc:8080/manager/status",
        },
        {
          "attack": "",
          "evidence": "HTTP/1.1 404",
          "method": "GET",
          "param": "",
          "uri": "http://bodgeit.securecodebox-demo.svc:8080/myserver.key",
        },
        {
          "attack": "",
          "evidence": "HTTP/1.1 404",
          "method": "GET",
          "param": "",
          "uri": "http://bodgeit.securecodebox-demo.svc:8080/privatekey.key",
        },
        {
          "attack": "",
          "evidence": "HTTP/1.1 404",
          "method": "GET",
          "param": "",
          "uri": "http://bodgeit.securecodebox-demo.svc:8080/robots.txt",
        },
        {
          "attack": "",
          "evidence": "HTTP/1.1 404",
          "method": "GET",
          "param": "",
          "uri": "http://bodgeit.securecodebox-demo.svc:8080/robots.txt/",
        },
        {
          "attack": "",
          "evidence": "HTTP/1.1 404",
          "method": "GET",
          "param": "",
          "uri": "http://bodgeit.securecodebox-demo.svc:8080/robots.txt/8co5j/bl2sm",
        },
        {
          "attack": "",
          "evidence": "HTTP/1.1 404",
          "method": "GET",
          "param": "",
          "uri": "http://bodgeit.securecodebox-demo.svc:8080/robots.txt?name=abc",
        },
        {
          "attack": "",
          "evidence": "HTTP/1.1 404",
          "method": "GET",
          "param": "",
          "uri": "http://bodgeit.securecodebox-demo.svc:8080/server-info",
        },
        {
          "attack": "",
          "evidence": "HTTP/1.1 404",
          "method": "GET",
          "param": "",
          "uri": "http://bodgeit.securecodebox-demo.svc:8080/server-status",
        },
        {
          "attack": "",
          "evidence": "HTTP/1.1 404",
          "method": "GET",
          "param": "",
          "uri": "http://bodgeit.securecodebox-demo.svc:8080/server.key",
        },
        {
          "attack": "",
          "evidence": "HTTP/1.1 404",
          "method": "GET",
          "param": "",
          "uri": "http://bodgeit.securecodebox-demo.svc:8080/sftp-config.json",
        },
        {
          "attack": "",
          "evidence": "HTTP/1.1 404",
          "method": "GET",
          "param": "",
          "uri": "http://bodgeit.securecodebox-demo.svc:8080/sitemanager.xml",
        },
        {
          "attack": "",
          "evidence": "HTTP/1.1 404",
          "method": "GET",
          "param": "",
          "uri": "http://bodgeit.securecodebox-demo.svc:8080/sitemap.xml",
        },
        {
          "attack": "",
          "evidence": "HTTP/1.1 404",
          "method": "GET",
          "param": "",
          "uri": "http://bodgeit.securecodebox-demo.svc:8080/sitemap.xml/",
        },
        {
          "attack": "",
          "evidence": "HTTP/1.1 404",
          "method": "GET",
          "param": "",
          "uri": "http://bodgeit.securecodebox-demo.svc:8080/sitemap.xml/8co5j/bl2sm",
        },
        {
          "attack": "",
          "evidence": "HTTP/1.1 404",
          "method": "GET",
          "param": "",
          "uri": "http://bodgeit.securecodebox-demo.svc:8080/sitemap.xml?name=abc",
        },
        {
          "attack": "",
          "evidence": "HTTP/1.1 404",
          "method": "GET",
          "param": "",
          "uri": "http://bodgeit.securecodebox-demo.svc:8080/sites/default/files/.ht.sqlite",
        },
        {
          "attack": "",
          "evidence": "HTTP/1.1 404",
          "method": "GET",
          "param": "",
          "uri": "http://bodgeit.securecodebox-demo.svc:8080/sites/default/private/files/backup_migrate/scheduled/test.txt",
        },
        {
          "attack": "",
          "evidence": "HTTP/1.1 404",
          "method": "GET",
          "param": "",
          "uri": "http://bodgeit.securecodebox-demo.svc:8080/trace.axd",
        },
        {
          "attack": "",
          "evidence": "HTTP/1.1 404",
          "method": "GET",
          "param": "",
          "uri": "http://bodgeit.securecodebox-demo.svc:8080/vim_settings.xml",
        },
        {
          "attack": "",
          "evidence": "HTTP/1.1 404",
          "method": "GET",
          "param": "",
          "uri": "http://bodgeit.securecodebox-demo.svc:8080/WEB-INF/applicationContext.xml",
        },
        {
          "attack": "",
          "evidence": "HTTP/1.1 404",
          "method": "GET",
          "param": "",
          "uri": "http://bodgeit.securecodebox-demo.svc:8080/WEB-INF/classes/8/0/37.class",
        },
        {
          "attack": "",
          "evidence": "HTTP/1.1 404",
          "method": "GET",
          "param": "",
          "uri": "http://bodgeit.securecodebox-demo.svc:8080/WEB-INF/classes/A/name.class",
        },
        {
          "attack": "",
          "evidence": "HTTP/1.1 404",
          "method": "GET",
          "param": "",
          "uri": "http://bodgeit.securecodebox-demo.svc:8080/WEB-INF/web.xml",
        },
        {
          "attack": "",
          "evidence": "HTTP/1.1 404",
          "method": "GET",
          "param": "",
          "uri": "http://bodgeit.securecodebox-demo.svc:8080/winscp.ini",
        },
        {
          "attack": "",
          "evidence": "HTTP/1.1 404",
          "method": "GET",
          "param": "",
          "uri": "http://bodgeit.securecodebox-demo.svc:8080/WS_FTP.ini",
        },
        {
          "attack": "",
          "evidence": "HTTP/1.1 405",
          "method": "OPTIONS",
          "param": "",
          "uri": "http://bodgeit.securecodebox-demo.svc:8080",
        },
        {
          "attack": "",
          "evidence": "HTTP/1.1 404",
          "method": "POST",
          "param": "",
          "uri": "http://bodgeit.securecodebox-demo.svc:8080/api/swagger.yaml?-d+allow_url_include%3d1+-d+auto_prepend_file%3dphp://input",
        },
        {
          "attack": "",
          "evidence": "HTTP/1.1 404",
          "method": "POST",
          "param": "",
          "uri": "http://bodgeit.securecodebox-demo.svc:8080/api?-d+allow_url_include%3d1+-d+auto_prepend_file%3dphp://input",
        },
        {
          "attack": "",
          "evidence": "HTTP/1.1 404",
          "method": "POST",
          "param": "",
          "uri": "http://bodgeit.securecodebox-demo.svc:8080/robots.txt?-d+allow_url_include%3d1+-d+auto_prepend_file%3dphp://input",
        },
        {
          "attack": "",
          "evidence": "HTTP/1.1 404",
          "method": "POST",
          "param": "",
          "uri": "http://bodgeit.securecodebox-demo.svc:8080/sitemap.xml?-d+allow_url_include%3d1+-d+auto_prepend_file%3dphp://input",
        },
        {
          "attack": "",
          "evidence": "HTTP/1.1 403",
          "method": "PUT",
          "param": "",
          "uri": "http://bodgeit.securecodebox-demo.svc:8080/api/m3icel4qks",
        },
        {
          "attack": "",
          "evidence": "HTTP/1.1 403",
          "method": "PUT",
          "param": "",
          "uri": "http://bodgeit.securecodebox-demo.svc:8080/api/swagger.yaml/v95p352358",
        },
        {
          "attack": "",
          "evidence": "HTTP/1.1 403",
          "method": "PUT",
          "param": "",
          "uri": "http://bodgeit.securecodebox-demo.svc:8080/robots.txt/1cpka1vqho",
        },
        {
          "attack": "",
          "evidence": "HTTP/1.1 403",
          "method": "PUT",
          "param": "",
          "uri": "http://bodgeit.securecodebox-demo.svc:8080/sitemap.xml/othk2m9rl0",
        },
        {
          "attack": "",
          "evidence": "HTTP/1.1 405",
          "method": "TRACE",
          "param": "",
          "uri": "http://bodgeit.securecodebox-demo.svc:8080",
        },
        {
          "attack": "",
          "evidence": "HTTP/1.1 405",
          "method": "TRACE",
          "param": "",
          "uri": "http://bodgeit.securecodebox-demo.svc:8080/api",
        },
        {
          "attack": "",
          "evidence": "HTTP/1.1 405",
          "method": "TRACE",
          "param": "",
          "uri": "http://bodgeit.securecodebox-demo.svc:8080/api/swagger.yaml",
        },
        {
          "attack": "",
          "evidence": "HTTP/1.1 405",
          "method": "TRACE",
          "param": "",
          "uri": "http://bodgeit.securecodebox-demo.svc:8080/robots.txt",
        },
        {
          "attack": "",
          "evidence": "HTTP/1.1 405",
          "method": "TRACE",
          "param": "",
          "uri": "http://bodgeit.securecodebox-demo.svc:8080/sitemap.xml",
        },
      ],
      "zap_otherinfo": null,
      "zap_pluginid": "100000",
      "zap_reference": null,
      "zap_riskcode": "0",
      "zap_solution": null,
      "zap_wascid": "20",
    },
    "category": "A Client Error response code was returned by the server",
    "description": "A response code of 404 was returned by the server.This may indicate that the application is failing to handle unexpected input correctly.Raised by the 'Alert on HTTP Response Code Error' script",
    "hint": undefined,
    "location": "http://bodgeit.securecodebox-demo.svc:8080",
    "name": "A Client Error response code was returned by the server",
    "osi_layer": "APPLICATION",
    "severity": "INFORMATIONAL",
  },
  {
    "attributes": {
      "hostname": "bodgeit.securecodebox-demo.svc",
      "port": "8080",
      "zap_confidence": "0",
      "zap_count": "0",
      "zap_cweid": "311",
      "zap_finding_urls": [],
      "zap_otherinfo": "Failed to connect.ZAP attempted to connect via: https://bodgeit.securecodebox-demo.svc:443",
      "zap_pluginid": "10106",
      "zap_reference": "https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Protection_Cheat_Sheet.htmlhttps://letsencrypt.org/",
      "zap_riskcode": "2",
      "zap_solution": "Configure your web or application server to use SSL (https).",
      "zap_wascid": "4",
    },
    "category": "HTTP Only Site",
    "description": "The site is only served under HTTP and not HTTPS.",
    "hint": undefined,
    "location": "http://bodgeit.securecodebox-demo.svc:8080",
    "name": "HTTP Only Site",
    "osi_layer": "APPLICATION",
    "severity": "MEDIUM",
  },
]
`;

exports[`Parsing a nginx result. 1`] = `
[
  {
    "attributes": {
      "hostname": "nginx.demo-targets.svc",
      "port": "80",
      "zap_confidence": "2",
      "zap_count": "2",
      "zap_cweid": "16",
      "zap_finding_urls": [
        {
          "method": "GET",
          "param": "X-Frame-Options",
          "uri": "http://nginx.demo-targets.svc",
        },
        {
          "method": "GET",
          "param": "X-Frame-Options",
          "uri": "http://nginx.demo-targets.svc/",
        },
      ],
      "zap_otherinfo": null,
      "zap_pluginid": "10020",
      "zap_reference": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options",
      "zap_riskcode": "2",
      "zap_solution": "Most modern Web browsers support the X-Frame-Options HTTP header. Ensure it's set on all web pages returned by your site (if you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. ALLOW-FROM allows specific websites to frame the web page in supported web browsers).",
      "zap_wascid": "15",
    },
    "category": "X-Frame-Options Header Not Set",
    "description": "X-Frame-Options header is not included in the HTTP response to protect against 'ClickJacking' attacks.",
    "hint": undefined,
    "location": "http://nginx.demo-targets.svc",
    "name": "X-Frame-Options Header Not Set",
    "osi_layer": "APPLICATION",
    "severity": "MEDIUM",
  },
  {
    "attributes": {
      "hostname": "nginx.demo-targets.svc",
      "port": "80",
      "zap_confidence": "3",
      "zap_count": "4",
      "zap_cweid": "200",
      "zap_finding_urls": [
        {
          "evidence": "nginx/1.19.3",
          "method": "GET",
          "uri": "http://nginx.demo-targets.svc/",
        },
        {
          "evidence": "nginx/1.19.3",
          "method": "GET",
          "uri": "http://nginx.demo-targets.svc/robots.txt",
        },
        {
          "evidence": "nginx/1.19.3",
          "method": "GET",
          "uri": "http://nginx.demo-targets.svc",
        },
        {
          "evidence": "nginx/1.19.3",
          "method": "GET",
          "uri": "http://nginx.demo-targets.svc/sitemap.xml",
        },
      ],
      "zap_otherinfo": null,
      "zap_pluginid": "10036",
      "zap_reference": "http://httpd.apache.org/docs/current/mod/core.html#servertokenshttp://msdn.microsoft.com/en-us/library/ff648552.aspx#ht_urlscan_007http://blogs.msdn.com/b/varunm/archive/2013/04/23/remove-unwanted-http-response-headers.aspxhttp://www.troyhunt.com/2012/02/shhh-dont-let-your-response-headers.html",
      "zap_riskcode": "1",
      "zap_solution": "Ensure that your web server, application server, load balancer, etc. is configured to suppress the "Server" header or provide generic details.",
      "zap_wascid": "13",
    },
    "category": "Server Leaks Version Information via "Server" HTTP Response Header Field",
    "description": "The web/application server is leaking version information via the "Server" HTTP response header. Access to such information may facilitate attackers identifying other vulnerabilities your web/application server is subject to.",
    "hint": undefined,
    "location": "http://nginx.demo-targets.svc",
    "name": "Server Leaks Version Information via "Server" HTTP Response Header Field",
    "osi_layer": "APPLICATION",
    "severity": "LOW",
  },
  {
    "attributes": {
      "hostname": "nginx.demo-targets.svc",
      "port": "80",
      "zap_confidence": "2",
      "zap_count": "2",
      "zap_cweid": "16",
      "zap_finding_urls": [
        {
          "method": "GET",
          "param": "X-Content-Type-Options",
          "uri": "http://nginx.demo-targets.svc",
        },
        {
          "method": "GET",
          "param": "X-Content-Type-Options",
          "uri": "http://nginx.demo-targets.svc/",
        },
      ],
      "zap_otherinfo": "This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.At "High" threshold this scan rule will not alert on client or server error responses.",
      "zap_pluginid": "10021",
      "zap_reference": "http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspxhttps://owasp.org/www-community/Security_Headers",
      "zap_riskcode": "1",
      "zap_solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.If possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",
      "zap_wascid": "15",
    },
    "category": "X-Content-Type-Options Header Missing",
    "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",
    "hint": undefined,
    "location": "http://nginx.demo-targets.svc",
    "name": "X-Content-Type-Options Header Missing",
    "osi_layer": "APPLICATION",
    "severity": "LOW",
  },
  {
    "attributes": {
      "hostname": "nginx.demo-targets.svc",
      "port": "80",
      "zap_confidence": "2",
      "zap_count": "4",
      "zap_cweid": "16",
      "zap_finding_urls": [
        {
          "method": "GET",
          "uri": "http://nginx.demo-targets.svc/robots.txt",
        },
        {
          "method": "GET",
          "uri": "http://nginx.demo-targets.svc/",
        },
        {
          "method": "GET",
          "uri": "http://nginx.demo-targets.svc/sitemap.xml",
        },
        {
          "method": "GET",
          "uri": "http://nginx.demo-targets.svc",
        },
      ],
      "zap_otherinfo": null,
      "zap_pluginid": "10038",
      "zap_reference": "https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policyhttps://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.htmlhttp://www.w3.org/TR/CSP/http://w3c.github.io/webappsec/specs/content-security-policy/csp-specification.dev.htmlhttp://www.html5rocks.com/en/tutorials/security/content-security-policy/http://caniuse.com/#feat=contentsecuritypolicyhttp://content-security-policy.com/",
      "zap_riskcode": "1",
      "zap_solution": "Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header, to achieve optimal browser support: "Content-Security-Policy" for Chrome 25+, Firefox 23+ and Safari 7+, "X-Content-Security-Policy" for Firefox 4.0+ and Internet Explorer 10+, and "X-WebKit-CSP" for Chrome 14+ and Safari 6+.",
      "zap_wascid": "15",
    },
    "category": "Content Security Policy (CSP) Header Not Set",
    "description": "Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page â€” covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.",
    "hint": undefined,
    "location": "http://nginx.demo-targets.svc",
    "name": "Content Security Policy (CSP) Header Not Set",
    "osi_layer": "APPLICATION",
    "severity": "LOW",
  },
]
`;

exports[`Parsing the docs.securecodebox.io results. 1`] = `
[
  {
    "attributes": {
      "hostname": "docs.securecodebox.io",
      "port": "443",
      "zap_confidence": "1",
      "zap_count": "490",
      "zap_cweid": "200",
      "zap_finding_urls": [
        {
          "evidence": "14356247",
          "method": "GET",
          "uri": "https://docs.securecodebox.io/docs/scanners/zap/",
        },
        {
          "evidence": "17896441",
          "method": "GET",
          "uri": "https://docs.securecodebox.io/docs/getting-started/uninstallation",
        },
        {
          "evidence": "24710355",
          "method": "GET",
          "uri": "https://docs.securecodebox.io/4465cfb6.2dca36b4.js",
        },
        {
          "evidence": "24656292",
          "method": "GET",
          "uri": "https://docs.securecodebox.io/docs/scanners/kubeaudit",
        },
        {
          "evidence": "2147483647",
          "method": "GET",
          "uri": "https://docs.securecodebox.io/3.f6078885.js",
        },
        {
          "evidence": "24709778",
          "method": "GET",
          "uri": "https://docs.securecodebox.io/696e17eb.6646ccf1.js",
        },
        {
          "evidence": "24711273",
          "method": "GET",
          "uri": "https://docs.securecodebox.io/26fdb175.030b75d8.js",
        },
        {
          "evidence": "17700762",
          "method": "GET",
          "uri": "https://docs.securecodebox.io/img/integrationIcons/DefectDojo.svg",
        },
        {
          "evidence": "24692760",
          "method": "GET",
          "uri": "https://docs.securecodebox.io/docs/api/crds/cascading-rule/",
        },
        {
          "evidence": "14356247",
          "method": "GET",
          "uri": "https://docs.securecodebox.io/docs/getting-started/first-scans/",
        },
        {
          "evidence": "24721247",
          "method": "GET",
          "uri": "https://docs.securecodebox.io/cd9a430b.0a5f1ff9.js",
        },
        {
          "evidence": "17896441",
          "method": "GET",
          "uri": "https://docs.securecodebox.io/docs/scanners/gitleaks/",
        },
        {
          "evidence": "14356247",
          "method": "GET",
          "uri": "https://docs.securecodebox.io/docs/how-tos/automatically-repeating-scans",
        },
        {
          "evidence": "14356247",
          "method": "GET",
          "uri": "https://docs.securecodebox.io/docs/hooks/cascading-scans",
        },
        {
          "evidence": "14356247",
          "method": "GET",
          "uri": "https://docs.securecodebox.io/docs/api/crds/scan-type/",
        },
        {
          "evidence": "24668827",
          "method": "GET",
          "uri": "https://docs.securecodebox.io/img/integrationIcons/kubeaudit.svg",
        },
        {
          "evidence": "14356247",
          "method": "GET",
          "uri": "https://docs.securecodebox.io/docs/scanners/wpscan",
        },
        {
          "evidence": "17896441",
          "method": "GET",
          "uri": "https://docs.securecodebox.io/docs/contributing/integrating-a-hook",
        },
        {
          "evidence": "14356247",
          "method": "GET",
          "uri": "https://docs.securecodebox.io/docs/hooks/slack-webhook",
        },
        {
          "evidence": "14356247",
          "method": "GET",
          "uri": "https://docs.securecodebox.io/docs/api/crds/scan-type",
        },
      ],
      "zap_otherinfo": "14356247, which evaluates to: 1970-06-16 03:50:47",
      "zap_pluginid": "10096",
      "zap_reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "zap_riskcode": "0",
      "zap_solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "zap_wascid": "13",
    },
    "category": "Timestamp Disclosure - Unix",
    "description": "A timestamp was disclosed by the application/web server - Unix",
    "hint": undefined,
    "location": "https://docs.securecodebox.io",
    "name": "Timestamp Disclosure - Unix",
    "osi_layer": "APPLICATION",
    "severity": "INFORMATIONAL",
  },
  {
    "attributes": {
      "hostname": "docs.securecodebox.io",
      "port": "443",
      "zap_confidence": "2",
      "zap_count": "170",
      "zap_cweid": "16",
      "zap_finding_urls": [
        {
          "method": "GET",
          "param": "X-Content-Type-Options",
          "uri": "https://docs.securecodebox.io/docs/contributing/integrating-a-hook/",
        },
        {
          "method": "GET",
          "param": "X-Content-Type-Options",
          "uri": "https://docs.securecodebox.io/docs/api/crds/scan-completion-hook/",
        },
        {
          "method": "GET",
          "param": "X-Content-Type-Options",
          "uri": "https://docs.securecodebox.io/styles.c9559d75.js",
        },
        {
          "method": "GET",
          "param": "X-Content-Type-Options",
          "uri": "https://docs.securecodebox.io/01805dbd.a35506a4.js",
        },
        {
          "method": "GET",
          "param": "X-Content-Type-Options",
          "uri": "https://docs.securecodebox.io/docs/scanners/",
        },
        {
          "method": "GET",
          "param": "X-Content-Type-Options",
          "uri": "https://docs.securecodebox.io/6ac6c269.eb766bcf.js",
        },
        {
          "method": "GET",
          "param": "X-Content-Type-Options",
          "uri": "https://docs.securecodebox.io/blog/tags/release/",
        },
        {
          "method": "GET",
          "param": "X-Content-Type-Options",
          "uri": "https://docs.securecodebox.io/a41edef1.361c2485.js",
        },
        {
          "method": "GET",
          "param": "X-Content-Type-Options",
          "uri": "https://docs.securecodebox.io/docs/scanners/kube-hunter/",
        },
        {
          "method": "GET",
          "param": "X-Content-Type-Options",
          "uri": "https://docs.securecodebox.io/img/integrationIcons/Cascading%20Scans.svg",
        },
        {
          "method": "GET",
          "param": "X-Content-Type-Options",
          "uri": "https://docs.securecodebox.io/docs/getting-started/first-scans/",
        },
        {
          "method": "GET",
          "param": "X-Content-Type-Options",
          "uri": "https://docs.securecodebox.io/b4010e28.2d695275.js",
        },
        {
          "method": "GET",
          "param": "X-Content-Type-Options",
          "uri": "https://docs.securecodebox.io/runtime~main.0510559a.js",
        },
        {
          "method": "GET",
          "param": "X-Content-Type-Options",
          "uri": "https://docs.securecodebox.io/fc4fa29a.f8b0651d.js",
        },
        {
          "method": "GET",
          "param": "X-Content-Type-Options",
          "uri": "https://docs.securecodebox.io/2.f9d04a90.js",
        },
        {
          "method": "GET",
          "param": "X-Content-Type-Options",
          "uri": "https://docs.securecodebox.io/54f44165.3b7dc2c3.js",
        },
        {
          "method": "GET",
          "param": "X-Content-Type-Options",
          "uri": "https://docs.securecodebox.io/98701709.a7141487.js",
        },
        {
          "method": "GET",
          "param": "X-Content-Type-Options",
          "uri": "https://docs.securecodebox.io/696e17eb.6646ccf1.js",
        },
        {
          "method": "GET",
          "param": "X-Content-Type-Options",
          "uri": "https://docs.securecodebox.io/17896441.dfdf4284.js",
        },
        {
          "method": "GET",
          "param": "X-Content-Type-Options",
          "uri": "https://docs.securecodebox.io/blog/2020/09/08/blinmaker/",
        },
      ],
      "zap_otherinfo": "This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.At "High" threshold this scan rule will not alert on client or server error responses.",
      "zap_pluginid": "10021",
      "zap_reference": "http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspxhttps://owasp.org/www-community/Security_Headers",
      "zap_riskcode": "1",
      "zap_solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.If possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",
      "zap_wascid": "15",
    },
    "category": "X-Content-Type-Options Header Missing",
    "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",
    "hint": undefined,
    "location": "https://docs.securecodebox.io",
    "name": "X-Content-Type-Options Header Missing",
    "osi_layer": "APPLICATION",
    "severity": "LOW",
  },
  {
    "attributes": {
      "hostname": "docs.securecodebox.io",
      "port": "443",
      "zap_confidence": "2",
      "zap_count": "63",
      "zap_cweid": "16",
      "zap_finding_urls": [
        {
          "method": "GET",
          "uri": "https://docs.securecodebox.io/docs/api/crds/scan/",
        },
        {
          "method": "GET",
          "uri": "https://docs.securecodebox.io/docs/hooks/generic-webhook/",
        },
        {
          "method": "GET",
          "uri": "https://docs.securecodebox.io/docs/scanners/ncrack/",
        },
        {
          "method": "GET",
          "uri": "https://docs.securecodebox.io/docs/api/finding/",
        },
        {
          "method": "GET",
          "uri": "https://docs.securecodebox.io/blog/tags/v-1/",
        },
        {
          "method": "GET",
          "uri": "https://docs.securecodebox.io/docs/scanners/nmap/",
        },
        {
          "method": "GET",
          "uri": "https://docs.securecodebox.io/docs/api/crds/scan-type/",
        },
        {
          "method": "GET",
          "uri": "https://docs.securecodebox.io/docs/scanners/kube-hunter/",
        },
        {
          "method": "GET",
          "uri": "https://docs.securecodebox.io/docs/scanners/zap/",
        },
        {
          "method": "GET",
          "uri": "https://docs.securecodebox.io/docs/scanners/",
        },
        {
          "method": "GET",
          "uri": "https://docs.securecodebox.io/docs/how-tos/",
        },
        {
          "method": "GET",
          "uri": "https://docs.securecodebox.io/docs/contributing/conventions/",
        },
        {
          "method": "GET",
          "uri": "https://docs.securecodebox.io/docs/api/crds/scan-completion-hook/",
        },
        {
          "method": "GET",
          "uri": "https://docs.securecodebox.io/docs/api/crds/docs/contributing/integrating-a-scanner",
        },
        {
          "method": "GET",
          "uri": "https://docs.securecodebox.io/docs/contributing/operator/",
        },
        {
          "method": "GET",
          "uri": "https://docs.securecodebox.io/docs/scanners/wpscan/",
        },
        {
          "method": "GET",
          "uri": "https://docs.securecodebox.io/docs/getting-started/first-scans/",
        },
        {
          "method": "GET",
          "uri": "https://docs.securecodebox.io/docs/scanners/trivy/",
        },
        {
          "method": "GET",
          "uri": "https://docs.securecodebox.io/blog/tags/",
        },
        {
          "method": "GET",
          "uri": "https://docs.securecodebox.io/",
        },
      ],
      "zap_otherinfo": null,
      "zap_pluginid": "10038",
      "zap_reference": "https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policyhttps://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.htmlhttp://www.w3.org/TR/CSP/http://w3c.github.io/webappsec/specs/content-security-policy/csp-specification.dev.htmlhttp://www.html5rocks.com/en/tutorials/security/content-security-policy/http://caniuse.com/#feat=contentsecuritypolicyhttp://content-security-policy.com/",
      "zap_riskcode": "1",
      "zap_solution": "Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header, to achieve optimal browser support: "Content-Security-Policy" for Chrome 25+, Firefox 23+ and Safari 7+, "X-Content-Security-Policy" for Firefox 4.0+ and Internet Explorer 10+, and "X-WebKit-CSP" for Chrome 14+ and Safari 6+.",
      "zap_wascid": "15",
    },
    "category": "Content Security Policy (CSP) Header Not Set",
    "description": "Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page â€” covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.",
    "hint": undefined,
    "location": "https://docs.securecodebox.io",
    "name": "Content Security Policy (CSP) Header Not Set",
    "osi_layer": "APPLICATION",
    "severity": "LOW",
  },
  {
    "attributes": {
      "hostname": "docs.securecodebox.io",
      "port": "443",
      "zap_confidence": "2",
      "zap_count": "235",
      "zap_cweid": null,
      "zap_finding_urls": [
        {
          "evidence": "Age: 0",
          "method": "GET",
          "uri": "https://docs.securecodebox.io/docs/scanners/ncrack",
        },
        {
          "evidence": "Age: 0",
          "method": "GET",
          "uri": "https://docs.securecodebox.io/0e7bd4ca.21f2ccd7.js",
        },
        {
          "evidence": "Age: 0",
          "method": "GET",
          "uri": "https://docs.securecodebox.io/assets/images/2020-10-12-Fingerpost-a006af5f911eecef723e462db8d2a89a.jpg",
        },
        {
          "evidence": "Age: 0",
          "method": "GET",
          "uri": "https://docs.securecodebox.io/a73ad625.daca9aec.js",
        },
        {
          "evidence": "Age: 0",
          "method": "GET",
          "uri": "https://docs.securecodebox.io/docs/api/crds/parse-definition",
        },
        {
          "evidence": "Age: 0",
          "method": "GET",
          "uri": "https://docs.securecodebox.io/docs/scanners/ssh",
        },
        {
          "evidence": "Age: 0",
          "method": "GET",
          "uri": "https://docs.securecodebox.io/docs/api/finding",
        },
        {
          "evidence": "Age: 4301",
          "method": "GET",
          "uri": "https://docs.securecodebox.io/b2b675dd.a26036da.js",
        },
        {
          "evidence": "Age: 0",
          "method": "GET",
          "uri": "https://docs.securecodebox.io/26fdb175.030b75d8.js",
        },
        {
          "evidence": "Age: 2",
          "method": "GET",
          "uri": "https://docs.securecodebox.io/img/features/code.svg",
        },
        {
          "evidence": "Age: 0",
          "method": "GET",
          "uri": "https://docs.securecodebox.io/1e6c7aa9.edd847c5.js",
        },
        {
          "evidence": "Age: 0",
          "method": "GET",
          "uri": "https://docs.securecodebox.io/docs/how-tos/scanning-networks",
        },
        {
          "evidence": "Age: 1",
          "method": "GET",
          "uri": "https://docs.securecodebox.io/6eda5a75.150d84a1.js",
        },
        {
          "evidence": "Age: 0",
          "method": "GET",
          "uri": "https://docs.securecodebox.io/fbbb2bf9.2bd5d8a5.js",
        },
        {
          "evidence": "Age: 3",
          "method": "GET",
          "uri": "https://docs.securecodebox.io/",
        },
        {
          "evidence": "Age: 0",
          "method": "GET",
          "uri": "https://docs.securecodebox.io/6875c492.64f73903.js",
        },
        {
          "evidence": "Age: 0",
          "method": "GET",
          "uri": "https://docs.securecodebox.io/docs/api/crds/cascading-rule/",
        },
        {
          "evidence": "Age: 2",
          "method": "GET",
          "uri": "https://docs.securecodebox.io/93523fe8.14f093cb.js",
        },
        {
          "evidence": "Age: 0",
          "method": "GET",
          "uri": "https://docs.securecodebox.io/30ea1053.cba2edd8.js",
        },
        {
          "evidence": "Age: 1",
          "method": "GET",
          "uri": "https://docs.securecodebox.io/blog/2020/10/12/whats-going-on",
        },
      ],
      "zap_otherinfo": "The presence of the 'Age' header indicates that that a HTTP/1.1 compliant caching server is in use.",
      "zap_pluginid": "10050",
      "zap_reference": "https://tools.ietf.org/html/rfc7234https://tools.ietf.org/html/rfc7231http://www.w3.org/Protocols/rfc2616/rfc2616-sec13.html (obsoleted by rfc7234)",
      "zap_riskcode": "0",
      "zap_solution": "Validate that the response does not contain sensitive, personal or user-specific information.  If it does, consider the use of the following HTTP response headers, to limit, or prevent the content being stored and retrieved from the cache by another user:Cache-Control: no-cache, no-store, must-revalidate, privatePragma: no-cacheExpires: 0This configuration directs both HTTP 1.0 and HTTP 1.1 compliant caching servers to not store the response, and to not retrieve the response (without validation) from the cache, in response to a similar request.",
      "zap_wascid": null,
    },
    "category": "Retrieved from Cache",
    "description": "The content was retrieved from a shared cache. If the response data is sensitive, personal or user-specific, this may result in sensitive information being leaked. In some cases, this may even result in a user gaining complete control of the session of another user, depending on the configuration of the caching components in use in their environment. This is primarily an issue where caching servers such as "proxy" caches are configured on the local network. This configuration is typically found in corporate or educational environments, for instance. ",
    "hint": undefined,
    "location": "https://docs.securecodebox.io",
    "name": "Retrieved from Cache",
    "osi_layer": "APPLICATION",
    "severity": "INFORMATIONAL",
  },
  {
    "attributes": {
      "hostname": "docs.securecodebox.io",
      "port": "443",
      "zap_confidence": "2",
      "zap_count": "90",
      "zap_cweid": "525",
      "zap_finding_urls": [
        {
          "evidence": "public, max-age=0, must-revalidate",
          "method": "GET",
          "param": "Cache-Control",
          "uri": "https://docs.securecodebox.io/img/integrationIcons/Trivy.svg",
        },
        {
          "evidence": "public, max-age=0, must-revalidate",
          "method": "GET",
          "param": "Cache-Control",
          "uri": "https://docs.securecodebox.io/sitemap.xml",
        },
        {
          "evidence": "public, max-age=0, must-revalidate",
          "method": "GET",
          "param": "Cache-Control",
          "uri": "https://docs.securecodebox.io/docs/contributing/integrating-a-hook/",
        },
        {
          "evidence": "public, max-age=0, must-revalidate",
          "method": "GET",
          "param": "Cache-Control",
          "uri": "https://docs.securecodebox.io/docs/api/crds/scan-completion-hook/",
        },
        {
          "evidence": "public, max-age=0, must-revalidate",
          "method": "GET",
          "param": "Cache-Control",
          "uri": "https://docs.securecodebox.io/docs/scanners/",
        },
        {
          "evidence": "public, max-age=0, must-revalidate",
          "method": "GET",
          "param": "Cache-Control",
          "uri": "https://docs.securecodebox.io/blog/tags/release/",
        },
        {
          "evidence": "public, max-age=0, must-revalidate",
          "method": "GET",
          "param": "Cache-Control",
          "uri": "https://docs.securecodebox.io/docs/how-tos/automatically-repeating-scans/",
        },
        {
          "evidence": "public, max-age=0, must-revalidate",
          "method": "GET",
          "param": "Cache-Control",
          "uri": "https://docs.securecodebox.io/docs/scanners/kube-hunter/",
        },
        {
          "evidence": "public, max-age=0, must-revalidate",
          "method": "GET",
          "param": "Cache-Control",
          "uri": "https://docs.securecodebox.io/blog/atom.xml",
        },
        {
          "evidence": "public, max-age=0, must-revalidate",
          "method": "GET",
          "param": "Cache-Control",
          "uri": "https://docs.securecodebox.io/docs/hooks/elasticsearch/",
        },
        {
          "evidence": "public, max-age=0, must-revalidate",
          "method": "GET",
          "param": "Cache-Control",
          "uri": "https://docs.securecodebox.io/img/integrationIcons/Slack%20WebHook.svg",
        },
        {
          "evidence": "public, max-age=0, must-revalidate",
          "method": "GET",
          "param": "Cache-Control",
          "uri": "https://docs.securecodebox.io/docs/api/crds/scheduled-scan/",
        },
        {
          "evidence": "public, max-age=0, must-revalidate",
          "method": "GET",
          "param": "Cache-Control",
          "uri": "https://docs.securecodebox.io/img/integrationIcons/ZAP.svg",
        },
        {
          "evidence": "public, max-age=0, must-revalidate",
          "method": "GET",
          "param": "Cache-Control",
          "uri": "https://docs.securecodebox.io/docs/hooks/generic-webhook/",
        },
        {
          "evidence": "public, max-age=0, must-revalidate",
          "method": "GET",
          "param": "Cache-Control",
          "uri": "https://docs.securecodebox.io/img/features/close.svg",
        },
        {
          "evidence": "public, max-age=0, must-revalidate",
          "method": "GET",
          "param": "Cache-Control",
          "uri": "https://docs.securecodebox.io/docs/scanners/zap/",
        },
        {
          "evidence": "public, max-age=0, must-revalidate",
          "method": "GET",
          "param": "Cache-Control",
          "uri": "https://docs.securecodebox.io/img/features/code.svg",
        },
        {
          "evidence": "public, max-age=0, must-revalidate",
          "method": "GET",
          "param": "Cache-Control",
          "uri": "https://docs.securecodebox.io/docs/api/crds/scan-type/",
        },
        {
          "evidence": "public, max-age=0, must-revalidate",
          "method": "GET",
          "param": "Cache-Control",
          "uri": "https://docs.securecodebox.io/docs/scanners/ncrack/",
        },
        {
          "evidence": "public, max-age=0, must-revalidate",
          "method": "GET",
          "param": "Cache-Control",
          "uri": "https://docs.securecodebox.io/img/integrationIcons/Cascading%20Scans.svg",
        },
      ],
      "zap_otherinfo": null,
      "zap_pluginid": "10015",
      "zap_reference": "https://cheatsheetseries.owasp.org/cheatsheets/Session_Management_Cheat_Sheet.html#web-content-caching",
      "zap_riskcode": "1",
      "zap_solution": "Whenever possible ensure the cache-control HTTP header is set with no-cache, no-store, must-revalidate; and that the pragma HTTP header is set with no-cache.",
      "zap_wascid": "13",
    },
    "category": "Incomplete or No Cache-control and Pragma HTTP Header Set",
    "description": "The cache-control and pragma HTTP header have not been set properly or are missing allowing the browser and proxies to cache content.",
    "hint": undefined,
    "location": "https://docs.securecodebox.io",
    "name": "Incomplete or No Cache-control and Pragma HTTP Header Set",
    "osi_layer": "APPLICATION",
    "severity": "LOW",
  },
  {
    "attributes": {
      "hostname": "docs.securecodebox.io",
      "port": "443",
      "zap_confidence": "2",
      "zap_count": "19",
      "zap_cweid": "200",
      "zap_finding_urls": [
        {
          "evidence": "192.168.178.0",
          "method": "GET",
          "uri": "https://docs.securecodebox.io/docs/scanners/nmap/",
        },
        {
          "evidence": "192.168.0.1",
          "method": "GET",
          "uri": "https://docs.securecodebox.io/98701709.a7141487.js",
        },
        {
          "evidence": "192.168.0.1",
          "method": "GET",
          "uri": "https://docs.securecodebox.io/docs/scanners/ncrack/",
        },
        {
          "evidence": "192.168.200.100",
          "method": "GET",
          "uri": "https://docs.securecodebox.io/123d7b49.c7ac3740.js",
        },
        {
          "evidence": "10.102.131.102:22",
          "method": "GET",
          "uri": "https://docs.securecodebox.io/b650ae8f.1ac2f5e8.js",
        },
        {
          "evidence": "192.168.0.0",
          "method": "GET",
          "uri": "https://docs.securecodebox.io/docs/scanners/kube-hunter/",
        },
        {
          "evidence": "192.168.0.1",
          "method": "GET",
          "uri": "https://docs.securecodebox.io/b92f2143.b5302d92.js",
        },
        {
          "evidence": "192.168.0.0",
          "method": "GET",
          "uri": "https://docs.securecodebox.io/docs/scanners/kube-hunter",
        },
        {
          "evidence": "192.168.0.0",
          "method": "GET",
          "uri": "https://docs.securecodebox.io/edd86307.afcc49d0.js",
        },
        {
          "evidence": "192.168.178.0",
          "method": "GET",
          "uri": "https://docs.securecodebox.io/docs/scanners/nmap",
        },
        {
          "evidence": "ip-10-0-56-78",
          "method": "GET",
          "uri": "https://docs.securecodebox.io/1e6c7aa9.edd847c5.js",
        },
        {
          "evidence": "192.168.0.1",
          "method": "GET",
          "uri": "https://docs.securecodebox.io/docs/scanners/nikto/",
        },
        {
          "evidence": "192.168.178.0",
          "method": "GET",
          "uri": "https://docs.securecodebox.io/docs/how-tos/scanning-networks",
        },
        {
          "evidence": "192.168.178.0",
          "method": "GET",
          "uri": "https://docs.securecodebox.io/a3ff696f.8750fdc6.js",
        },
        {
          "evidence": "192.168.178.0",
          "method": "GET",
          "uri": "https://docs.securecodebox.io/docs/how-tos/scanning-networks/",
        },
        {
          "evidence": "192.168.178.0",
          "method": "GET",
          "uri": "https://docs.securecodebox.io/docs/scanners/Nmap",
        },
        {
          "evidence": "192.168.0.1",
          "method": "GET",
          "uri": "https://docs.securecodebox.io/docs/scanners/nikto",
        },
        {
          "evidence": "192.168.1.1",
          "method": "GET",
          "uri": "https://docs.securecodebox.io/71aa2dad.6919055f.js",
        },
        {
          "evidence": "192.168.0.1",
          "method": "GET",
          "uri": "https://docs.securecodebox.io/docs/scanners/ncrack",
        },
      ],
      "zap_otherinfo": "192.168.178.0",
      "zap_pluginid": "2",
      "zap_reference": "https://tools.ietf.org/html/rfc1918",
      "zap_riskcode": "1",
      "zap_solution": "Remove the private IP address from the HTTP response body.  For comments, use JSP/ASP/PHP comment instead of HTML/JavaScript comment which can be seen by client browsers.",
      "zap_wascid": "13",
    },
    "category": "Private IP Disclosure",
    "description": "A private IP (such as 10.x.x.x, 172.x.x.x, 192.168.x.x) or an Amazon EC2 private hostname (for example, ip-10-0-56-78) has been found in the HTTP response body. This information might be helpful for further attacks targeting internal systems.",
    "hint": undefined,
    "location": "https://docs.securecodebox.io",
    "name": "Private IP Disclosure",
    "osi_layer": "APPLICATION",
    "severity": "LOW",
  },
  {
    "attributes": {
      "hostname": "docs.securecodebox.io",
      "port": "443",
      "zap_confidence": "2",
      "zap_count": "83",
      "zap_cweid": null,
      "zap_finding_urls": [
        {
          "evidence": "<a aria-hidden="true" tabindex="-1" class="anchor enhancedAnchor_2cZh" id="specification-spec"></a>",
          "method": "GET",
          "uri": "https://docs.securecodebox.io/docs/api/crds/scheduled-scan",
        },
        {
          "evidence": "<script>",
          "method": "GET",
          "uri": "https://docs.securecodebox.io/main.f8a1453c.js",
        },
        {
          "evidence": "<a aria-hidden="true" tabindex="-1" class="anchor enhancedAnchor_2cZh" id="about"></a>",
          "method": "GET",
          "uri": "https://docs.securecodebox.io/docs/hooks/DefectDojo",
        },
        {
          "evidence": "<a aria-hidden="true" tabindex="-1" class="anchor enhancedAnchor_2cZh" id="deployment"></a>",
          "method": "GET",
          "uri": "https://docs.securecodebox.io/docs/scanners/gitleaks/",
        },
        {
          "evidence": "<a aria-hidden="true" tabindex="-1" class="anchor enhancedAnchor_2cZh" id="the-state-of-the-union"></a>",
          "method": "GET",
          "uri": "https://docs.securecodebox.io/blog/2020/10/12/whats-going-on",
        },
        {
          "evidence": "<a aria-hidden="true" tabindex="-1" class="anchor enhancedAnchor_2cZh" id="datapoints-collected"></a>",
          "method": "GET",
          "uri": "https://docs.securecodebox.io/docs/telemetry",
        },
        {
          "evidence": "<a aria-hidden="true" tabindex="-1" class="anchor enhancedAnchor_2cZh" id="specification-spec"></a>",
          "method": "GET",
          "uri": "https://docs.securecodebox.io/docs/api/crds/parse-definition/",
        },
        {
          "evidence": "<a aria-hidden="true" tabindex="-1" class="anchor enhancedAnchor_2cZh" id="deployment"></a>",
          "method": "GET",
          "uri": "https://docs.securecodebox.io/docs/scanners/nikto/",
        },
        {
          "evidence": "<a aria-hidden="true" tabindex="-1" class="anchor enhancedAnchor_2cZh" id="prerequisites"></a>",
          "method": "GET",
          "uri": "https://docs.securecodebox.io/docs/contributing/operator",
        },
        {
          "evidence": "<a aria-hidden="true" tabindex="-1" class="anchor enhancedAnchor_2cZh" id="making-the-blin"></a>",
          "method": "GET",
          "uri": "https://docs.securecodebox.io/blog/2020/09/08/blinmaker/",
        },
        {
          "evidence": "<a aria-hidden="true" tabindex="-1" class="anchor enhancedAnchor_2cZh" id="deployment"></a>",
          "method": "GET",
          "uri": "https://docs.securecodebox.io/docs/hooks/update-field/",
        },
        {
          "evidence": "<a aria-hidden="true" tabindex="-1" class="anchor enhancedAnchor_2cZh" id="ncrack-deployment--configuration"></a>",
          "method": "GET",
          "uri": "https://docs.securecodebox.io/docs/scanners/ncrack",
        },
        {
          "evidence": "<a aria-hidden="true" tabindex="-1" class="anchor enhancedAnchor_2cZh" id="sundown"></a>",
          "method": "GET",
          "uri": "https://docs.securecodebox.io/blog/2020/10/15/sundown-and-eol-of-version-1/",
        },
        {
          "evidence": "<a aria-hidden="true" tabindex="-1" class="anchor enhancedAnchor_2cZh" id="how-to-integrate-a-new-hook"></a>",
          "method": "GET",
          "uri": "https://docs.securecodebox.io/docs/contributing/integrating-a-hook/",
        },
        {
          "evidence": "<a aria-hidden="true" tabindex="-1" class="anchor enhancedAnchor_2cZh" id="whats-new-in-securecodebox-v2"></a>",
          "method": "GET",
          "uri": "https://docs.securecodebox.io/blog/2020/10/16/release-of-securecodebox-version-2",
        },
        {
          "evidence": "<a aria-hidden="true" tabindex="-1" class="anchor enhancedAnchor_2cZh" id="extending-securecodebox"></a>",
          "method": "GET",
          "uri": "https://docs.securecodebox.io/docs/contributing/integrating-a-scanner",
        },
        {
          "evidence": "<a aria-hidden="true" tabindex="-1" class="anchor enhancedAnchor_2cZh" id="deployment"></a>",
          "method": "GET",
          "uri": "https://docs.securecodebox.io/docs/hooks/ms-teams-webhook",
        },
        {
          "evidence": "<a aria-hidden="true" tabindex="-1" class="anchor enhancedAnchor_2cZh" id="specification-spec"></a>",
          "method": "GET",
          "uri": "https://docs.securecodebox.io/docs/api/crds/scan",
        },
        {
          "evidence": "<a aria-hidden="true" tabindex="-1" class="anchor enhancedAnchor_2cZh" id="uninstall-scanner--hook"></a>",
          "method": "GET",
          "uri": "https://docs.securecodebox.io/docs/getting-started/uninstallation/",
        },
        {
          "evidence": "<a aria-hidden="true" tabindex="-1" class="anchor enhancedAnchor_2cZh" id="about"></a>",
          "method": "GET",
          "uri": "https://docs.securecodebox.io/docs/hooks/elasticsearch/",
        },
      ],
      "zap_otherinfo": "Links have been found that do not have traditional href attributes, which is an indication that this is a modern web application.",
      "zap_pluginid": "10109",
      "zap_reference": null,
      "zap_riskcode": "0",
      "zap_solution": "This is an informational alert and so no changes are required.",
      "zap_wascid": null,
    },
    "category": "Modern Web Application",
    "description": "The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.",
    "hint": undefined,
    "location": "https://docs.securecodebox.io",
    "name": "Modern Web Application",
    "osi_layer": "APPLICATION",
    "severity": "INFORMATIONAL",
  },
  {
    "attributes": {
      "hostname": "docs.securecodebox.io",
      "port": "443",
      "zap_confidence": "2",
      "zap_count": "58",
      "zap_cweid": "201",
      "zap_finding_urls": [
        {
          "method": "GET",
          "uri": "https://docs.securecodebox.io/docs/scanners/zap",
        },
        {
          "method": "GET",
          "uri": "https://docs.securecodebox.io/blog/tags/sundown",
        },
        {
          "method": "GET",
          "uri": "https://docs.securecodebox.io/docs/api/crds/scan-completion-hook",
        },
        {
          "method": "GET",
          "uri": "https://docs.securecodebox.io/docs/scanners/Nmap",
        },
        {
          "method": "GET",
          "uri": "https://docs.securecodebox.io/docs/getting-started/uninstallation",
        },
        {
          "method": "GET",
          "uri": "https://docs.securecodebox.io/docs/api/finding",
        },
        {
          "method": "GET",
          "uri": "https://docs.securecodebox.io/blog/tags/v-2",
        },
        {
          "method": "GET",
          "uri": "https://docs.securecodebox.io/docs/scanners/ncrack",
        },
        {
          "method": "GET",
          "uri": "https://docs.securecodebox.io/blog/tags/cooking",
        },
        {
          "method": "GET",
          "uri": "https://docs.securecodebox.io/docs/how-tos/automatically-repeating-scans",
        },
        {
          "method": "GET",
          "uri": "https://docs.securecodebox.io/docs/how-tos/scanning-web-applications",
        },
        {
          "method": "GET",
          "uri": "https://docs.securecodebox.io/docs/scanners/nmap",
        },
        {
          "method": "GET",
          "uri": "https://docs.securecodebox.io/blog/tags/v-1",
        },
        {
          "method": "GET",
          "uri": "https://docs.securecodebox.io/docs/scanners/trivy",
        },
        {
          "method": "GET",
          "uri": "https://docs.securecodebox.io/docs/hooks/elasticsearch",
        },
        {
          "method": "GET",
          "uri": "https://docs.securecodebox.io/docs/telemetry",
        },
        {
          "method": "GET",
          "uri": "https://docs.securecodebox.io/docs/hooks/Elasticsearch",
        },
        {
          "method": "GET",
          "uri": "https://docs.securecodebox.io/docs/api/crds/scan",
        },
        {
          "method": "GET",
          "uri": "https://docs.securecodebox.io/docs/api/crds/parse-definition",
        },
        {
          "method": "GET",
          "uri": "https://docs.securecodebox.io/docs/how-tos/scanning-networks",
        },
      ],
      "zap_otherinfo": "Location header URI length: 19 [/docs/scanners/zap/].Predicted response size: 319.Response Body Length: 63,846.",
      "zap_pluginid": "10044",
      "zap_reference": null,
      "zap_riskcode": "1",
      "zap_solution": "Ensure that no sensitive information is leaked via redirect responses. Redirect responses should have almost no content.",
      "zap_wascid": "13",
    },
    "category": "Big Redirect Detected (Potential Sensitive Information Leak)",
    "description": "The server has responded with a redirect that seems to provide a large response. This may indicate that although the server sent a redirect it also responded with body content (which may include sensitive details, PII, etc.).",
    "hint": undefined,
    "location": "https://docs.securecodebox.io",
    "name": "Big Redirect Detected (Potential Sensitive Information Leak)",
    "osi_layer": "APPLICATION",
    "severity": "LOW",
  },
  {
    "attributes": {
      "hostname": "docs.securecodebox.io",
      "port": "443",
      "zap_confidence": "1",
      "zap_count": "33",
      "zap_cweid": "200",
      "zap_finding_urls": [
        {
          "method": "GET",
          "uri": "https://docs.securecodebox.io/26fdb175.030b75d8.js",
        },
        {
          "method": "GET",
          "uri": "https://docs.securecodebox.io/b4010e28.2d695275.js",
        },
        {
          "method": "GET",
          "uri": "https://docs.securecodebox.io/71aa2dad.6919055f.js",
        },
        {
          "method": "GET",
          "uri": "https://docs.securecodebox.io/6eda5a75.150d84a1.js",
        },
        {
          "method": "GET",
          "uri": "https://docs.securecodebox.io/a3ff696f.8750fdc6.js",
        },
        {
          "method": "GET",
          "uri": "https://docs.securecodebox.io/4465cfb6.2dca36b4.js",
        },
        {
          "method": "GET",
          "uri": "https://docs.securecodebox.io/main.f8a1453c.js",
        },
        {
          "method": "GET",
          "uri": "https://docs.securecodebox.io/0e7bd4ca.21f2ccd7.js",
        },
        {
          "method": "GET",
          "uri": "https://docs.securecodebox.io/93523fe8.14f093cb.js",
        },
        {
          "method": "GET",
          "uri": "https://docs.securecodebox.io/aefcdaa8.445ec0f9.js",
        },
        {
          "method": "GET",
          "uri": "https://docs.securecodebox.io/fc67adc7.2ae0c034.js",
        },
        {
          "method": "GET",
          "uri": "https://docs.securecodebox.io/98701709.a7141487.js",
        },
        {
          "method": "GET",
          "uri": "https://docs.securecodebox.io/06e66d46.e643e8e1.js",
        },
        {
          "method": "GET",
          "uri": "https://docs.securecodebox.io/b650ae8f.1ac2f5e8.js",
        },
        {
          "method": "GET",
          "uri": "https://docs.securecodebox.io/123d7b49.c7ac3740.js",
        },
        {
          "method": "GET",
          "uri": "https://docs.securecodebox.io/edd86307.afcc49d0.js",
        },
        {
          "method": "GET",
          "uri": "https://docs.securecodebox.io/96aff01a.23389d2b.js",
        },
        {
          "method": "GET",
          "uri": "https://docs.securecodebox.io/a41edef1.361c2485.js",
        },
        {
          "method": "GET",
          "uri": "https://docs.securecodebox.io/cb73d7b3.13965292.js",
        },
        {
          "method": "GET",
          "uri": "https://docs.securecodebox.io/3.f6078885.js",
        },
      ],
      "zap_otherinfo": "The following comment/snippet was identified via the pattern: \\bBUG\\b(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{132:function(e,t,n){"use strict";n.d(t,"a",(function(){return d})),n.d(t,"b",(function(){return f}));var o=n(0),r=n.n(o);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function s(e){for(var t=1;t=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var u=r.a.createContext({}),l=function(e){var t=r.a.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},d=function(e){var t=l(e.components);return r.a.createElement(u.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},b=r.a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,i=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),d=l(n),b=o,f=d["".concat(i,".").concat(b)]||d[b]||p[b]||a;return n?r.a.createElement(f,s(s({ref:t},u),{},{components:n})):r.a.createElement(f,s({ref:t},u))}));function f(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=b;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:o,i[1]=s;for(var u=2;u",
      "zap_pluginid": "10027",
      "zap_reference": null,
      "zap_riskcode": "0",
      "zap_solution": "Remove all comments that return information that may help an attacker and fix any underlying problems they refer to.",
      "zap_wascid": "13",
    },
    "category": "Information Disclosure - Suspicious Comments",
    "description": "The response appears to contain suspicious comments which may help an attacker. Note: Matches made within script blocks or files are against the entire content not only comments.",
    "hint": undefined,
    "location": "https://docs.securecodebox.io",
    "name": "Information Disclosure - Suspicious Comments",
    "osi_layer": "APPLICATION",
    "severity": "INFORMATIONAL",
  },
  {
    "attributes": {
      "hostname": "docs.securecodebox.io",
      "port": "443",
      "zap_confidence": "2",
      "zap_count": "57",
      "zap_cweid": "16",
      "zap_finding_urls": [
        {
          "method": "GET",
          "param": "X-Frame-Options",
          "uri": "https://docs.securecodebox.io/blog/tags/release/",
        },
        {
          "method": "GET",
          "param": "X-Frame-Options",
          "uri": "https://docs.securecodebox.io/docs/scanners/",
        },
        {
          "method": "GET",
          "param": "X-Frame-Options",
          "uri": "https://docs.securecodebox.io/docs/how-tos/automatically-repeating-scans/",
        },
        {
          "method": "GET",
          "param": "X-Frame-Options",
          "uri": "https://docs.securecodebox.io/docs/contributing/integrating-a-hook/",
        },
        {
          "method": "GET",
          "param": "X-Frame-Options",
          "uri": "https://docs.securecodebox.io/docs/hooks/elasticsearch/",
        },
        {
          "method": "GET",
          "param": "X-Frame-Options",
          "uri": "https://docs.securecodebox.io/blog/2020/09/08/blinmaker/",
        },
        {
          "method": "GET",
          "param": "X-Frame-Options",
          "uri": "https://docs.securecodebox.io/docs/api/finding/",
        },
        {
          "method": "GET",
          "param": "X-Frame-Options",
          "uri": "https://docs.securecodebox.io/blog/2020/10/16/release-of-securecodebox-version-2/",
        },
        {
          "method": "GET",
          "param": "X-Frame-Options",
          "uri": "https://docs.securecodebox.io/docs/scanners/nmap/",
        },
        {
          "method": "GET",
          "param": "X-Frame-Options",
          "uri": "https://docs.securecodebox.io/docs/scanners/wpscan/",
        },
        {
          "method": "GET",
          "param": "X-Frame-Options",
          "uri": "https://docs.securecodebox.io/blog/tags/v-2/",
        },
        {
          "method": "GET",
          "param": "X-Frame-Options",
          "uri": "https://docs.securecodebox.io/docs/how-tos/",
        },
        {
          "method": "GET",
          "param": "X-Frame-Options",
          "uri": "https://docs.securecodebox.io/docs/api/crds/cascading-rule/",
        },
        {
          "method": "GET",
          "param": "X-Frame-Options",
          "uri": "https://docs.securecodebox.io/docs/scanners/gitleaks/",
        },
        {
          "method": "GET",
          "param": "X-Frame-Options",
          "uri": "https://docs.securecodebox.io/blog/",
        },
        {
          "method": "GET",
          "param": "X-Frame-Options",
          "uri": "https://docs.securecodebox.io/docs/scanners/kubeaudit/",
        },
        {
          "method": "GET",
          "param": "X-Frame-Options",
          "uri": "https://docs.securecodebox.io/docs/hooks/defectdojo/",
        },
        {
          "method": "GET",
          "param": "X-Frame-Options",
          "uri": "https://docs.securecodebox.io/docs/scanners/nikto/",
        },
        {
          "method": "GET",
          "param": "X-Frame-Options",
          "uri": "https://docs.securecodebox.io",
        },
        {
          "method": "GET",
          "param": "X-Frame-Options",
          "uri": "https://docs.securecodebox.io/docs/scanners/kube-hunter/",
        },
      ],
      "zap_otherinfo": null,
      "zap_pluginid": "10020",
      "zap_reference": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options",
      "zap_riskcode": "2",
      "zap_solution": "Most modern Web browsers support the X-Frame-Options HTTP header. Ensure it's set on all web pages returned by your site (if you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. ALLOW-FROM allows specific websites to frame the web page in supported web browsers).",
      "zap_wascid": "15",
    },
    "category": "X-Frame-Options Header Not Set",
    "description": "X-Frame-Options header is not included in the HTTP response to protect against 'ClickJacking' attacks.",
    "hint": undefined,
    "location": "https://docs.securecodebox.io",
    "name": "X-Frame-Options Header Not Set",
    "osi_layer": "APPLICATION",
    "severity": "MEDIUM",
  },
  {
    "attributes": {
      "hostname": "docs.securecodebox.io",
      "port": "443",
      "zap_confidence": "2",
      "zap_count": "2",
      "zap_cweid": "200",
      "zap_finding_urls": [
        {
          "evidence": "java.lang.NumberFormatException: For input string:",
          "method": "GET",
          "uri": "https://docs.securecodebox.io/1e6c7aa9.edd847c5.js",
        },
        {
          "evidence": "Unterminated string constant",
          "method": "GET",
          "uri": "https://docs.securecodebox.io/3.f6078885.js",
        },
      ],
      "zap_otherinfo": null,
      "zap_pluginid": "90022",
      "zap_reference": null,
      "zap_riskcode": "2",
      "zap_solution": "Review the source code of this page. Implement custom error pages. Consider implementing a mechanism to provide a unique error reference/identifier to the client (browser) while logging the details on the server side and not exposing them to the user.",
      "zap_wascid": "13",
    },
    "category": "Application Error Disclosure",
    "description": "This page contains an error/warning message that may disclose sensitive information like the location of the file that produced the unhandled exception. This information can be used to launch further attacks against the web application. The alert could be a false positive if the error message is found inside a documentation page.",
    "hint": undefined,
    "location": "https://docs.securecodebox.io",
    "name": "Application Error Disclosure",
    "osi_layer": "APPLICATION",
    "severity": "MEDIUM",
  },
  {
    "attributes": {
      "hostname": "docs.securecodebox.io",
      "port": "443",
      "zap_confidence": "3",
      "zap_count": "6",
      "zap_cweid": "16",
      "zap_finding_urls": [
        {
          "method": "GET",
          "uri": "https://docs.securecodebox.io/robots.txt",
        },
        {
          "method": "GET",
          "uri": "https://docs.securecodebox.io/docs/hooks/Cascading%20Scans",
        },
        {
          "method": "GET",
          "uri": "https://docs.securecodebox.io/docs/api/crds/docs/contributing/integrating-a-scanner",
        },
        {
          "method": "GET",
          "uri": "https://docs.securecodebox.io/docs/crds/cascading-rule",
        },
        {
          "method": "GET",
          "uri": "https://docs.securecodebox.io/docs/crds/scan",
        },
        {
          "method": "GET",
          "uri": "https://docs.securecodebox.io/docs/crds/scan-type",
        },
      ],
      "zap_otherinfo": null,
      "zap_pluginid": "10035",
      "zap_reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.htmlhttps://owasp.org/www-community/Security_Headershttp://en.wikipedia.org/wiki/HTTP_Strict_Transport_Securityhttp://caniuse.com/stricttransportsecurityhttp://tools.ietf.org/html/rfc6797",
      "zap_riskcode": "1",
      "zap_solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.",
      "zap_wascid": "15",
    },
    "category": "Strict-Transport-Security Header Not Set",
    "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.",
    "hint": undefined,
    "location": "https://docs.securecodebox.io",
    "name": "Strict-Transport-Security Header Not Set",
    "osi_layer": "APPLICATION",
    "severity": "LOW",
  },
]
`;

exports[`Parsing the example.com results. 1`] = `
[
  {
    "attributes": {
      "hostname": "example.com",
      "port": "80",
      "zap_confidence": "3",
      "zap_count": "4",
      "zap_cweid": "200",
      "zap_finding_urls": [
        {
          "evidence": "ECS (mic/9B13)",
          "method": "GET",
          "uri": "http://example.com/robots.txt",
        },
        {
          "evidence": "ECS (mic/9A9C)",
          "method": "GET",
          "uri": "http://example.com",
        },
        {
          "evidence": "ECS (dab/4AD5)",
          "method": "GET",
          "uri": "http://example.com/sitemap.xml",
        },
        {
          "evidence": "ECS (dab/DC46)",
          "method": "GET",
          "uri": "http://example.com/",
        },
      ],
      "zap_otherinfo": null,
      "zap_pluginid": "10036",
      "zap_reference": "http://httpd.apache.org/docs/current/mod/core.html#servertokenshttp://msdn.microsoft.com/en-us/library/ff648552.aspx#ht_urlscan_007http://blogs.msdn.com/b/varunm/archive/2013/04/23/remove-unwanted-http-response-headers.aspxhttp://www.troyhunt.com/2012/02/shhh-dont-let-your-response-headers.html",
      "zap_riskcode": "1",
      "zap_solution": "Ensure that your web server, application server, load balancer, etc. is configured to suppress the "Server" header or provide generic details.",
      "zap_wascid": "13",
    },
    "category": "Server Leaks Version Information via "Server" HTTP Response Header Field",
    "description": "The web/application server is leaking version information via the "Server" HTTP response header. Access to such information may facilitate attackers identifying other vulnerabilities your web/application server is subject to.",
    "hint": undefined,
    "location": "http://example.com",
    "name": "Server Leaks Version Information via "Server" HTTP Response Header Field",
    "osi_layer": "APPLICATION",
    "severity": "LOW",
  },
  {
    "attributes": {
      "hostname": "example.com",
      "port": "80",
      "zap_confidence": "2",
      "zap_count": "4",
      "zap_cweid": null,
      "zap_finding_urls": [
        {
          "evidence": "Age: 214571",
          "method": "GET",
          "uri": "http://example.com/robots.txt",
        },
        {
          "evidence": "HIT",
          "method": "GET",
          "uri": "http://example.com",
        },
        {
          "evidence": "Age: 447454",
          "method": "GET",
          "uri": "http://example.com/sitemap.xml",
        },
        {
          "evidence": "HIT",
          "method": "GET",
          "uri": "http://example.com/",
        },
      ],
      "zap_otherinfo": "The presence of the 'Age' header indicates that that a HTTP/1.1 compliant caching server is in use.",
      "zap_pluginid": "10050",
      "zap_reference": "https://tools.ietf.org/html/rfc7234https://tools.ietf.org/html/rfc7231http://www.w3.org/Protocols/rfc2616/rfc2616-sec13.html (obsoleted by rfc7234)",
      "zap_riskcode": "0",
      "zap_solution": "Validate that the response does not contain sensitive, personal or user-specific information.  If it does, consider the use of the following HTTP response headers, to limit, or prevent the content being stored and retrieved from the cache by another user:Cache-Control: no-cache, no-store, must-revalidate, privatePragma: no-cacheExpires: 0This configuration directs both HTTP 1.0 and HTTP 1.1 compliant caching servers to not store the response, and to not retrieve the response (without validation) from the cache, in response to a similar request.",
      "zap_wascid": null,
    },
    "category": "Retrieved from Cache",
    "description": "The content was retrieved from a shared cache. If the response data is sensitive, personal or user-specific, this may result in sensitive information being leaked. In some cases, this may even result in a user gaining complete control of the session of another user, depending on the configuration of the caching components in use in their environment. This is primarily an issue where caching servers such as "proxy" caches are configured on the local network. This configuration is typically found in corporate or educational environments, for instance. ",
    "hint": undefined,
    "location": "http://example.com",
    "name": "Retrieved from Cache",
    "osi_layer": "APPLICATION",
    "severity": "INFORMATIONAL",
  },
  {
    "attributes": {
      "hostname": "example.com",
      "port": "80",
      "zap_confidence": "2",
      "zap_count": "4",
      "zap_cweid": "16",
      "zap_finding_urls": [
        {
          "method": "GET",
          "uri": "http://example.com/sitemap.xml",
        },
        {
          "method": "GET",
          "uri": "http://example.com/robots.txt",
        },
        {
          "method": "GET",
          "uri": "http://example.com/",
        },
        {
          "method": "GET",
          "uri": "http://example.com",
        },
      ],
      "zap_otherinfo": null,
      "zap_pluginid": "10038",
      "zap_reference": "https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policyhttps://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.htmlhttp://www.w3.org/TR/CSP/http://w3c.github.io/webappsec/specs/content-security-policy/csp-specification.dev.htmlhttp://www.html5rocks.com/en/tutorials/security/content-security-policy/http://caniuse.com/#feat=contentsecuritypolicyhttp://content-security-policy.com/",
      "zap_riskcode": "1",
      "zap_solution": "Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header, to achieve optimal browser support: "Content-Security-Policy" for Chrome 25+, Firefox 23+ and Safari 7+, "X-Content-Security-Policy" for Firefox 4.0+ and Internet Explorer 10+, and "X-WebKit-CSP" for Chrome 14+ and Safari 6+.",
      "zap_wascid": "15",
    },
    "category": "Content Security Policy (CSP) Header Not Set",
    "description": "Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page â€” covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.",
    "hint": undefined,
    "location": "http://example.com",
    "name": "Content Security Policy (CSP) Header Not Set",
    "osi_layer": "APPLICATION",
    "severity": "LOW",
  },
  {
    "attributes": {
      "hostname": "example.com",
      "port": "80",
      "zap_confidence": "2",
      "zap_count": "2",
      "zap_cweid": "16",
      "zap_finding_urls": [
        {
          "method": "GET",
          "param": "X-Content-Type-Options",
          "uri": "http://example.com",
        },
        {
          "method": "GET",
          "param": "X-Content-Type-Options",
          "uri": "http://example.com/",
        },
      ],
      "zap_otherinfo": "This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.At "High" threshold this scan rule will not alert on client or server error responses.",
      "zap_pluginid": "10021",
      "zap_reference": "http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspxhttps://owasp.org/www-community/Security_Headers",
      "zap_riskcode": "1",
      "zap_solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.If possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",
      "zap_wascid": "15",
    },
    "category": "X-Content-Type-Options Header Missing",
    "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",
    "hint": undefined,
    "location": "http://example.com",
    "name": "X-Content-Type-Options Header Missing",
    "osi_layer": "APPLICATION",
    "severity": "LOW",
  },
  {
    "attributes": {
      "hostname": "example.com",
      "port": "80",
      "zap_confidence": "2",
      "zap_count": "2",
      "zap_cweid": "16",
      "zap_finding_urls": [
        {
          "method": "GET",
          "param": "X-Frame-Options",
          "uri": "http://example.com",
        },
        {
          "method": "GET",
          "param": "X-Frame-Options",
          "uri": "http://example.com/",
        },
      ],
      "zap_otherinfo": null,
      "zap_pluginid": "10020",
      "zap_reference": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options",
      "zap_riskcode": "2",
      "zap_solution": "Most modern Web browsers support the X-Frame-Options HTTP header. Ensure it's set on all web pages returned by your site (if you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. ALLOW-FROM allows specific websites to frame the web page in supported web browsers).",
      "zap_wascid": "15",
    },
    "category": "X-Frame-Options Header Not Set",
    "description": "X-Frame-Options header is not included in the HTTP response to protect against 'ClickJacking' attacks.",
    "hint": undefined,
    "location": "http://example.com",
    "name": "X-Frame-Options Header Not Set",
    "osi_layer": "APPLICATION",
    "severity": "MEDIUM",
  },
]
`;

exports[`Parsing the juice-shop results. 1`] = `
[
  {
    "attributes": {
      "hostname": "juice-shop",
      "port": "3000",
      "zap_confidence": "2",
      "zap_count": "99",
      "zap_cweid": "264",
      "zap_finding_urls": [
        {
          "evidence": "Access-Control-Allow-Origin: *",
          "method": "GET",
          "uri": "http://juice-shop:3000/socket.io/?EIO=3&transport=polling&t=NLFK7mu&sid=0b5CIcRfebjeUP6IAAAN",
        },
        {
          "evidence": "Access-Control-Allow-Origin: *",
          "method": "GET",
          "uri": "http://juice-shop:3000/polyfills-es5.js",
        },
        {
          "evidence": "Access-Control-Allow-Origin: *",
          "method": "GET",
          "uri": "http://juice-shop:3000/ftp/quarantine/juicy_malware_windows_64.exe.url",
        },
        {
          "evidence": "Access-Control-Allow-Origin: *",
          "method": "GET",
          "uri": "http://juice-shop:3000/socket.io/?EIO=3&transport=polling&t=NLFJzM-",
        },
        {
          "evidence": "Access-Control-Allow-Origin: *",
          "method": "GET",
          "uri": "http://juice-shop:3000/ftp",
        },
        {
          "evidence": "Access-Control-Allow-Origin: *",
          "method": "GET",
          "uri": "http://juice-shop:3000/rest/admin/application-configuration",
        },
        {
          "evidence": "Access-Control-Allow-Origin: *",
          "method": "GET",
          "uri": "http://juice-shop:3000/rest/products/search?q=",
        },
        {
          "evidence": "Access-Control-Allow-Origin: *",
          "method": "GET",
          "uri": "http://juice-shop:3000/ftp/eastere.gg",
        },
        {
          "evidence": "Access-Control-Allow-Origin: *",
          "method": "GET",
          "uri": "http://juice-shop:3000/assets/public/images/carousel/4.jpg",
        },
        {
          "evidence": "Access-Control-Allow-Origin: *",
          "method": "GET",
          "uri": "http://juice-shop:3000/ftp/suspicious_errors.yml",
        },
        {
          "evidence": "Access-Control-Allow-Origin: *",
          "method": "GET",
          "uri": "http://juice-shop:3000/ftp/coupons_2013.md.bak",
        },
        {
          "evidence": "Access-Control-Allow-Origin: *",
          "method": "GET",
          "uri": "http://juice-shop:3000/socket.io/?EIO=3&transport=polling&t=NLFJzWy&sid=NHcMgUohTH8k9p2zAAAL",
        },
        {
          "evidence": "Access-Control-Allow-Origin: *",
          "method": "GET",
          "uri": "http://juice-shop:3000/main-es5.js",
        },
        {
          "evidence": "Access-Control-Allow-Origin: *",
          "method": "GET",
          "uri": "http://juice-shop:3000/assets/public/images/products/permafrost.jpg",
        },
        {
          "evidence": "Access-Control-Allow-Origin: *",
          "method": "GET",
          "uri": "http://juice-shop:3000/rest/continue-code",
        },
        {
          "evidence": "Access-Control-Allow-Origin: *",
          "method": "GET",
          "uri": "http://juice-shop:3000/main-es2018.js",
        },
        {
          "evidence": "Access-Control-Allow-Origin: *",
          "method": "GET",
          "uri": "http://juice-shop:3000/ftp/quarantine/juicy_malware_linux_amd_64.url",
        },
        {
          "evidence": "Access-Control-Allow-Origin: *",
          "method": "GET",
          "uri": "http://juice-shop:3000/socket.io/?EIO=3&transport=polling&t=NLFJwR_",
        },
        {
          "evidence": "Access-Control-Allow-Origin: *",
          "method": "GET",
          "uri": "http://juice-shop:3000/sitemap.xml",
        },
        {
          "evidence": "Access-Control-Allow-Origin: *",
          "method": "GET",
          "uri": "http://juice-shop:3000/socket.io/?EIO=3&transport=polling&t=NLFJkNZ",
        },
      ],
      "zap_otherinfo": "The CORS misconfiguration on the web server permits cross-domain read requests from arbitrary third party domains, using unauthenticated APIs on this domain. Web browser implementations do not permit arbitrary third parties to read the response from authenticated APIs, however. This reduces the risk somewhat. This misconfiguration could be used by an attacker to access data that is available in an unauthenticated manner, but which uses some other form of security, such as IP address white-listing.",
      "zap_pluginid": "10098",
      "zap_reference": "http://www.hpenterprisesecurity.com/vulncat/en/vulncat/vb/html5_overly_permissive_cors_policy.html",
      "zap_riskcode": "2",
      "zap_solution": "Ensure that sensitive data is not available in an unauthenticated manner (using IP address white-listing, for instance).Configure the "Access-Control-Allow-Origin" HTTP header to a more restrictive set of domains, or remove all CORS headers entirely, to allow the web browser to enforce the Same Origin Policy (SOP) in a more restrictive manner.",
      "zap_wascid": "14",
    },
    "category": "Cross-Domain Misconfiguration",
    "description": "Web browser data loading may be possible, due to a Cross Origin Resource Sharing (CORS) misconfiguration on the web server",
    "hint": undefined,
    "location": "http://juice-shop:3000",
    "name": "Cross-Domain Misconfiguration",
    "osi_layer": "APPLICATION",
    "severity": "MEDIUM",
  },
  {
    "attributes": {
      "hostname": "juice-shop",
      "port": "3000",
      "zap_confidence": "1",
      "zap_count": "19",
      "zap_cweid": "20",
      "zap_finding_urls": [
        {
          "method": "GET",
          "param": "sid",
          "uri": "http://juice-shop:3000/socket.io/?EIO=3&transport=polling&t=NLFJiBX&sid=i44E23_d7HysXmYyAAAF",
        },
        {
          "method": "GET",
          "param": "sid",
          "uri": "http://juice-shop:3000/socket.io/?EIO=3&transport=polling&t=NLFJZAS&sid=xm0oUZMe5lefHrYkAAAB",
        },
        {
          "method": "GET",
          "param": "sid",
          "uri": "http://juice-shop:3000/socket.io/?EIO=3&transport=polling&t=NLFJkP3&sid=L5sTGQm7gTPIvgamAAAG",
        },
        {
          "method": "GET",
          "param": "sid",
          "uri": "http://juice-shop:3000/socket.io/?EIO=3&transport=polling&t=NLFJwTQ&sid=m1nJpf-U7x4l9EdgAAAK",
        },
        {
          "method": "GET",
          "param": "sid",
          "uri": "http://juice-shop:3000/socket.io/?EIO=3&transport=polling&t=NLFJv2N&sid=PktdCTeisMU99B0XAAAJ",
        },
        {
          "method": "GET",
          "param": "sid",
          "uri": "http://juice-shop:3000/socket.io/?EIO=3&transport=polling&t=NLFJec3&sid=N2BAvk-LoI6ydM_fAAAD",
        },
        {
          "method": "POST",
          "param": "sid",
          "uri": "http://juice-shop:3000/socket.io/?EIO=3&transport=polling&t=NLFJYaS&sid=r2xfyQoKfs1Qc7gKAAAA",
        },
        {
          "method": "GET",
          "param": "sid",
          "uri": "http://juice-shop:3000/socket.io/?EIO=3&transport=polling&t=NLFJc38&sid=RwTg5sM3urRvTowDAAAC",
        },
        {
          "method": "GET",
          "param": "sid",
          "uri": "http://juice-shop:3000/socket.io/?EIO=3&transport=polling&t=NLFKABn&sid=OP1vxyAS7ESoZCFeAAAO",
        },
        {
          "method": "GET",
          "param": "sid",
          "uri": "http://juice-shop:3000/socket.io/?EIO=3&transport=polling&t=NLFJzWy&sid=NHcMgUohTH8k9p2zAAAL",
        },
        {
          "method": "GET",
          "param": "sid",
          "uri": "http://juice-shop:3000/socket.io/?EIO=3&transport=polling&t=NLFJfF2&sid=QfhYpBR7a8XY6KopAAAE",
        },
        {
          "method": "GET",
          "param": "sid",
          "uri": "http://juice-shop:3000/socket.io/?EIO=3&transport=polling&t=NLFJqEu&sid=Qno6lcSl69M4txIfAAAI",
        },
        {
          "method": "GET",
          "param": "sid",
          "uri": "http://juice-shop:3000/socket.io/?EIO=3&transport=polling&t=NLFJmDG&sid=5CB4rI51v9EBwoLaAAAH",
        },
        {
          "method": "GET",
          "param": "sid",
          "uri": "http://juice-shop:3000/socket.io/?EIO=3&transport=polling&t=NLFJYaU&sid=r2xfyQoKfs1Qc7gKAAAA",
        },
        {
          "method": "POST",
          "param": "sid",
          "uri": "http://juice-shop:3000/socket.io/?EIO=3&transport=polling&t=NLFJYh4&sid=r2xfyQoKfs1Qc7gKAAAA",
        },
        {
          "method": "GET",
          "param": "sid",
          "uri": "http://juice-shop:3000/socket.io/?EIO=3&transport=polling&t=NLFJYKz&sid=r2xfyQoKfs1Qc7gKAAAA",
        },
        {
          "method": "GET",
          "param": "sid",
          "uri": "http://juice-shop:3000/socket.io/?EIO=3&transport=polling&t=NLFK7mu&sid=0b5CIcRfebjeUP6IAAAN",
        },
        {
          "method": "GET",
          "param": "sid",
          "uri": "http://juice-shop:3000/socket.io/?EIO=3&transport=polling&t=NLFK4S_&sid=Snz1P_3VBpE70slrAAAM",
        },
        {
          "method": "GET",
          "param": "sid",
          "uri": "http://juice-shop:3000/socket.io/?EIO=3&transport=polling&t=NLFKC2m&sid=wTbs-39HN_Hq77_nAAAP",
        },
      ],
      "zap_otherinfo": "An attacker may be able to poison cookie values through URL parameters.  Try injecting a semicolon to see if you can add cookie values (e.g. name=controlledValue;name=anotherValue;).This was identified at:http://juice-shop:3000/socket.io/?EIO=3&transport=polling&t=NLFJiBX&sid=i44E23_d7HysXmYyAAAFUser-input was found in the following cookie:io=i44E23_d7HysXmYyAAAF; Path=/; HttpOnly; SameSite=StrictThe user input was:sid=i44E23_d7HysXmYyAAAF",
      "zap_pluginid": "10029",
      "zap_reference": "http://websecuritytool.codeplex.com/wikipage?title=Checks#user-controlled-cookie",
      "zap_riskcode": "0",
      "zap_solution": "Do not allow user input to control cookie names and values. If some query string parameters must be set in cookie values, be sure to filter out semicolon's that can serve as name/value pair delimiters.",
      "zap_wascid": "20",
    },
    "category": "Cookie Poisoning",
    "description": "This check looks at user-supplied input in query string parameters and POST data to identify where cookie parameters might be controlled. This is called a cookie poisoning attack, and becomes exploitable when an attacker can manipulate the cookie in various ways. In some cases this will not be exploitable, however, allowing URL parameters to set cookie values is generally considered a bug.",
    "hint": undefined,
    "location": "http://juice-shop:3000",
    "name": "Cookie Poisoning",
    "osi_layer": "APPLICATION",
    "severity": "INFORMATIONAL",
  },
  {
    "attributes": {
      "hostname": "juice-shop",
      "port": "3000",
      "zap_confidence": "1",
      "zap_count": "29",
      "zap_cweid": "200",
      "zap_finding_urls": [
        {
          "evidence": "1970691216",
          "method": "GET",
          "uri": "http://juice-shop:3000/rest/admin/application-configuration",
        },
        {
          "evidence": "1970691216",
          "method": "GET",
          "uri": "http://juice-shop:3000/rest/products/search?q=",
        },
        {
          "evidence": "179464974",
          "method": "GET",
          "uri": "http://juice-shop:3000/vendor-es5.js",
        },
        {
          "evidence": "0000039834",
          "method": "GET",
          "uri": "http://juice-shop:3000/vendor-es5.js",
        },
        {
          "evidence": "597720130",
          "method": "GET",
          "uri": "http://juice-shop:3000/vendor-es2018.js",
        },
        {
          "evidence": "1801948466",
          "method": "GET",
          "uri": "http://juice-shop:3000/vendor-es2018.js",
        },
        {
          "evidence": "1803700518",
          "method": "GET",
          "uri": "http://juice-shop:3000/vendor-es5.js",
        },
        {
          "evidence": "33335333",
          "method": "GET",
          "uri": "http://juice-shop:3000/styles.css",
        },
        {
          "evidence": "0000051215",
          "method": "GET",
          "uri": "http://juice-shop:3000/vendor-es5.js",
        },
        {
          "evidence": "33333333",
          "method": "GET",
          "uri": "http://juice-shop:3000/styles.css",
        },
        {
          "evidence": "0000000005",
          "method": "GET",
          "uri": "http://juice-shop:3000/vendor-es2018.js",
        },
        {
          "evidence": "0000000005",
          "method": "GET",
          "uri": "http://juice-shop:3000/vendor-es5.js",
        },
        {
          "evidence": "33334333",
          "method": "GET",
          "uri": "http://juice-shop:3000/styles.css",
        },
        {
          "evidence": "94906265",
          "method": "GET",
          "uri": "http://juice-shop:3000/polyfills-es5.js",
        },
        {
          "evidence": "1801949248",
          "method": "GET",
          "uri": "http://juice-shop:3000/vendor-es2018.js",
        },
        {
          "evidence": "1801948466",
          "method": "GET",
          "uri": "http://juice-shop:3000/vendor-es5.js",
        },
        {
          "evidence": "1803700518",
          "method": "GET",
          "uri": "http://juice-shop:3000/vendor-es2018.js",
        },
        {
          "evidence": "1969196030",
          "method": "GET",
          "uri": "http://juice-shop:3000/rest/admin/application-configuration",
        },
        {
          "evidence": "62425156",
          "method": "GET",
          "uri": "http://juice-shop:3000/polyfills-es5.js",
        },
        {
          "evidence": "597720130",
          "method": "GET",
          "uri": "http://juice-shop:3000/vendor-es5.js",
        },
      ],
      "zap_otherinfo": "1970691216, which evaluates to: 2032-06-12 22:13:36",
      "zap_pluginid": "10096",
      "zap_reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "zap_riskcode": "0",
      "zap_solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "zap_wascid": "13",
    },
    "category": "Timestamp Disclosure - Unix",
    "description": "A timestamp was disclosed by the application/web server - Unix",
    "hint": undefined,
    "location": "http://juice-shop:3000",
    "name": "Timestamp Disclosure - Unix",
    "osi_layer": "APPLICATION",
    "severity": "INFORMATIONAL",
  },
  {
    "attributes": {
      "hostname": "juice-shop",
      "port": "3000",
      "zap_confidence": "3",
      "zap_count": "35",
      "zap_cweid": "200",
      "zap_finding_urls": [
        {
          "evidence": "m1nJpf-U7x4l9EdgAAAK",
          "method": "GET",
          "param": "sid",
          "uri": "http://juice-shop:3000/socket.io/?EIO=3&transport=polling&t=NLFJwTQ&sid=m1nJpf-U7x4l9EdgAAAK",
        },
        {
          "evidence": "N2BAvk-LoI6ydM_fAAAD",
          "method": "GET",
          "param": "sid",
          "uri": "http://juice-shop:3000/socket.io/?EIO=3&transport=websocket&sid=N2BAvk-LoI6ydM_fAAAD",
        },
        {
          "evidence": "OP1vxyAS7ESoZCFeAAAO",
          "method": "GET",
          "param": "sid",
          "uri": "http://juice-shop:3000/socket.io/?EIO=3&transport=polling&t=NLFKABn&sid=OP1vxyAS7ESoZCFeAAAO",
        },
        {
          "evidence": "N2BAvk-LoI6ydM_fAAAD",
          "method": "GET",
          "param": "sid",
          "uri": "http://juice-shop:3000/socket.io/?EIO=3&transport=polling&t=NLFJec3&sid=N2BAvk-LoI6ydM_fAAAD",
        },
        {
          "evidence": "PktdCTeisMU99B0XAAAJ",
          "method": "GET",
          "param": "sid",
          "uri": "http://juice-shop:3000/socket.io/?EIO=3&transport=websocket&sid=PktdCTeisMU99B0XAAAJ",
        },
        {
          "evidence": "r2xfyQoKfs1Qc7gKAAAA",
          "method": "GET",
          "param": "sid",
          "uri": "http://juice-shop:3000/socket.io/?EIO=3&transport=polling&t=NLFJYaU&sid=r2xfyQoKfs1Qc7gKAAAA",
        },
        {
          "evidence": "RwTg5sM3urRvTowDAAAC",
          "method": "GET",
          "param": "sid",
          "uri": "http://juice-shop:3000/socket.io/?EIO=3&transport=websocket&sid=RwTg5sM3urRvTowDAAAC",
        },
        {
          "evidence": "NHcMgUohTH8k9p2zAAAL",
          "method": "GET",
          "param": "sid",
          "uri": "http://juice-shop:3000/socket.io/?EIO=3&transport=websocket&sid=NHcMgUohTH8k9p2zAAAL",
        },
        {
          "evidence": "PktdCTeisMU99B0XAAAJ",
          "method": "GET",
          "param": "sid",
          "uri": "http://juice-shop:3000/socket.io/?EIO=3&transport=polling&t=NLFJv2N&sid=PktdCTeisMU99B0XAAAJ",
        },
        {
          "evidence": "m1nJpf-U7x4l9EdgAAAK",
          "method": "GET",
          "param": "sid",
          "uri": "http://juice-shop:3000/socket.io/?EIO=3&transport=websocket&sid=m1nJpf-U7x4l9EdgAAAK",
        },
        {
          "evidence": "r2xfyQoKfs1Qc7gKAAAA",
          "method": "POST",
          "param": "sid",
          "uri": "http://juice-shop:3000/socket.io/?EIO=3&transport=polling&t=NLFJYh4&sid=r2xfyQoKfs1Qc7gKAAAA",
        },
        {
          "evidence": "wTbs-39HN_Hq77_nAAAP",
          "method": "GET",
          "param": "sid",
          "uri": "http://juice-shop:3000/socket.io/?EIO=3&transport=websocket&sid=wTbs-39HN_Hq77_nAAAP",
        },
        {
          "evidence": "Snz1P_3VBpE70slrAAAM",
          "method": "GET",
          "param": "sid",
          "uri": "http://juice-shop:3000/socket.io/?EIO=3&transport=websocket&sid=Snz1P_3VBpE70slrAAAM",
        },
        {
          "evidence": "r2xfyQoKfs1Qc7gKAAAA",
          "method": "GET",
          "param": "sid",
          "uri": "http://juice-shop:3000/socket.io/?EIO=3&transport=websocket&sid=r2xfyQoKfs1Qc7gKAAAA",
        },
        {
          "evidence": "Qno6lcSl69M4txIfAAAI",
          "method": "GET",
          "param": "sid",
          "uri": "http://juice-shop:3000/socket.io/?EIO=3&transport=polling&t=NLFJqEu&sid=Qno6lcSl69M4txIfAAAI",
        },
        {
          "evidence": "5CB4rI51v9EBwoLaAAAH",
          "method": "GET",
          "param": "sid",
          "uri": "http://juice-shop:3000/socket.io/?EIO=3&transport=polling&t=NLFJmDG&sid=5CB4rI51v9EBwoLaAAAH",
        },
        {
          "evidence": "0b5CIcRfebjeUP6IAAAN",
          "method": "GET",
          "param": "sid",
          "uri": "http://juice-shop:3000/socket.io/?EIO=3&transport=websocket&sid=0b5CIcRfebjeUP6IAAAN",
        },
        {
          "evidence": "wTbs-39HN_Hq77_nAAAP",
          "method": "GET",
          "param": "sid",
          "uri": "http://juice-shop:3000/socket.io/?EIO=3&transport=polling&t=NLFKC2m&sid=wTbs-39HN_Hq77_nAAAP",
        },
        {
          "evidence": "QfhYpBR7a8XY6KopAAAE",
          "method": "GET",
          "param": "sid",
          "uri": "http://juice-shop:3000/socket.io/?EIO=3&transport=websocket&sid=QfhYpBR7a8XY6KopAAAE",
        },
        {
          "evidence": "L5sTGQm7gTPIvgamAAAG",
          "method": "GET",
          "param": "sid",
          "uri": "http://juice-shop:3000/socket.io/?EIO=3&transport=polling&t=NLFJkP3&sid=L5sTGQm7gTPIvgamAAAG",
        },
      ],
      "zap_otherinfo": null,
      "zap_pluginid": "3",
      "zap_reference": "http://seclists.org/lists/webappsec/2002/Oct-Dec/0111.html",
      "zap_riskcode": "2",
      "zap_solution": "For secure content, put session ID in a cookie. To be even more secure consider using a combination of cookie and URL rewrite.",
      "zap_wascid": "13",
    },
    "category": "Session ID in URL Rewrite",
    "description": "URL rewrite is used to track user session ID. The session ID may be disclosed via cross-site referer header. In addition, the session ID might be stored in browser history or server logs.",
    "hint": undefined,
    "location": "http://juice-shop:3000",
    "name": "Session ID in URL Rewrite",
    "osi_layer": "APPLICATION",
    "severity": "MEDIUM",
  },
  {
    "attributes": {
      "hostname": "juice-shop",
      "port": "3000",
      "zap_confidence": "2",
      "zap_count": "7",
      "zap_cweid": null,
      "zap_finding_urls": [
        {
          "evidence": "<script src="//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js"></script>",
          "method": "GET",
          "uri": "http://juice-shop:3000",
        },
        {
          "evidence": "<script>",
          "method": "GET",
          "uri": "http://juice-shop:3000/polyfills-es2018.js",
        },
        {
          "evidence": "<script src="//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js"></script>",
          "method": "GET",
          "uri": "http://juice-shop:3000/sitemap.xml",
        },
        {
          "evidence": "<a>",'",
          "method": "GET",
          "uri": "http://juice-shop:3000/tutorial-es2018.js",
        },
        {
          "evidence": "<script src="//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js"></script>",
          "method": "GET",
          "uri": "http://juice-shop:3000/",
        },
        {
          "evidence": "<a>",
          "method": "GET",
          "uri": "http://juice-shop:3000/polyfills-es5.js",
        },
        {
          "evidence": "<a href="">ftp</a>",
          "method": "GET",
          "uri": "http://juice-shop:3000/ftp/",
        },
      ],
      "zap_otherinfo": "No links have been found while there are scripts, which is an indication that this is a modern web application.",
      "zap_pluginid": "10109",
      "zap_reference": null,
      "zap_riskcode": "0",
      "zap_solution": "This is an informational alert and so no changes are required.",
      "zap_wascid": null,
    },
    "category": "Modern Web Application",
    "description": "The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.",
    "hint": undefined,
    "location": "http://juice-shop:3000",
    "name": "Modern Web Application",
    "osi_layer": "APPLICATION",
    "severity": "INFORMATIONAL",
  },
  {
    "attributes": {
      "hostname": "juice-shop",
      "port": "3000",
      "zap_confidence": "1",
      "zap_count": "35",
      "zap_cweid": "565",
      "zap_finding_urls": [
        {
          "method": "GET",
          "uri": "http://juice-shop:3000/socket.io/?EIO=3&transport=polling&t=NLFJiBX&sid=i44E23_d7HysXmYyAAAF",
        },
        {
          "method": "GET",
          "uri": "http://juice-shop:3000/socket.io/?EIO=3&transport=polling&t=NLFJf4l",
        },
        {
          "method": "GET",
          "uri": "http://juice-shop:3000/socket.io/?EIO=3&transport=polling&t=NLFJmAk",
        },
        {
          "method": "GET",
          "uri": "http://juice-shop:3000/socket.io/?EIO=3&transport=polling&t=NLFJv2N&sid=PktdCTeisMU99B0XAAAJ",
        },
        {
          "method": "GET",
          "uri": "http://juice-shop:3000/socket.io/?EIO=3&transport=polling&t=NLFJkNZ",
        },
        {
          "method": "GET",
          "uri": "http://juice-shop:3000/socket.io/?EIO=3&transport=polling&t=NLFKC1F",
        },
        {
          "method": "POST",
          "uri": "http://juice-shop:3000/socket.io/?EIO=3&transport=polling&t=NLFJYaS&sid=r2xfyQoKfs1Qc7gKAAAA",
        },
        {
          "method": "GET",
          "uri": "http://juice-shop:3000/socket.io/?EIO=3&transport=polling&t=NLFJq6f",
        },
        {
          "method": "GET",
          "uri": "http://juice-shop:3000/socket.io/?EIO=3&transport=polling&t=NLFJc38&sid=RwTg5sM3urRvTowDAAAC",
        },
        {
          "method": "GET",
          "uri": "http://juice-shop:3000/socket.io/?EIO=3&transport=polling&t=NLFKAAX",
        },
        {
          "method": "GET",
          "uri": "http://juice-shop:3000/socket.io/?EIO=3&transport=polling&t=NLFJeSU",
        },
        {
          "method": "GET",
          "uri": "http://juice-shop:3000/socket.io/?EIO=3&transport=polling&t=NLFJec3&sid=N2BAvk-LoI6ydM_fAAAD",
        },
        {
          "method": "POST",
          "uri": "http://juice-shop:3000/socket.io/?EIO=3&transport=polling&t=NLFJYh4&sid=r2xfyQoKfs1Qc7gKAAAA",
        },
        {
          "method": "GET",
          "uri": "http://juice-shop:3000/socket.io/?EIO=3&transport=polling&t=NLFK4Is",
        },
        {
          "method": "GET",
          "uri": "http://juice-shop:3000/socket.io/?EIO=3&transport=polling&t=NLFJY_O",
        },
        {
          "method": "GET",
          "uri": "http://juice-shop:3000/socket.io/?EIO=3&transport=polling&t=NLFJwTQ&sid=m1nJpf-U7x4l9EdgAAAK",
        },
        {
          "method": "GET",
          "uri": "http://juice-shop:3000/socket.io/?EIO=3&transport=polling&t=NLFJfF2&sid=QfhYpBR7a8XY6KopAAAE",
        },
        {
          "method": "GET",
          "uri": "http://juice-shop:3000/socket.io/?EIO=3&transport=polling&t=NLFJZAS&sid=xm0oUZMe5lefHrYkAAAB",
        },
        {
          "method": "GET",
          "uri": "http://juice-shop:3000/socket.io/?EIO=3&transport=polling&t=NLFK7mu&sid=0b5CIcRfebjeUP6IAAAN",
        },
        {
          "method": "GET",
          "uri": "http://juice-shop:3000/socket.io/?EIO=3&transport=polling&t=NLFJwR_",
        },
      ],
      "zap_otherinfo": "The origin domain used for comparison was: juice-shopio=i44E23_d7HysXmYyAAAF",
      "zap_pluginid": "90033",
      "zap_reference": "https://tools.ietf.org/html/rfc6265#section-4.1https://owasp.org/www-project-web-security-testing-guide/v41/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes.htmlhttp://code.google.com/p/browsersec/wiki/Part2#Same-origin_policy_for_cookies",
      "zap_riskcode": "0",
      "zap_solution": "Always scope cookies to a FQDN (Fully Qualified Domain Name).",
      "zap_wascid": "15",
    },
    "category": "Loosely Scoped Cookie",
    "description": "Cookies can be scoped by domain or path. This check is only concerned with domain scope.The domain scope applied to a cookie determines which domains can access it. For example, a cookie can be scoped strictly to a subdomain e.g. www.nottrusted.com, or loosely scoped to a parent domain e.g. nottrusted.com. In the latter case, any subdomain of nottrusted.com can access the cookie. Loosely scoped cookies are common in mega-applications like google.com and live.com. Cookies set from a subdomain like app.foo.bar are transmitted only to that domain by the browser. However, cookies scoped to a parent-level domain may be transmitted to the parent, or any subdomain of the parent.",
    "hint": undefined,
    "location": "http://juice-shop:3000",
    "name": "Loosely Scoped Cookie",
    "osi_layer": "APPLICATION",
    "severity": "INFORMATIONAL",
  },
  {
    "attributes": {
      "hostname": "juice-shop",
      "port": "3000",
      "zap_confidence": "2",
      "zap_count": "35",
      "zap_cweid": "16",
      "zap_finding_urls": [
        {
          "method": "GET",
          "param": "X-Content-Type-Options",
          "uri": "http://juice-shop:3000/socket.io/?EIO=3&transport=polling&t=NLFJzM-",
        },
        {
          "method": "GET",
          "param": "X-Content-Type-Options",
          "uri": "http://juice-shop:3000/socket.io/?EIO=3&transport=polling&t=NLFJYKz&sid=r2xfyQoKfs1Qc7gKAAAA",
        },
        {
          "method": "GET",
          "param": "X-Content-Type-Options",
          "uri": "http://juice-shop:3000/socket.io/?EIO=3&transport=polling&t=NLFJc38&sid=RwTg5sM3urRvTowDAAAC",
        },
        {
          "method": "GET",
          "param": "X-Content-Type-Options",
          "uri": "http://juice-shop:3000/socket.io/?EIO=3&transport=polling&t=NLFK7mu&sid=0b5CIcRfebjeUP6IAAAN",
        },
        {
          "method": "GET",
          "param": "X-Content-Type-Options",
          "uri": "http://juice-shop:3000/socket.io/?EIO=3&transport=polling&t=NLFJwR_",
        },
        {
          "method": "GET",
          "param": "X-Content-Type-Options",
          "uri": "http://juice-shop:3000/socket.io/?EIO=3&transport=polling&t=NLFJv0-",
        },
        {
          "method": "GET",
          "param": "X-Content-Type-Options",
          "uri": "http://juice-shop:3000/socket.io/?EIO=3&transport=polling&t=NLFKABn&sid=OP1vxyAS7ESoZCFeAAAO",
        },
        {
          "method": "GET",
          "param": "X-Content-Type-Options",
          "uri": "http://juice-shop:3000/socket.io/?EIO=3&transport=polling&t=NLFJmAk",
        },
        {
          "method": "GET",
          "param": "X-Content-Type-Options",
          "uri": "http://juice-shop:3000/socket.io/?EIO=3&transport=polling&t=NLFJkNZ",
        },
        {
          "method": "GET",
          "param": "X-Content-Type-Options",
          "uri": "http://juice-shop:3000/socket.io/?EIO=3&transport=polling&t=NLFJeSU",
        },
        {
          "method": "GET",
          "param": "X-Content-Type-Options",
          "uri": "http://juice-shop:3000/socket.io/?EIO=3&transport=polling&t=NLFJYaU&sid=r2xfyQoKfs1Qc7gKAAAA",
        },
        {
          "method": "GET",
          "param": "X-Content-Type-Options",
          "uri": "http://juice-shop:3000/socket.io/?EIO=3&transport=polling&t=NLFJY_O",
        },
        {
          "method": "POST",
          "param": "X-Content-Type-Options",
          "uri": "http://juice-shop:3000/socket.io/?EIO=3&transport=polling&t=NLFJYaS&sid=r2xfyQoKfs1Qc7gKAAAA",
        },
        {
          "method": "GET",
          "param": "X-Content-Type-Options",
          "uri": "http://juice-shop:3000/socket.io/?EIO=3&transport=polling&t=NLFJfF2&sid=QfhYpBR7a8XY6KopAAAE",
        },
        {
          "method": "GET",
          "param": "X-Content-Type-Options",
          "uri": "http://juice-shop:3000/socket.io/?EIO=3&transport=polling&t=NLFJq6f",
        },
        {
          "method": "GET",
          "param": "X-Content-Type-Options",
          "uri": "http://juice-shop:3000/socket.io/?EIO=3&transport=polling&t=NLFJZAS&sid=xm0oUZMe5lefHrYkAAAB",
        },
        {
          "method": "GET",
          "param": "X-Content-Type-Options",
          "uri": "http://juice-shop:3000/socket.io/?EIO=3&transport=polling&t=NLFJh_q",
        },
        {
          "method": "GET",
          "param": "X-Content-Type-Options",
          "uri": "http://juice-shop:3000/socket.io/?EIO=3&transport=polling&t=NLFK7eA",
        },
        {
          "method": "GET",
          "param": "X-Content-Type-Options",
          "uri": "http://juice-shop:3000/socket.io/?EIO=3&transport=polling&t=NLFKC1F",
        },
        {
          "method": "GET",
          "param": "X-Content-Type-Options",
          "uri": "http://juice-shop:3000/socket.io/?EIO=3&transport=polling&t=NLFK4Is",
        },
      ],
      "zap_otherinfo": "This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.At "High" threshold this scan rule will not alert on client or server error responses.",
      "zap_pluginid": "10021",
      "zap_reference": "http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspxhttps://owasp.org/www-community/Security_Headers",
      "zap_riskcode": "1",
      "zap_solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.If possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",
      "zap_wascid": "15",
    },
    "category": "X-Content-Type-Options Header Missing",
    "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",
    "hint": undefined,
    "location": "http://juice-shop:3000",
    "name": "X-Content-Type-Options Header Missing",
    "osi_layer": "APPLICATION",
    "severity": "LOW",
  },
  {
    "attributes": {
      "hostname": "juice-shop",
      "port": "3000",
      "zap_confidence": "1",
      "zap_count": "7",
      "zap_cweid": "200",
      "zap_finding_urls": [
        {
          "method": "GET",
          "uri": "http://juice-shop:3000/tutorial-es2018.js",
        },
        {
          "method": "GET",
          "uri": "http://juice-shop:3000/main-es5.js",
        },
        {
          "method": "GET",
          "uri": "http://juice-shop:3000/vendor-es2018.js",
        },
        {
          "method": "GET",
          "uri": "http://juice-shop:3000/main-es2018.js",
        },
        {
          "method": "GET",
          "uri": "http://juice-shop:3000/polyfills-es2018.js",
        },
        {
          "method": "GET",
          "uri": "http://juice-shop:3000/vendor-es5.js",
        },
        {
          "method": "GET",
          "uri": "http://juice-shop:3000/polyfills-es5.js",
        },
      ],
      "zap_otherinfo": "The following comment/snippet was identified via the pattern: \\bQUERY\\b(window.webpackJsonp=window.webpackJsonp||[]).push([[5],{s2oO:function(e,t,o){"use strict";o.r(t),o.d(t,"hasInstructions",(function(){return q})),o.d(t,"startHackingInstructorFor",(function(){return M}));var a={"":["",""],_:["",""],"\\n":[""]," ":[""],"-":[""]};function r(e){return e.replace(RegExp("^"+(e.match(/^(\\t| )+/)||"")[0],"gm"),"")}function n(e){return(e+"").replace(/"/g,"&quot;").replace(//g,"&gt;")}function i(e){return new Promise(t=>{setTimeout(t,e)})}function s(e,t,o={ignoreCase:!0}){return async()=>{const a=document.querySelector(e);for(;a.value!==t&&(!o.ignoreCase||a.value.toLowerCase()!==t.toLowerCase());)await i(100)}}function l(e,t,o={ignoreCase:!0}){return async()=>{const a=document.querySelector(e);for(;a.value===t&&(!o.ignoreCase||a.value.toLowerCase()!==t.toLowerCase());)await i(100)}}function u(e){return async()=>{const t=document.querySelector(e);for(;!t.value||""===t.value;)await i(100)}}function p(e){return async()=>{const t=document.querySelector(e);t||console.warn(\`Could not find Element with selector "\${e}"\`),await new Promise(e=>{t.addEventListener("click",()=>e())})}}function d(e,t){return async()=>{for(;;){const o=document.querySelector(e);if(o&&o.innerHTML===t)break;await i(100)}}}function c(e){return()=>i(e)}function h(e){return async()=>{for(;window.location.hash!=="#/"+e;)await i(100)}}function f(){return async()=>{for(;null===localStorage.getItem("token");)await i(100)}}function m(){return async()=>{for(;null!==localStorage.getItem("token");)await i(100)}}function g(){let e=!1;const t=new Image;return Object.defineProperty(t,"id",{get:function(){e=!0}}),async()=>{for(;console.dir(t),!e;)await i(100)}}const b={name:"Login Admin",hints:[{text:"To start this challenge, you'll have to log out first.",fixture:"#navbarAccount",unskippable:!0,resolved:m()},{text:"Let's try if we find a way to log in with the administrator's user account. To begin, go to the _Login_ page via the _Account_ menu.",fixture:"app-navbar"...",
      "zap_pluginid": "10027",
      "zap_reference": null,
      "zap_riskcode": "0",
      "zap_solution": "Remove all comments that return information that may help an attacker and fix any underlying problems they refer to.",
      "zap_wascid": "13",
    },
    "category": "Information Disclosure - Suspicious Comments",
    "description": "The response appears to contain suspicious comments which may help an attacker. Note: Matches made within script blocks or files are against the entire content not only comments.",
    "hint": undefined,
    "location": "http://juice-shop:3000",
    "name": "Information Disclosure - Suspicious Comments",
    "osi_layer": "APPLICATION",
    "severity": "INFORMATIONAL",
  },
  {
    "attributes": {
      "hostname": "juice-shop",
      "port": "3000",
      "zap_confidence": "2",
      "zap_count": "13",
      "zap_cweid": "16",
      "zap_finding_urls": [
        {
          "method": "GET",
          "uri": "http://juice-shop:3000/ftp/coupons_2013.md.bak",
        },
        {
          "method": "POST",
          "uri": "http://juice-shop:3000/socket.io/?EIO=3&transport=polling&t=NLFJYh4&sid=r2xfyQoKfs1Qc7gKAAAA",
        },
        {
          "method": "GET",
          "uri": "http://juice-shop:3000/ftp/",
        },
        {
          "method": "GET",
          "uri": "http://juice-shop:3000/",
        },
        {
          "method": "GET",
          "uri": "http://juice-shop:3000",
        },
        {
          "method": "GET",
          "uri": "http://juice-shop:3000/sitemap.xml",
        },
        {
          "method": "GET",
          "uri": "http://juice-shop:3000/ftp/package.json.bak",
        },
        {
          "method": "GET",
          "uri": "http://juice-shop:3000/ftp/suspicious_errors.yml",
        },
        {
          "method": "POST",
          "uri": "http://juice-shop:3000/socket.io/?EIO=3&transport=polling&t=NLFJYaS&sid=r2xfyQoKfs1Qc7gKAAAA",
        },
        {
          "method": "GET",
          "uri": "http://juice-shop:3000/ftp/eastere.gg",
        },
        {
          "method": "GET",
          "uri": "http://juice-shop:3000/ftp/quarantine",
        },
        {
          "method": "GET",
          "uri": "http://juice-shop:3000/ftp",
        },
        {
          "method": "GET",
          "uri": "http://juice-shop:3000/ftp/encrypt.pyc",
        },
      ],
      "zap_otherinfo": null,
      "zap_pluginid": "10038",
      "zap_reference": "https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policyhttps://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.htmlhttp://www.w3.org/TR/CSP/http://w3c.github.io/webappsec/specs/content-security-policy/csp-specification.dev.htmlhttp://www.html5rocks.com/en/tutorials/security/content-security-policy/http://caniuse.com/#feat=contentsecuritypolicyhttp://content-security-policy.com/",
      "zap_riskcode": "1",
      "zap_solution": "Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header, to achieve optimal browser support: "Content-Security-Policy" for Chrome 25+, Firefox 23+ and Safari 7+, "X-Content-Security-Policy" for Firefox 4.0+ and Internet Explorer 10+, and "X-WebKit-CSP" for Chrome 14+ and Safari 6+.",
      "zap_wascid": "15",
    },
    "category": "Content Security Policy (CSP) Header Not Set",
    "description": "Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page â€” covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.",
    "hint": undefined,
    "location": "http://juice-shop:3000",
    "name": "Content Security Policy (CSP) Header Not Set",
    "osi_layer": "APPLICATION",
    "severity": "LOW",
  },
  {
    "attributes": {
      "hostname": "juice-shop",
      "port": "3000",
      "zap_confidence": "2",
      "zap_count": "6",
      "zap_cweid": "829",
      "zap_finding_urls": [
        {
          "evidence": "<script src="//cdnjs.cloudflare.com/ajax/libs/jquery/2.2.4/jquery.min.js"></script>",
          "method": "GET",
          "param": "//cdnjs.cloudflare.com/ajax/libs/jquery/2.2.4/jquery.min.js",
          "uri": "http://juice-shop:3000",
        },
        {
          "evidence": "<script src="//cdnjs.cloudflare.com/ajax/libs/jquery/2.2.4/jquery.min.js"></script>",
          "method": "GET",
          "param": "//cdnjs.cloudflare.com/ajax/libs/jquery/2.2.4/jquery.min.js",
          "uri": "http://juice-shop:3000/sitemap.xml",
        },
        {
          "evidence": "<script src="//cdnjs.cloudflare.com/ajax/libs/jquery/2.2.4/jquery.min.js"></script>",
          "method": "GET",
          "param": "//cdnjs.cloudflare.com/ajax/libs/jquery/2.2.4/jquery.min.js",
          "uri": "http://juice-shop:3000/",
        },
        {
          "evidence": "<script src="//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js"></script>",
          "method": "GET",
          "param": "//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js",
          "uri": "http://juice-shop:3000/",
        },
        {
          "evidence": "<script src="//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js"></script>",
          "method": "GET",
          "param": "//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js",
          "uri": "http://juice-shop:3000/sitemap.xml",
        },
        {
          "evidence": "<script src="//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js"></script>",
          "method": "GET",
          "param": "//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js",
          "uri": "http://juice-shop:3000",
        },
      ],
      "zap_otherinfo": null,
      "zap_pluginid": "10017",
      "zap_reference": null,
      "zap_riskcode": "1",
      "zap_solution": "Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.",
      "zap_wascid": "15",
    },
    "category": "Cross-Domain JavaScript Source File Inclusion",
    "description": "The page includes one or more script files from a third-party domain.",
    "hint": undefined,
    "location": "http://juice-shop:3000",
    "name": "Cross-Domain JavaScript Source File Inclusion",
    "osi_layer": "APPLICATION",
    "severity": "LOW",
  },
  {
    "attributes": {
      "hostname": "juice-shop",
      "port": "3000",
      "zap_confidence": "2",
      "zap_count": "2",
      "zap_cweid": "16",
      "zap_finding_urls": [
        {
          "method": "POST",
          "param": "X-Frame-Options",
          "uri": "http://juice-shop:3000/socket.io/?EIO=3&transport=polling&t=NLFJYh4&sid=r2xfyQoKfs1Qc7gKAAAA",
        },
        {
          "method": "POST",
          "param": "X-Frame-Options",
          "uri": "http://juice-shop:3000/socket.io/?EIO=3&transport=polling&t=NLFJYaS&sid=r2xfyQoKfs1Qc7gKAAAA",
        },
      ],
      "zap_otherinfo": null,
      "zap_pluginid": "10020",
      "zap_reference": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options",
      "zap_riskcode": "2",
      "zap_solution": "Most modern Web browsers support the X-Frame-Options HTTP header. Ensure it's set on all web pages returned by your site (if you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. ALLOW-FROM allows specific websites to frame the web page in supported web browsers).",
      "zap_wascid": "15",
    },
    "category": "X-Frame-Options Header Not Set",
    "description": "X-Frame-Options header is not included in the HTTP response to protect against 'ClickJacking' attacks.",
    "hint": undefined,
    "location": "http://juice-shop:3000",
    "name": "X-Frame-Options Header Not Set",
    "osi_layer": "APPLICATION",
    "severity": "MEDIUM",
  },
  {
    "attributes": {
      "hostname": "juice-shop",
      "port": "3000",
      "zap_confidence": "2",
      "zap_count": "1",
      "zap_cweid": "200",
      "zap_finding_urls": [
        {
          "evidence": "192.168.99.100:3000",
          "method": "GET",
          "uri": "http://juice-shop:3000/rest/admin/application-configuration",
        },
      ],
      "zap_otherinfo": "192.168.99.100:3000",
      "zap_pluginid": "2",
      "zap_reference": "https://tools.ietf.org/html/rfc1918",
      "zap_riskcode": "1",
      "zap_solution": "Remove the private IP address from the HTTP response body.  For comments, use JSP/ASP/PHP comment instead of HTML/JavaScript comment which can be seen by client browsers.",
      "zap_wascid": "13",
    },
    "category": "Private IP Disclosure",
    "description": "A private IP (such as 10.x.x.x, 172.x.x.x, 192.168.x.x) or an Amazon EC2 private hostname (for example, ip-10-0-56-78) has been found in the HTTP response body. This information might be helpful for further attacks targeting internal systems.",
    "hint": undefined,
    "location": "http://juice-shop:3000",
    "name": "Private IP Disclosure",
    "osi_layer": "APPLICATION",
    "severity": "LOW",
  },
]
`;
