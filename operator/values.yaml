# Default values for operator.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# telemetryEnabled -- The Operator sends anonymous telemetry data, to give the team an overview how much the secureCodeBox is used. Find out more at https://www.securecodebox.io/telemetry
telemetryEnabled: true

image:
  # image.repository -- The operator image repository
  repository: docker.io/scbexperimental/operator
  # image.tag -- Parser image tag
  # @default -- defaults to the charts version
  tag: null
  # image.pullPolicy -- Image pull policy
  pullPolicy: Always

securityContext:
  # securityContext.runAsNonRoot -- Enforces that the Operator image is run as a non root user
  runAsNonRoot: true
  # securityContext.readOnlyRootFilesystem -- Prevents write access to the containers file system
  readOnlyRootFilesystem: true
  # securityContext.allowPrivilegeEscalation -- Ensure that users privileges cannot be escalated
  allowPrivilegeEscalation: false
  # securityContext.privileged -- Ensures that the operator container is not run in privileged mode
  privileged: false
  capabilities:
    drop:
      # securityContext.capabilities.drop[0] -- This drops all linux privileges from the operator container. They are not required
      - all

lurcher:
  image:
    # lurcher.image.repository -- The operator image repository
    repository: docker.io/scbexperimental/lurcher
    # lurcher.image.tag -- Parser image tag
    # @default -- defaults to the charts version
    tag: null
    # lurcher.image.pullPolicy -- Image pull policy
    pullPolicy: Always

minio:
  # minio.enabled Enable this to use minio as storage backend instead of a cloud bucket provider like AWS S3, Google Cloud Storage, DigitalOcean Spaces etc.
  enabled: true
  defaultBucket:
    enabled: true
    name: "securecodebox"
  # Overwrite Minio's default 4Gi memory request
  resources:
    requests:
      memory: "256Mi"

# Config for external s3 systems
s3:
  # s3.enabled Enable this and disable minio if you want to directly connect agains AWS S3, Google Cloud Storage, DigitalOcean Spaces etc.
  enabled: false
  endpoint: "fra1.digitaloceanspaces.com"
  bucket: "my-bucket"
  # Implicit 443. You probably only need to change this when the system uses a non default port
  port: null
  # Name to a k8s secret in the same namespace as this release with credentials to the s3 bucket
  # By default this assumes to have 'accesskey' and 'secretkey' as attributes
  # Example creation via kubectl:
  # kubectl create secret generic my-secret --from-literal=accessKey="******" --from-literal=secretKey="******"
  keySecret: my-secret
  # Names to the attributes in the s3 secret
  secretAttributeNames:
    accesskey: accesskey
    secretkey: secretkey

#
# Config for the operator ressource limits
#
# resources -- CPU/memory resource requests/limits (see: https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/, https://kubernetes.io/docs/tasks/configure-pod-container/assign-cpu-resource/)
resources:
  limits:
    cpu: 100m
    memory: 30Mi
  requests:
    cpu: 100m
    memory: 20Mi
