# SPDX-FileCopyrightText: 2020 iteratec GmbH
#
# SPDX-License-Identifier: Apache-2.0

apiVersion: apps/v1
kind: Deployment
metadata:
  name: securecodebox-controller-manager
  namespace: {{ .Release.Namespace }}
  labels:
    control-plane: securecodebox-controller-manager
spec:
  selector:
    matchLabels:
      control-plane: securecodebox-controller-manager
  replicas: 1
  template:
    metadata:
      labels:
        control-plane: securecodebox-controller-manager
    spec:
      {{- if .Values.customCACertificate.existingCertificate }}
      volumes:
        - name: ca-certificate
          configMap:
            name: {{ .Values.customCACertificate.existingCertificate }}
      {{- end }}
      serviceAccountName: {{ .Values.serviceAccount.name }}
      securityContext:
        {{ .Values.podSecurityContext | toYaml | nindent 8 }}
      containers:
        - command:
            - /manager
          args:
            - --enable-leader-election
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.Version }}"
          {{- if .Values.customCACertificate.existingCertificate }}
          volumeMounts:
            - name: ca-certificate
              mountPath: /etc/ssl/certs/{{ .Values.customCACertificate.certificate }}
              subPath: {{ .Values.customCACertificate.certificate }}
          {{- end }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          name: manager
          env:
            - name: TELEMETRY_ENABLED
              value: {{ .Values.telemetryEnabled | quote }}
            - name: VERSION
              value: {{ .Chart.Version | quote }}
            # TODO: integrate with cert manager and auto gen a cert for minio
            {{- if .Values.minio.enabled }}
            - name: S3_USE_SSL
              value: "{{ .Values.minio.tls.enabled }}"
            - name: S3_ENDPOINT
              value: "{{ .Release.Name }}-minio.{{ .Release.Namespace }}.svc.cluster.local"
            - name: S3_PORT
              value: '9000'
            - name:  MINIO_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: "{{ .Release.Name }}-minio"
                  key: accesskey
            - name: MINIO_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: "{{ .Release.Name }}-minio"
                  key: secretkey
            - name: S3_BUCKET
              value: {{ .Values.minio.defaultBucket.name }}
            {{- else }}
            - name: S3_USE_SSL
              # Always use tls when connecting to outside the cluster.
              value: "true"
            - name: S3_ENDPOINT
              value: {{ .Values.s3.endpoint | quote }}
            - name: S3_BUCKET
              value: {{ .Values.s3.bucket }}
            {{- if .Values.s3.port }}
            - name: S3_PORT
              value: {{ .Values.s3.port }}
            {{- end }}
            - name: S3_AUTH_TYPE
              value: {{ .Values.s3.authType }}
            {{- if eq .Values.s3.authType "access-secret-key" }}
            - name:  MINIO_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.s3.keySecret }}
                  key: {{ .Values.s3.secretAttributeNames.accesskey }}
            - name: MINIO_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.s3.keySecret }}
                  key: {{ .Values.s3.secretAttributeNames.secretkey }}
            {{- end }}
            {{- if eq .Values.s3.authType "aws-irsa" }}
            - name: S3_AWS_IRSA_STS_ENDPOINT
              value: {{ .Values.s3.awsStsEndpoint | quote }}
            {{- end }}
            {{- end }}
            - name: LURCHER_IMAGE
              value: "{{ .Values.lurcher.image.repository }}:{{ .Values.lurcher.image.tag | default .Chart.Version }}"
            - name: LURCHER_PULL_POLICY
              value: {{ .Values.lurcher.image.pullPolicy }}
            {{- if .Values.customCACertificate.existingCertificate }}
            - name: CUSTOM_CA_CERTIFICATE_EXISTING_CERTIFICATE
              value: {{ .Values.customCACertificate.existingCertificate | quote }}
            - name: CUSTOM_CA_CERTIFICATE_NAME
              value: {{ .Values.customCACertificate.certificate | quote }}
            {{ end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
      terminationGracePeriodSeconds: 10
