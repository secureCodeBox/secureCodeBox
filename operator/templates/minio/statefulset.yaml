# SPDX-FileCopyrightText: the secureCodeBox authors
#
# SPDX-License-Identifier: Apache-2.0

{{- if .Values.minio.enabled }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "operator.fullname" . }}-minio
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "operator.labels" . | nindent 4 }}
    app.kubernetes.io/component: minio
spec:
  serviceName: {{ include "operator.fullname" . }}-minio
  replicas: 1
  selector:
    matchLabels:
      {{- include "operator.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: minio
  template:
    metadata:
      labels:
        {{- include "operator.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: minio
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      containers:
        - name: minio
          image: {{ .Values.minio.image.repository }}:{{ .Values.minio.image.tag }}
          imagePullPolicy: {{ .Values.minio.image.pullPolicy }}
          command:
            - /bin/bash
            - -c
          args:
            - |
              set -e
              echo "Starting minio server..."
              minio server /data --console-address ":9001" &
              MINIO_PID=$!
              
              echo "Waiting for minio to be ready..."
              sleep 5
              
              echo "Creating bucket: $MINIO_DEFAULT_BUCKETS"
              mc alias set myminio http://localhost:9000 $MINIO_ROOT_USER $MINIO_ROOT_PASSWORD
              mc mb myminio/$MINIO_DEFAULT_BUCKETS --ignore-existing || true
              echo "Bucket creation completed"
              
              wait $MINIO_PID
          env:
            - name: MINIO_ROOT_USER
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.minio.auth.existingSecret | default (printf "%s-minio" (include "operator.fullname" .)) }}
                  key: root-user
            - name: MINIO_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.minio.auth.existingSecret | default (printf "%s-minio" (include "operator.fullname" .)) }}
                  key: root-password
            - name: MINIO_DEFAULT_BUCKETS
              value: {{ .Values.minio.defaultBuckets | quote }}
          ports:
            - name: api
              containerPort: 9000
              protocol: TCP
            - name: console
              containerPort: 9001
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /minio/health/live
              port: api
            initialDelaySeconds: 30
            periodSeconds: 30
            timeoutSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /minio/health/ready
              port: api
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 3
          resources:
            {{- toYaml .Values.minio.resources | nindent 12 }}
          volumeMounts:
            - name: data
              mountPath: /data
          securityContext:
            runAsNonRoot: true
            runAsUser: 1000
            runAsGroup: 1000
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            seccompProfile:
              type: RuntimeDefault
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes: [ "ReadWriteOnce" ]
        {{- if .Values.minio.persistence.storageClass }}
        storageClassName: {{ .Values.minio.persistence.storageClass | quote }}
        {{- end }}
        resources:
          requests:
            storage: {{ .Values.minio.persistence.size | quote }}
{{- end }}